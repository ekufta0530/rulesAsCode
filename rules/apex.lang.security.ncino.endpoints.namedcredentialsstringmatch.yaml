id: apex.lang.security.ncino.endpoints.namedcredentialsstringmatch.named-credentials-string-match
min-version: 1.44.0
severity: ERROR
languages:
- apex
metadata:
  cwe:
  - 'CWE-540: Inclusion of Sensitive Information in Source Code'
  impact: HIGH
  likelihood: LOW
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  technology:
  - salesforce
  references:
  - https://cwe.mitre.org/data/definitions/540.html
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Mishandled Sensitive Information
  source: https://semgrep.dev/r/apex.lang.security.ncino.endpoints.namedcredentialsstringmatch.named-credentials-string-match
  shortlink: https://sg.run/zzZz
  semgrep.dev:
    rule:
      r_id: 72417
      rv_id: 108989
      rule_id: PeUy2y
      version_id: qkT2xB2
      url: https://semgrep.dev/playground/r/qkT2xB2/apex.lang.security.ncino.endpoints.namedcredentialsstringmatch.named-credentials-string-match
      origin: community
message: Named Credentials (and callout endpoints) should be used instead of hard-coding
  credentials. 1. Hard-coded credentials are hard to maintain when mixed in with application
  code. 2. It is particularly hard to update hard-coded credentials when they are
  used amongst different classes. 3. Granting a developer access to the codebase means
  granting knowledge of credentials, and thus keeping a two-level access is not possible.
  4. Using different credentials for different environments is troublesome and error-prone.
pattern: $REQUEST.setHeader('Authorization', $AUTHSTRING);
