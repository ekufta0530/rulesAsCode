id: go.lang.security.audit.dangerous-exec-cmd.dangerous-exec-cmd
patterns:
- pattern-either:
  - patterns:
    - pattern: 'exec.Cmd {...,Path: $CMD,...}

        '
    - pattern-not: 'exec.Cmd {...,Path: "...",...}

        '
    - pattern-not-inside: '$CMD,$ERR := exec.LookPath("...");

        ...

        '
    - pattern-not-inside: '$CMD = "...";

        ...

        '
  - patterns:
    - pattern: 'exec.Cmd {...,Args: $ARGS,...}

        '
    - pattern-not: 'exec.Cmd {...,Args: []string{...},...}

        '
    - pattern-not-inside: '$ARGS = []string{"...",...};

        ...

        '
    - pattern-not-inside: '$CMD = "...";

        ...

        $ARGS = []string{$CMD,...};

        ...

        '
    - pattern-not-inside: '$CMD = exec.LookPath("...");

        ...

        $ARGS = []string{$CMD,...};

        ...

        '
  - patterns:
    - pattern: 'exec.Cmd {...,Args: []string{$CMD,...},...}

        '
    - pattern-not: 'exec.Cmd {...,Args: []string{"...",...},...}

        '
    - pattern-not-inside: '$CMD,$ERR := exec.LookPath("...");

        ...

        '
    - pattern-not-inside: '$CMD = "...";

        ...

        '
  - patterns:
    - pattern-either:
      - pattern: 'exec.Cmd {...,Args: []string{"=~/(sh|bash|ksh|csh|tcsh|zsh)/","-c",$EXE,...},...}

          '
      - patterns:
        - pattern: 'exec.Cmd {...,Args: []string{$CMD,"-c",$EXE,...},...}

            '
        - pattern-inside: '$CMD,$ERR := exec.LookPath("=~/(sh|bash|ksh|csh|tcsh|zsh)/");

            ...

            '
    - pattern-not: 'exec.Cmd {...,Args: []string{"...","...","...",...},...}

        '
    - pattern-not-inside: '$EXE = "...";

        ...

        '
- pattern-inside: 'import "os/exec"

    ...

    '
message: Detected non-static command inside exec.Cmd. Audit the input to 'exec.Cmd'.
  If unverified user data can reach this call site, this is a code injection vulnerability.
  A malicious actor can inject a malicious script to execute arbitrary code.
metadata:
  cwe:
  - 'CWE-94: Improper Control of Generation of Code (''Code Injection'')'
  owasp:
  - A03:2021 - Injection
  category: security
  technology:
  - go
  confidence: MEDIUM
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  cwe2022-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: HIGH
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/go.lang.security.audit.dangerous-exec-cmd.dangerous-exec-cmd
  shortlink: https://sg.run/Dorj
  semgrep.dev:
    rule:
      r_id: 9108
      rv_id: 109608
      rule_id: 2ZUb8l
      version_id: rxTyLpr
      url: https://semgrep.dev/playground/r/rxTyLpr/go.lang.security.audit.dangerous-exec-cmd.dangerous-exec-cmd
      origin: community
severity: ERROR
languages:
- go
