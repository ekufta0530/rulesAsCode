id: go.lang.security.audit.net.formatted-template-string.formatted-template-string
message: Found a formatted template string passed to 'template.HTML()'. 'template.HTML()'
  does not escape contents. Be absolutely sure there is no user-controlled data in
  this template. If user data can reach this template, you may have a XSS vulnerability.
metadata:
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://golang.org/pkg/html/template/#HTML
  category: security
  technology:
  - go
  confidence: MEDIUM
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/go.lang.security.audit.net.formatted-template-string.formatted-template-string
  shortlink: https://sg.run/weE0
  semgrep.dev:
    rule:
      r_id: 9129
      rv_id: 109617
      rule_id: 8GUjDW
      version_id: d6TrA0v
      url: https://semgrep.dev/playground/r/d6TrA0v/go.lang.security.audit.net.formatted-template-string.formatted-template-string
      origin: community
languages:
- go
severity: WARNING
patterns:
- pattern-not: template.HTML("..." + "...")
- pattern-either:
  - pattern: template.HTML($T + $X, ...)
  - pattern: template.HTML(fmt.$P("...", ...), ...)
  - pattern: '$T = "..."

      ...

      $T = $FXN(..., $T, ...)

      ...

      template.HTML($T, ...)

      '
  - pattern: '$T = fmt.$P("...", ...)

      ...

      template.HTML($T, ...)

      '
  - pattern: '$T, $ERR = fmt.$P("...", ...)

      ...

      template.HTML($T, ...)

      '
  - pattern: '$T = $X + $Y

      ...

      template.HTML($T, ...)

      '
  - pattern: '$T = "..."

      ...

      $OTHER, $ERR = fmt.$P(..., $T, ...)

      ...

      template.HTML($OTHER, ...)'
