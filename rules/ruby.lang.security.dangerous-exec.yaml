id: ruby.lang.security.dangerous-exec.dangerous-exec
mode: taint
pattern-sources:
- patterns:
  - pattern: "def $F(...,$ARG,...)\n    ...\nend\n"
  - focus-metavariable: $ARG
- pattern: params
- pattern: cookies
pattern-sinks:
- patterns:
  - pattern: '$EXEC(...)

      '
  - pattern-not: '$EXEC("...","...","...",...)

      '
  - pattern-not: '$EXEC(["...","...","...",...],...)

      '
  - pattern-not: '$EXEC({...},"...","...","...",...)

      '
  - pattern-not: '$EXEC({...},["...","...","...",...],...)

      '
  - metavariable-regex:
      metavariable: $EXEC
      regex: ^(system|exec|spawn|Process.exec|Process.spawn|Open3.capture2|Open3.capture2e|Open3.capture3|Open3.popen2|Open3.popen2e|Open3.popen3|IO.popen|Gem::Util.popen|PTY.spawn)$
message: Detected non-static command inside $EXEC. Audit the input to '$EXEC'. If
  unverified user data can reach this call site, this is a code injection vulnerability.
  A malicious actor can inject a malicious script to execute arbitrary code.
metadata:
  source-rule-url: https://github.com/presidentbeef/brakeman/blob/main/lib/brakeman/checks/check_execute.rb
  cwe:
  - 'CWE-94: Improper Control of Generation of Code (''Code Injection'')'
  owasp:
  - A03:2021 - Injection
  category: security
  technology:
  - ruby
  - rails
  references:
  - https://guides.rubyonrails.org/security.html#command-line-injection
  cwe2022-top25: true
  subcategory:
  - vuln
  likelihood: MEDIUM
  impact: HIGH
  confidence: MEDIUM
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/ruby.lang.security.dangerous-exec.dangerous-exec
  shortlink: https://sg.run/R8GY
  semgrep.dev:
    rule:
      r_id: 9805
      rv_id: 110516
      rule_id: WAUZOw
      version_id: yeTRZBK
      url: https://semgrep.dev/playground/r/yeTRZBK/ruby.lang.security.dangerous-exec.dangerous-exec
      origin: community
severity: WARNING
languages:
- ruby
