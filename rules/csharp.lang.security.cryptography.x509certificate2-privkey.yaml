id: csharp.lang.security.cryptography.x509certificate2-privkey.X509Certificate2-privkey
severity: WARNING
languages:
- C#
metadata:
  cwe:
  - 'CWE-310: CWE CATEGORY: Cryptographic Issues'
  owasp:
  - A02:2021 - Cryptographic Failures
  references:
  - https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509certificate2.privatekey
  category: security
  technology:
  - .net
  confidence: LOW
  subcategory:
  - audit
  likelihood: LOW
  impact: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cryptographic Issues
  source: https://semgrep.dev/r/csharp.lang.security.cryptography.x509certificate2-privkey.X509Certificate2-privkey
  shortlink: https://sg.run/jDeN
  semgrep.dev:
    rule:
      r_id: 18221
      rv_id: 109195
      rule_id: QrUk26
      version_id: o5TgloA
      url: https://semgrep.dev/playground/r/o5TgloA/csharp.lang.security.cryptography.x509certificate2-privkey.X509Certificate2-privkey
      origin: community
message: 'X509Certificate2.PrivateKey is obsolete. Use a method such as GetRSAPrivateKey()
  or GetECDsaPrivateKey(). Alternatively, use the CopyWithPrivateKey() method to create
  a new instance with a private key. Further, if you set X509Certificate2.PrivateKey
  to `null` or set it to another key without deleting it first, the private key will
  be left on disk. '
patterns:
- pattern-inside: 'using System.Security.Cryptography;

    ...

    '
- pattern-either:
  - pattern-inside: 'X509Certificate2Collection $COLLECTION = ...;

      ...

      '
  - pattern-inside: 'X509Certificate2 $CERT = ...;

      ...

      '
- pattern: $CERT.PrivateKey
