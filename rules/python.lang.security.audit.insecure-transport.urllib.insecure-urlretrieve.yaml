id: python.lang.security.audit.insecure-transport.urllib.insecure-urlretrieve.insecure-urlretrieve
message: Detected 'urllib.urlretrieve()' using 'http://'. This request will not be
  encrypted. Use 'https://' instead.
metadata:
  owasp:
  - A03:2017 - Sensitive Data Exposure
  - A02:2021 - Cryptographic Failures
  cwe:
  - 'CWE-319: Cleartext Transmission of Sensitive Information'
  references:
  - https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve
  category: security
  technology:
  - urllib
  subcategory:
  - audit
  likelihood: LOW
  impact: LOW
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Mishandled Sensitive Information
  source: https://semgrep.dev/r/python.lang.security.audit.insecure-transport.urllib.insecure-urlretrieve.insecure-urlretrieve
  shortlink: https://sg.run/1Zqw
  semgrep.dev:
    rule:
      r_id: 9666
      rv_id: 110409
      rule_id: kxUk4N
      version_id: pZT1L1L
      url: https://semgrep.dev/playground/r/pZT1L1L/python.lang.security.audit.insecure-transport.urllib.insecure-urlretrieve.insecure-urlretrieve
      origin: community
severity: WARNING
languages:
- python
fix-regex:
  regex: '[Hh][Tt][Tt][Pp]://'
  replacement: https://
pattern-either:
- pattern: urllib.request.urlretrieve("=~/[Hh][Tt][Tt][Pp]://.*/", ...)
- pattern: '$URL = "=~/[Hh][Tt][Tt][Pp]://.*/"

    ...

    urllib.request.urlretrieve($URL, ...)

    '
- pattern: "def $FUNC(..., $URL = \"=~/[Hh][Tt][Tt][Pp]://.*/\", ...):\n  ...\n  urllib.request.urlretrieve($URL,\
    \ ...)\n"
