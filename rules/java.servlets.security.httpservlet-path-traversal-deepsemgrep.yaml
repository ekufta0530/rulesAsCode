id: java.servlets.security.httpservlet-path-traversal-deepsemgrep.httpservlet-path-traversal-deepsemgrep
message: The application builds a file path from potentially untrusted data, which
  can lead to a path traversal vulnerability. An attacker can manipulate the file
  path which the application uses to access files. If the application does not validate
  user input and sanitize file paths, sensitive files such as configuration or user
  data can be accessed, potentially creating or overwriting files. To prevent this
  vulnerability, validate and sanitize any input that is used to create references
  to file paths. Also, enforce strict file access controls. For example, choose privileges
  allowing public-facing applications to access only the required files. In Java,
  you may also consider using a utility method such as `org.apache.commons.io.FilenameUtils.getName(...)`
  to only retrieve the file name from the path.
severity: ERROR
metadata:
  likelihood: HIGH
  impact: MEDIUM
  confidence: HIGH
  interfile: true
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')'
  cwe2021-top25: true
  cwe2022-top25: true
  functional-categories:
  - web::source::cookie::Servlet
  - web::source::http-params::Servlet
  - web::source::http-body::Servlet
  - web::source::header::Servlet
  - file::sink::file-access::java.io
  - file::sink::file-access::commons-io
  - file::sink::file-access::javax.xml
  owasp:
  - A05:2017 - Broken Access Control
  - A01:2021 - Broken Access Control
  references:
  - https://www.owasp.org/index.php/Path_Traversal
  source-rule-url: https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN
  technology:
  - java
  - servlets
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Path Traversal
  source: https://semgrep.dev/r/java.servlets.security.httpservlet-path-traversal-deepsemgrep.httpservlet-path-traversal-deepsemgrep
  shortlink: https://sg.run/O5Xk
  semgrep.dev:
    rule:
      r_id: 40131
      rv_id: 111590
      rule_id: ZqUyo7
      version_id: 44TR6B2
      url: https://semgrep.dev/playground/r/44TR6B2/java.servlets.security.httpservlet-path-traversal-deepsemgrep.httpservlet-path-traversal-deepsemgrep
      origin: pro_rules
languages:
- java
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern: '(HttpServletRequest $REQ).$REQFUNC(...)

        '
    - pattern: "(ServletRequest $REQ).$REQFUNC(...) \n"
  - metavariable-regex:
      metavariable: $REQFUNC
      regex: (getInputStream|getParameter|getParameterMap|getParameterValues|getReader|getCookies|getHeader|getHeaderNames|getHeaders|getPart|getParts|getQueryString)
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern: new File(...)
    - pattern: new java.io.File(...)
    - pattern: new FileReader(...)
    - pattern: new java.io.FileReader(...)
    - pattern: new FileInputStream(...)
    - pattern: new java.io.FileInputStream(...)
    - pattern: (Paths $PATHS).get(...)
    - patterns:
      - pattern: '$CLASS.$FUNC(...)

          '
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(getResourceAsStream|getResource)$
    - patterns:
      - pattern-either:
        - pattern: new FileOutputStream($FILE, ...)
        - pattern: new java.io.FileOutputStream($FILE, ...)
        - pattern: new StreamSource($FILE, ...)
        - pattern: new javax.xml.transform.StreamSource($FILE, ...)
        - pattern: FileUtils.openOutputStream($FILE, ...)
      - focus-metavariable: $FILE
pattern-sanitizers:
- pattern: org.apache.commons.io.FilenameUtils.getName(...)
