id: elixir.lang.security.rce-code.rce-code
message: Untrusted input might be injected into a evaluation statement executed by
  the application, which can lead to a remote code execution. An attacker can execute
  arbitrary Elixir code, potentially gaining complete control of the system. To prevent
  this vulnerability, avoid evaluating Elixir code with user input through the `Code.eval_*`
  functions. If this is unavoidable, validate and sanitize the input, and use safe
  methods for executing the commands.
severity: WARNING
metadata:
  likelihood: MEDIUM
  impact: HIGH
  confidence: MEDIUM
  category: security
  subcategory:
  - audit
  cwe:
  - 'CWE-94: Improper Control of Generation of Code (''Code Injection'')'
  owasp:
  - A03:2021 - Injection
  references:
  - https://owasp.org/Top10/A03_2021-Injection/
  technology:
  - elixir
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/elixir.lang.security.rce-code.rce-code
  shortlink: https://sg.run/DbKyW
  semgrep.dev:
    rule:
      r_id: 114608
      rv_id: 256998
      rule_id: OrUN8l5
      version_id: qkT1Y3Z
      url: https://semgrep.dev/playground/r/qkT1Y3Z/elixir.lang.security.rce-code.rce-code
      origin: pro_rules
languages:
- elixir
min-version: 1.55.2
patterns:
- pattern-either:
  - patterns:
    - pattern: Code.$STRING_FUNCS($ARG)
    - pattern-not: Code.$STRING_FUNCS("...")
    - metavariable-regex:
        metavariable: $STRING_FUNCS
        regex: ^(eval_string|eval_file)$
    - focus-metavariable: $ARG
  - patterns:
    - pattern: Code.$META_FUNCS(...)
    - metavariable-regex:
        metavariable: $META_FUNCS
        regex: ^(eval_quoted|eval_quoted_with_env)$
