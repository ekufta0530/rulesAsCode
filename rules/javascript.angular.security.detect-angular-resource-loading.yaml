id: javascript.angular.security.detect-angular-resource-loading.detect-angular-resource-loading
message: $sceDelegateProvider allowlisting can introduce security issues if wildcards
  are used.
metadata:
  references:
  - https://docs.angularjs.org/api/ng/service/$sce#trustAsJs
  - https://owasp.org/www-chapter-london/assets/slides/OWASPLondon20170727_AngularJS.pdf
  category: security
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  technology:
  - angular
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/javascript.angular.security.detect-angular-resource-loading.detect-angular-resource-loading
  shortlink: https://sg.run/b7kd
  semgrep.dev:
    rule:
      r_id: 9226
      rv_id: 109790
      rule_id: nJUzgX
      version_id: RGTDky2
      url: https://semgrep.dev/playground/r/RGTDky2/javascript.angular.security.detect-angular-resource-loading.detect-angular-resource-loading
      origin: community
languages:
- javascript
- typescript
severity: WARNING
pattern-either:
- pattern: '$sceDelegateProvider.resourceUrlWhitelist([...,''**'',...]);

    '
- patterns:
  - pattern: '$sceDelegateProvider.resourceUrlWhitelist([...,$DOM,...]);

      '
  - metavariable-regex:
      metavariable: $DOM
      regex: ^'.*\*\*.+'$
