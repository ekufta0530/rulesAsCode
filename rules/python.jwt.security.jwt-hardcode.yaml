id: python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret
message: 'Hardcoded JWT secret or private key is used. This is a Insufficiently Protected
  Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using
  an appropriate security mechanism to protect the credentials (e.g. keeping secrets
  in environment variables)'
metadata:
  cwe:
  - 'CWE-522: Insufficiently Protected Credentials'
  owasp:
  - A02:2017 - Broken Authentication
  - A04:2021 - Insecure Design
  references:
  - https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/
  category: security
  technology:
  - jwt
  cwe2021-top25: true
  subcategory:
  - vuln
  likelihood: HIGH
  impact: MEDIUM
  confidence: HIGH
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cryptographic Issues
  source: https://semgrep.dev/r/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret
  shortlink: https://sg.run/l2E9
  semgrep.dev:
    rule:
      r_id: 9557
      rv_id: 110290
      rule_id: X5U8P5
      version_id: l4T4vPA
      url: https://semgrep.dev/playground/r/l4T4vPA/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret
      origin: community
patterns:
- pattern: 'jwt.encode($X, $SECRET, ...)

    '
- focus-metavariable: $SECRET
- pattern: '"..."

    '
languages:
- python
severity: ERROR
