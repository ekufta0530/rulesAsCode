id: problem-based-packs.insecure-transport.java-spring.spring-ftp-request.spring-ftp-request
message: Checks for outgoing connections to ftp servers via Spring plugin ftpSessionFactory.
  FTP does not encrypt traffic, possibly leading to PII being sent plaintext over
  the network.
severity: WARNING
metadata:
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: MEDIUM
  category: security
  cwe: 'CWE-319: Cleartext Transmission of Sensitive Information'
  owasp: A03:2017 - Sensitive Data Exposure
  references:
  - https://docs.spring.io/spring-integration/api/org/springframework/integration/ftp/session/AbstractFtpSessionFactory.html#setClientMode-int-
  subcategory:
  - vuln
  technology:
  - spring
  vulnerability: Insecure Transport
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Mishandled Sensitive Information
  source: https://semgrep.dev/r/problem-based-packs.insecure-transport.java-spring.spring-ftp-request.spring-ftp-request
  shortlink: https://sg.run/0Qzj
  semgrep.dev:
    rule:
      r_id: 9410
      rv_id: 110097
      rule_id: pKUOYW
      version_id: WrTWQ1d
      url: https://semgrep.dev/playground/r/WrTWQ1d/problem-based-packs.insecure-transport.java-spring.spring-ftp-request.spring-ftp-request
      origin: community
languages:
- java
fix-regex:
  regex: '[fF][tT][pP]://'
  replacement: sftp://
  count: 1
pattern-either:
- pattern: '$SF = new DefaultFtpSessionFactory(...);

    ...

    $SF.setHost("=~/^[fF][tT][pP]://.*/");

    ...

    $SF.$FUNC(...);

    '
- pattern: '$SF = new DefaultFtpSessionFactory(...);

    ...

    String $URL = "=~/^[fF][tT][pP]://.*/";

    ...

    $SF.setHost($URL);

    ...

    $SF.$FUNC(...);

    '
