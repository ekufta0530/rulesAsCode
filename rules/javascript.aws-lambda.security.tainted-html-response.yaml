id: javascript.aws-lambda.security.tainted-html-response.tainted-html-response
message: Detected user input flowing into an HTML response. You may be accidentally
  bypassing secure methods of rendering HTML by manually constructing HTML and this
  could create a cross-site scripting vulnerability, which could let attackers steal
  sensitive user data.
metadata:
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  category: security
  technology:
  - aws-lambda
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - vuln
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: MEDIUM
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/javascript.aws-lambda.security.tainted-html-response.tainted-html-response
  shortlink: https://sg.run/0Gvj
  semgrep.dev:
    rule:
      r_id: 18254
      rv_id: 109809
      rule_id: OrUJBY
      version_id: yeTR2o8
      url: https://semgrep.dev/playground/r/yeTR2o8/javascript.aws-lambda.security.tainted-html-response.tainted-html-response
      origin: community
languages:
- javascript
- typescript
severity: WARNING
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern-inside: "exports.handler = function ($EVENT, ...) {\n  ...\n}\n"
    - pattern-inside: 'function $FUNC ($EVENT, ...) {...}

        ...

        exports.handler = $FUNC

        '
    - pattern-inside: '$FUNC = function ($EVENT, ...) {...}

        ...

        exports.handler = $FUNC

        '
  - pattern: $EVENT
pattern-sinks:
- patterns:
  - focus-metavariable: $BODY
  - pattern-inside: '{..., headers: {..., ''Content-Type'': ''text/html'', ...}, body:
      $BODY, ... }

      '
