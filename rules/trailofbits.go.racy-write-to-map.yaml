id: trailofbits.go.racy-write-to-map.racy-write-to-map
message: Writing `$MAP` from multiple goroutines is not concurrency safe
languages:
- go
severity: ERROR
metadata:
  category: security
  cwe: 'CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization
    (''Race Condition'')'
  subcategory:
  - vuln
  confidence: MEDIUM
  likelihood: HIGH
  impact: MEDIUM
  technology:
  - --no-technology--
  description: Concurrent writes to the same map in multiple goroutines
  references:
  - https://go.dev/blog/maps#concurrency
  license: AGPL-3.0 license
  vulnerability_class:
  - Other
  source: https://semgrep.dev/r/trailofbits.go.racy-write-to-map.racy-write-to-map
  shortlink: https://sg.run/1Gnw
  semgrep.dev:
    rule:
      r_id: 11866
      rv_id: 104227
      rule_id: AbUGWD
      version_id: 0bTLwz3
      url: https://semgrep.dev/playground/r/0bTLwz3/trailofbits.go.racy-write-to-map.racy-write-to-map
      origin: community
patterns:
- pattern: '$MAP[$KEY] = $VALUE

    '
- pattern-inside: "$MAP = make(map[$KTYPE]$VTYPE)\n...\nfor ... {\n  ...\n  go func(...)\
    \ {\n    ...\n    $MAP[$KEY] = $VALUE\n    ...\n  }(...)\n  ...\n}\n"
- pattern-not-inside: '$MUTEX.Lock()

    ...

    $MUTEX.Unlock()

    '
- pattern-not-inside: '$MUTEX.Lock()

    ...

    defer $MUTEX.Unlock()

    ...

    '
