id: rust.rocket.nosql.mongodb-taint.mongodb-taint
message: Untrusted input might be used to build a database query, which can lead to
  a NoSQL injection vulnerability. An attacker can execute malicious NoSQL statements
  and gain unauthorized access to sensitive data, modify, delete data, or execute
  arbitrary system commands. Make sure all user input is validated and sanitized,
  and avoid using tainted user input to construct NoSQL statements if possible. Ideally,
  avoid raw queries and instead use parameterized queries.
severity: ERROR
metadata:
  likelihood: HIGH
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-943: Improper Neutralization of Special Elements in Data Query Logic'
  functional-categories:
  - db::sink::sql-or-nosql-query::actix_web
  - db::sink::sql-or-nosql-query::mongodb
  - web::source::cookie::rocket
  - web::source::form-data::rocket
  - web::source::header::rocket
  - web::source::http-body::rocket
  - web::source::http-params::rocket
  - web::source::url-path-params::rocket
  owasp:
  - A01:2017 - Injection
  references:
  - https://docs.rs/mongodb/latest/mongodb/
  - https://owasp.org/Top10/A03_2021-Injection
  technology:
  - mongodb
  - rocket
  - rust
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Improper Validation
  source: https://semgrep.dev/r/rust.rocket.nosql.mongodb-taint.mongodb-taint
  shortlink: https://sg.run/BBzR
  semgrep.dev:
    rule:
      r_id: 63207
      rv_id: 229349
      rule_id: L1UvnL
      version_id: ExTR7Yd
      url: https://semgrep.dev/playground/r/ExTR7Yd/rust.rocket.nosql.mongodb-taint.mongodb-taint
      origin: pro_rules
languages:
- rust
mode: taint
pattern-sources:
- label: INPUT
  pattern-either:
  - patterns:
    - pattern: $PARAM
    - pattern-either:
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : rocket::request::Form<$T>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : rocket::http::Cookies,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : &rocket::http::CookieJar<'$T>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : rocket::serde::json::Json<$T>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : String, ...)\
          \ {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : &str, ...)\
          \ {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : &RawStr, ...)\
          \ {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : &OsStr, ...)\
          \ {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : OsString, ...)\
          \ {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<String>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<&str>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<&RawStr>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<&OsStr>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<OsString>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<rocket::request::Form<$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<rocket::http::Cookies>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<&rocket::http::CookieJar<'$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<rocket::serde::json::Json<$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<String>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<&str>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<&RawStr>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<&OsStr>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<OsString>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<String>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<&str>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<&RawStr>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<&OsStr>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<OsString>>,\
          \ ...) {\n  ...\n}\n"
    - metavariable-regex:
        metavariable: $METHOD
        regex: ^(get|put|post|delete|head|patch|options)$
  - patterns:
    - pattern: $PARAM
    - pattern-either:
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : $TYPE, ...)\
          \ {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : $TYPE<$T>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : $TYPE<'$T>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : &$TYPE, ...)\
          \ {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : &$TYPE<$T>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : &$TYPE<'$T>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<$TYPE>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<$TYPE<$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<$TYPE<'$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<&$TYPE>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<&$TYPE<$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Vec<&$TYPE<'$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<$TYPE>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<$TYPE<$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<$TYPE<'$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<&$TYPE>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<&$TYPE<$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<&$TYPE<'$T>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<$TYPE>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<$TYPE<$T>>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<$TYPE<'$T>>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<&$TYPE>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<&$TYPE<$T>>>,\
          \ ...) {\n  ...\n}\n"
      - pattern-inside: "#[$METHOD($...ROUTE)]\nfn $FUNC(..., $PARAM : Option<Vec<&$TYPE<'$T>>>,\
          \ ...) {\n  ...\n}\n"
    - pattern-inside: 'struct $TYPE { ... };

        ...

        '
    - metavariable-regex:
        metavariable: $METHOD
        regex: ^(get|put|post|delete|head|patch|options)$
- label: REQUEST
  patterns:
  - pattern-either:
    - pattern-inside: "fn $FUNC(..., $REQ : &'r rocket::Request<'_>, ...) {\n  ...\n\
        }\n"
    - pattern-inside: "fn $FUNC(..., $REQ : &'r rocket::request::Request<'_>, ...)\
        \ {\n  ...\n}\n"
    - pattern-inside: "fn $FUNC(..., $REQ : &rocket::Request, ...) {\n  ...\n}\n"
    - pattern-inside: "fn $FUNC(..., $REQ : &rocket::request::Request, ...) {\n  ...\n\
        }\n"
- label: REQ_INPUT
  patterns:
  - pattern-either:
    - pattern: $R.path()
    - pattern: $R.query()
    - pattern: $R.map_path()
    - pattern: $R.clear_query()
    - pattern: $R.cookies()
    - pattern: $R.headers()
    - pattern: $R.query_value
- label: CONCAT
  patterns:
  - pattern-either:
    - pattern: '"..." + ...

        '
    - pattern: '... + "..."'
    - pattern: $STR.push_str(...)
    - pattern: format!(...)
    - pattern: std::fmt::format(...)
pattern-propagators:
- from: $FROM
  patterns:
  - pattern: $TO.push_str($FROM)
  to: $TO
- from: $FROM
  patterns:
  - patterns:
    - pattern: $TO.$FUNC(..., $FROM)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(insert_str|replace_range)$
  to: $TO
- from: $FROM
  patterns:
  - patterns:
    - pattern: $FROM.$FUNC(&$TO)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(Decode|DecodeBytes|UnmarshalBSON|All)$
  to: $TO
- from: $FROM
  patterns:
  - pattern: $TO = $FROM.into()
  to: $TO
- from: $FROM
  patterns:
  - pattern: $TO = std::from_utf8($FROM)
  to: $TO
- from: $FROM
  patterns:
  - pattern: "let $TO = if let $SOME = $FROM {\n  ...\n} else {\n  ...\n};\n"
  to: $TO
pattern-sinks:
- patterns:
  - focus-metavariable: $QUERY
  - pattern-either:
    - pattern: '($COL: mongodb::Collection<$T>).$METHOD($QUERY,...)

        '
    - pattern: '($COL: actix_web::web::Data<mongodb::Collection<$T>>).$METHOD($QUERY,...)

        '
  - metavariable-pattern:
      metavariable: $METHOD
      patterns:
      - pattern-either:
        - pattern: aggregate
        - pattern: aggregate_with_session
        - pattern: find
        - pattern: find_one
        - pattern: find_one_and_delete
        - pattern: find_one_and_delete_with_session
        - pattern: find_one_and_replace
        - pattern: find_one_and_replace_with_session
        - pattern: find_one_and_update
        - pattern: find_one_and_update_with_session
        - pattern: find_one_with_session
        - pattern: find_with_session
  requires: (INPUT and CONCAT) or (REQUEST and REQ_INPUT and CONCAT)
