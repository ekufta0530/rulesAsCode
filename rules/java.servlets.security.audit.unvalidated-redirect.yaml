id: java.servlets.security.audit.unvalidated-redirect.unvalidated-redirect
message: The application builds a URL using user-controlled input which can lead to
  an open redirect vulnerability. An attacker can manipulate the URL and redirect
  users to an arbitrary domain. Open redirect vulnerabilities can lead to issues such
  as Cross-site scripting (XSS) or redirecting to a malicious domain for activities
  such as phishing to capture users' credentials. To prevent this vulnerability perform
  strict input validation of the domain against an allowlist of approved domains.
  Notify a user in your application that they are leaving the website. Display a domain
  where they are redirected to the user. A user can then either accept or deny the
  redirect to an untrusted site.
severity: WARNING
metadata:
  likelihood: LOW
  impact: LOW
  confidence: LOW
  category: security
  subcategory:
  - audit
  asvs:
    section: 'V5: Validation, Sanitization and Encoding Verification Requirements'
    control_id: 5.1.5 Open Redirect
    control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v51-input-validation-requirements
    version: '4'
  cwe:
  - 'CWE-601: URL Redirection to Untrusted Site (''Open Redirect'')'
  functional-categories:
  - web::sink::redirect::Servlet
  owasp:
  - A01:2021 - Broken Access Control
  references:
  - https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html
  - https://portal.securecodewarrior.com/#/learning-resources/application_security_weaknesses~2Fweb~2Fdata_handling~2Furaf~2Fgeneric
  source-rule-url: https://find-sec-bugs.github.io/bugs.htm#UNVALIDATED_REDIRECT
  technology:
  - java
  - servlets
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Open Redirect
  source: https://semgrep.dev/r/java.servlets.security.audit.unvalidated-redirect.unvalidated-redirect
  shortlink: https://sg.run/r86R
  semgrep.dev:
    rule:
      r_id: 27169
      rv_id: 111584
      rule_id: PeURJE
      version_id: 7ZTgnGz
      url: https://semgrep.dev/playground/r/7ZTgnGz/java.servlets.security.audit.unvalidated-redirect.unvalidated-redirect
      origin: pro_rules
languages:
- java
pattern-either:
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,String $URL,...) {\n  ...\n\
    \  $RES.sendRedirect($URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...,HttpServletResponse $RES,...) {\n  ...\n\
    \  $RES.sendRedirect($URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.sendRedirect($URL);\n\
    \  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.sendRedirect($URL);\n\
    \  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...) {\n  ...\n  HttpServletResponse $RES =\
    \ ...;\n  ...\n  $RES.sendRedirect($URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  $RES.sendRedirect($REQ.getParameter(...));\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  $RES.sendRedirect($REQ.getParameter(...));\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,String $URL,...) {\n  ...\n\
    \  $RES.addHeader(\"Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...,HttpServletResponse $RES,...) {\n  ...\n\
    \  $RES.addHeader(\"Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.addHeader(\"\
    Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.addHeader(\"\
    Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...) {\n  ...\n  HttpServletResponse $RES =\
    \ ...;\n  ...\n  $RES.addHeader(\"Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  $RES.addHeader(\"Location\",$REQ.getParameter(...));\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  $RES.addHeader(\"Location\",$REQ.getParameter(...));\n  ...\n}\n"
