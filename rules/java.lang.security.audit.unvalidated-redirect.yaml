id: java.lang.security.audit.unvalidated-redirect.unvalidated-redirect
message: Application redirects to a destination URL specified by a user-supplied parameter
  that is not validated. This could direct users to malicious locations. Consider
  using an allowlist to validate URLs.
metadata:
  cwe:
  - 'CWE-601: URL Redirection to Untrusted Site (''Open Redirect'')'
  owasp:
  - A01:2021 - Broken Access Control
  source-rule-url: https://find-sec-bugs.github.io/bugs.htm#UNVALIDATED_REDIRECT
  asvs:
    section: 'V5: Validation, Sanitization and Encoding Verification Requirements'
    control_id: 5.1.5 Open Redirect
    control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v51-input-validation-requirements
    version: '4'
  category: security
  technology:
  - java
  references:
  - https://owasp.org/Top10/A01_2021-Broken_Access_Control
  subcategory:
  - vuln
  impact: LOW
  likelihood: MEDIUM
  confidence: MEDIUM
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Open Redirect
  source: https://semgrep.dev/r/java.lang.security.audit.unvalidated-redirect.unvalidated-redirect
  shortlink: https://sg.run/Q51P
  semgrep.dev:
    rule:
      r_id: 9186
      rv_id: 109741
      rule_id: WAUo0p
      version_id: l4T4vkd
      url: https://semgrep.dev/playground/r/l4T4vkd/java.lang.security.audit.unvalidated-redirect.unvalidated-redirect
      origin: community
severity: WARNING
languages:
- java
pattern-either:
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,String $URL,...) {\n  ...\n\
    \  $RES.sendRedirect($URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...,HttpServletResponse $RES,...) {\n  ...\n\
    \  $RES.sendRedirect($URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.sendRedirect($URL);\n\
    \  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.sendRedirect($URL);\n\
    \  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...) {\n  ...\n  HttpServletResponse $RES =\
    \ ...;\n  ...\n  $RES.sendRedirect($URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  $RES.sendRedirect($REQ.getParameter(...));\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  $RES.sendRedirect($REQ.getParameter(...));\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,String $URL,...) {\n  ...\n\
    \  $RES.addHeader(\"Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...,HttpServletResponse $RES,...) {\n  ...\n\
    \  $RES.addHeader(\"Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.addHeader(\"\
    Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  String $URL = $REQ.getParameter(...);\n  ...\n  $RES.addHeader(\"\
    Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,String $URL,...) {\n  ...\n  HttpServletResponse $RES =\
    \ ...;\n  ...\n  $RES.addHeader(\"Location\",$URL);\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletRequest $REQ,...,HttpServletResponse $RES,...)\
    \ {\n  ...\n  $RES.addHeader(\"Location\",$REQ.getParameter(...));\n  ...\n}\n"
- pattern: "$X $METHOD(...,HttpServletResponse $RES,...,HttpServletRequest $REQ,...)\
    \ {\n  ...\n  $RES.addHeader(\"Location\",$REQ.getParameter(...));\n  ...\n}"
