id: java.servlets.security.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request
message: Detected input from a HTTPServletRequest going into an LDAP query. This could
  lead to LDAP injection if the input is not properly santized, which could result
  in attackers modifying objects in the LDAP tree structure. Ensure data passed to
  an LDAP query is not controllable or properly sanitize the data.
severity: WARNING
metadata:
  likelihood: HIGH
  impact: HIGH
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-90: Improper Neutralization of Special Elements used in an LDAP Query (''LDAP
    Injection'')'
  functional-categories:
  - web::source::cookie::Servlet
  - web::source::http-params::Servlet
  - web::source::http-body::Servlet
  - web::source::header::Servlet
  - web::source::session-properties::Servlet
  - web::source::url-path-params::Servlet
  - web::source::form-data::Servlet
  - ldap::sink::ldap-query::javax.naming
  owasp:
  - A01:2017 - Injection
  - A03:2021 - Injection
  references:
  - https://owasp.org/www-community/attacks/LDAP_Injection
  - https://cheatsheetseries.owasp.org/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.html
  - https://cwe.mitre.org/data/definitions/90.html
  technology:
  - java
  - servlets
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - LDAP Injection
  source: https://semgrep.dev/r/java.servlets.security.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request
  shortlink: https://sg.run/d58d
  semgrep.dev:
    rule:
      r_id: 27178
      rv_id: 111604
      rule_id: 0oUKLN
      version_id: YDTpnB8
      url: https://semgrep.dev/playground/r/YDTpnB8/java.servlets.security.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request
      origin: pro_rules
languages:
- java
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern: (HttpServletRequest $REQ)
    - pattern: (HttpServletRequest $REQ).$REQFUNC(...)
    - pattern: "(ServletRequest $REQ).$REQFUNC(...) \n"
    - patterns:
      - pattern-inside: "(javax.servlet.http.Cookie[] $COOKIES) = (HttpServletRequest\
          \ $REQ).getCookies(...);\n...\nfor (javax.servlet.http.Cookie $COOKIE: $COOKIES)\
          \ {\n  ...\n}\n"
      - pattern: '$COOKIE.getValue(...)

          '
    - patterns:
      - pattern-inside: '$TYPE[] $VALS = (HttpServletRequest $REQ).$GETFUNC(...);

          ...

          '
      - pattern: '$PARAM = $VALS[$INDEX];

          '
  - pattern-not: "$REQ.getUserPrincipal() \n"
  - pattern-not: "$REQ.getSession(...) \n"
  - pattern-not: "$REQ.getAuthType(...) \n"
  - pattern-not: "$REQ.getMethod(...) \n"
  - pattern-not: "$REQ.getLocales(...) \n"
  - pattern-not: "$REQ.getLocale(...) \n"
  - pattern-not: "$REQ.isUserinRole(...) \n"
  - pattern-not: "$REQ.isRequestdSessionIdValid(...) \n"
  - pattern-not: "$REQ.isRequestedSessionIdFromUrl(...) \n"
  - pattern-not: "$REQ.getIntHeader(...) \n"
  - pattern-not: "$REQ.getDateHeader(...) \n"
  - pattern-not: "$REQ.authenticate(...) \n"
  - pattern-not: "$REQ.isUserInRole(...) \n"
  - pattern-not: '$REQ.getAttribute(...)

      '
  - pattern-not: '$REQ.getAttributeNames(...)

      '
  - pattern-not: '$REQ.getAuthType(...)

      '
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern: '(javax.naming.directory.InitialDirContext $IDC).search(...)

        '
    - pattern: '(javax.naming.directory.DirContext $CTX).search(...)

        '
  - pattern-not: '(javax.naming.directory.InitialDirContext $IDC).search($Y, "...",
      ...)

      '
  - pattern-not: '(javax.naming.directory.DirContext $CTX).search($Y, "...", ...)

      '
