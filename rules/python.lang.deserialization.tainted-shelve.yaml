id: python.lang.deserialization.tainted-shelve.tainted-shelve
message: 'The application may convert user-controlled data into an object, which can
  lead to an insecure deserialization vulnerability. An attacker can create a malicious
  serialized object, pass it to the application, and take advantage of the deserialization
  process to perform Denial-of-service (DoS), Remote code execution (RCE), or bypass
  access control measures. To prevent this vulnerability, leverage data formats such
  as JSON or XML as safer alternatives. If you need to deserialize user input in a
  specific format, consider digitally signing the data before serialization to prevent
  tampering. For more information, see: [Deserialization prevention](https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html)
  The `shelve` module uses `pickle` and should not be used with data from untrusted
  sources.'
severity: ERROR
metadata:
  likelihood: MEDIUM
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-502: Deserialization of Untrusted Data'
  cwe2021-top25: true
  cwe2022-top25: true
  functional-categories:
  - deserialization::sink::load-object::lang
  - web::source::cookie::lang
  - web::source::http-params::lang
  - web::source::http-body::lang
  - web::source::header::lang
  - web::source::url-path-params::lang
  - web::source::form-data::lang
  owasp:
  - A08:2017 - Insecure Deserialization
  - A08:2021 - Software and Data Integrity Failures
  references:
  - https://portswigger.net/web-security/deserialization
  - https://docs.python.org/3/library/shelve.html
  - https://docs.python.org/3/library/pickle.html
  - https://davidhamann.de/2020/04/05/exploiting-python-pickle/
  related_oss_rules:
  - python.aws-lambda.security.tainted-pickle-deserialization
  - python.lang.security.deserialization.avoid-shelve
  technology:
  - python
  - http.server
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - 'Insecure Deserialization '
  source: https://semgrep.dev/r/python.lang.deserialization.tainted-shelve.tainted-shelve
  shortlink: https://sg.run/lQ9L
  semgrep.dev:
    rule:
      r_id: 44957
      rv_id: 111851
      rule_id: lBU3yn
      version_id: JdTNvr3
      url: https://semgrep.dev/playground/r/JdTNvr3/python.lang.deserialization.tainted-shelve.tainted-shelve
      origin: pro_rules
languages:
- python
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern-inside: "class $SERVER(..., http.server.BaseHTTPRequestHandler, ...):\n\
        \  ...\n"
    - pattern-inside: "class $SERVER(..., http.server.StreamRequestHandler, ...):\n\
        \  ...\n"
    - pattern-inside: "class $SERVER(..., http.server.DatagramRequestHandler, ...):\n\
        \  ...\n"
  - pattern-either:
    - pattern: self.$PROPERTY
    - pattern: self.$PROPERTY.get(...)
    - pattern: self.$PROPERTY[...]
  - metavariable-regex:
      metavariable: $PROPERTY
      regex: ^(command|headers|rfile|wfile|responses|requestline|path)$
pattern-sinks:
- pattern: shelve.DbfilenameShelf($SINK, ...)
