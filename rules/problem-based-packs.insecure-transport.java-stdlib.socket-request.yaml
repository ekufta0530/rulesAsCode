id: problem-based-packs.insecure-transport.java-stdlib.socket-request.socket-request
message: Insecure transport rules to catch socket connections to http, telnet, and
  ftp servers. This is dangerous because these are protocols that do not encrypt traffic.
severity: WARNING
metadata:
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: LOW
  category: security
  cwe: 'CWE-319: Cleartext Transmission of Sensitive Information'
  owasp: A03:2017 - Sensitive Data Exposure
  references:
  - https://docs.oracle.com/javase/8/docs/api/java/net/Socket.html
  subcategory:
  - audit
  technology:
  - java
  vulnerability: Insecure Transport
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Mishandled Sensitive Information
  source: https://semgrep.dev/r/problem-based-packs.insecure-transport.java-stdlib.socket-request.socket-request
  shortlink: https://sg.run/2x9L
  semgrep.dev:
    rule:
      r_id: 9419
      rv_id: 110107
      rule_id: NbUkl9
      version_id: 2KTzrqw
      url: https://semgrep.dev/playground/r/2KTzrqw/problem-based-packs.insecure-transport.java-stdlib.socket-request.socket-request
      origin: community
languages:
- java
pattern-either:
- pattern: '$SOCKET = new Socket("=~/[tT][eE][lL][nN][eE][tT]://.*/", ...);

    ...

    $OUT = new PrintWriter($SOCKET.getOutputStream(...), ...);

    ...

    $OUT.$FUNC(...);

    '
- pattern: '$SOCKET = new Socket("=~/^[fF][tT][pP]://.*/", ...);

    ...

    $OUT = new PrintWriter($SOCKET.getOutputStream(...), ...);

    ...

    $OUT.$FUNC(...);

    '
- pattern: '$SOCKET = new Socket("=~/[hH][tT][tT][pP]://.*/", ...);

    ...

    $OUT = new PrintWriter($SOCKET.getOutputStream(...), ...);

    ...

    $OUT.$FUNC(...);

    '
