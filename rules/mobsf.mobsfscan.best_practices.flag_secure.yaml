id: mobsf.mobsfscan.best_practices.flag_secure.android_prevent_screenshot
patterns:
- pattern-either:
  - pattern: 'getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, ...);

      '
  - pattern: '$V = WindowManager.LayoutParams.FLAG_SECURE;

      ...

      getWindow().setFlags($V);

      '
  - pattern: 'getWindow().addFlags(WindowManager.LayoutParams.FLAG_SECURE, ...);

      '
  - pattern: '$V = WindowManager.LayoutParams.FLAG_SECURE;

      ...

      getWindow().addFlags($V);

      '
  - pattern: '$A.getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, ...);

      '
  - pattern: '$V = WindowManager.LayoutParams.FLAG_SECURE;

      ...

      $A.getWindow().setFlags($V);

      '
  - pattern: '$A.getWindow().addFlags(WindowManager.LayoutParams.FLAG_SECURE, ...);

      '
  - pattern: '$V = WindowManager.LayoutParams.FLAG_SECURE;

      ...

      $A.getWindow().addFlags($V);

      '
message: This app does not have capabilities to prevent against Screenshots from Recent
  Task History/ Now On Tap etc.
languages:
- java
severity: INFO
metadata:
  cwe: cwe-200
  owasp-mobile: m2
  masvs: storage-9
  reference: https://github.com/MobSF/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#finding-sensitive-information-in-auto-generated-screenshots-mstg-storage-9
  license: LGPL-3.0-or-later
  vulnerability_class:
  - Other
  source: https://semgrep.dev/r/mobsf.mobsfscan.best_practices.flag_secure.android_prevent_screenshot
  shortlink: https://sg.run/9jOY
  semgrep.dev:
    rule:
      r_id: 43723
      rv_id: 78327
      rule_id: GdUg51
      version_id: 0bT462
      url: https://semgrep.dev/playground/r/0bT462/mobsf.mobsfscan.best_practices.flag_secure.android_prevent_screenshot
      origin: community
