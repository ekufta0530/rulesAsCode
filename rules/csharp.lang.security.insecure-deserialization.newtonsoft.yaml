id: csharp.lang.security.insecure-deserialization.newtonsoft.insecure-newtonsoft-deserialization
patterns:
- pattern-either:
  - pattern: TypeNameHandling = TypeNameHandling.$TYPEHANDLER
  - pattern: '$SETTINGS.TypeNameHandling = TypeNameHandling.$TYPEHANDLER;

      ...

      JsonConvert.DeserializeObject<$TYPE>(...,$SETTINGS);

      '
  - pattern: '$SETTINGS.TypeNameHandling = TypeNameHandling.$TYPEHANDLER;

      ...

      JsonConvert.DeserializeObject(...,$SETTINGS);

      '
- pattern-inside: 'using Newtonsoft.Json;

    ...

    '
- metavariable-regex:
    metavariable: $TYPEHANDLER
    regex: (All|Auto|Objects|Arrays)
message: TypeNameHandling $TYPEHANDLER is unsafe and can lead to arbitrary code execution
  in the context of the process. Use a custom SerializationBinder whenever using a
  setting other than TypeNameHandling.None.
languages:
- csharp
severity: WARNING
metadata:
  category: security
  cwe:
  - 'CWE-502: Deserialization of Untrusted Data'
  owasp:
  - A08:2017 - Insecure Deserialization
  - A08:2021 - Software and Data Integrity Failures
  references:
  - https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_TypeNameHandling.htm#remarks
  technology:
  - .net
  - newtonsoft
  - json
  confidence: LOW
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: HIGH
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - 'Insecure Deserialization '
  source: https://semgrep.dev/r/csharp.lang.security.insecure-deserialization.newtonsoft.insecure-newtonsoft-deserialization
  shortlink: https://sg.run/8n2g
  semgrep.dev:
    rule:
      r_id: 11140
      rv_id: 109208
      rule_id: OrUGgl
      version_id: w8T9n51
      url: https://semgrep.dev/playground/r/w8T9n51/csharp.lang.security.insecure-deserialization.newtonsoft.insecure-newtonsoft-deserialization
      origin: community
