id: go.lang.security.audit.xss.no-interpolation-js-template-string.no-interpolation-js-template-string
message: Detected template variable interpolation in a JavaScript template string.
  This is potentially vulnerable to cross-site scripting (XSS) attacks because a malicious
  actor has control over JavaScript but without the need to use escaped characters.
  Instead, obtain this variable outside of the template string and ensure your template
  is properly escaped.
metadata:
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://github.com/golang/go/issues/9200#issuecomment-66100328
  - https://blogtitle.github.io/robn-go-security-pearls-cross-site-scripting-xss/
  category: security
  technology:
  - generic
  confidence: LOW
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/go.lang.security.audit.xss.no-interpolation-js-template-string.no-interpolation-js-template-string
  shortlink: https://sg.run/8yl7
  semgrep.dev:
    rule:
      r_id: 9140
      rv_id: 109636
      rule_id: BYUNR6
      version_id: WrTWQX0
      url: https://semgrep.dev/playground/r/WrTWQX0/go.lang.security.audit.xss.no-interpolation-js-template-string.no-interpolation-js-template-string
      origin: community
languages:
- generic
severity: WARNING
paths:
  include:
  - '*.html'
  - '*.thtml'
  - '*.gohtml'
  - '*.tmpl'
  - '*.tpl'
patterns:
- pattern-inside: <script ...> ... ... ... ... ... </script>
- pattern: '` ... {{ ... }} ...`'
