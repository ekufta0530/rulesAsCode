id: java.jax-rs.security.jax-rs-path-traversal.jax-rs-path-traversal
metadata:
  owasp:
  - A05:2017 - Broken Access Control
  - A01:2021 - Broken Access Control
  cwe:
  - 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')'
  source-rule-url: https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN
  references:
  - https://www.owasp.org/index.php/Path_Traversal
  category: security
  technology:
  - jax-rs
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - vuln
  likelihood: LOW
  impact: LOW
  confidence: MEDIUM
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Path Traversal
  source: https://semgrep.dev/r/java.jax-rs.security.jax-rs-path-traversal.jax-rs-path-traversal
  shortlink: https://sg.run/DoWj
  semgrep.dev:
    rule:
      r_id: 9152
      rv_id: 109672
      rule_id: 2ZUb9l
      version_id: PkTJ19w
      url: https://semgrep.dev/playground/r/PkTJ19w/java.jax-rs.security.jax-rs-path-traversal.jax-rs-path-traversal
      origin: community
message: Detected a potential path traversal. A malicious actor could control the
  location of this file, to include going backwards in the directory with '../'. To
  address this, ensure that user-controlled variables in file paths are sanitized.
  You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...)
  to only retrieve the file name from the path.
severity: WARNING
languages:
- java
pattern-either:
- pattern: "$RETURNTYPE $FUNC (..., @PathParam(...) $TYPE $VAR, ...) {\n  ...\n  new\
    \ File(..., $VAR, ...);\n  ...\n}\n"
- pattern: "$RETURNTYPE $FUNC (..., @javax.ws.rs.PathParam(...) $TYPE $VAR, ...) {\n\
    \  ...\n  new File(..., $VAR, ...);\n  ...\n}"
