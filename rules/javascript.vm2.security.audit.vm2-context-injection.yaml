id: javascript.vm2.security.audit.vm2-context-injection.vm2-context-injection
message: Make sure that unverified user data can not reach `vm2`.
metadata:
  owasp:
  - A03:2021 - Injection
  cwe:
  - 'CWE-94: Improper Control of Generation of Code (''Code Injection'')'
  category: security
  technology:
  - vm2
  cwe2022-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: HIGH
  confidence: LOW
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/javascript.vm2.security.audit.vm2-context-injection.vm2-context-injection
  shortlink: https://sg.run/W8XE
  semgrep.dev:
    rule:
      r_id: 9353
      rv_id: 109981
      rule_id: pKUO3v
      version_id: BjTXrLO
      url: https://semgrep.dev/playground/r/BjTXrLO/javascript.vm2.security.audit.vm2-context-injection.vm2-context-injection
      origin: community
languages:
- javascript
- typescript
severity: WARNING
patterns:
- pattern-inside: '$VM = require(''vm2'');

    ...

    '
- pattern-either:
  - pattern: "function (...,$INPUT,...) {\n  ...\n  new VM({sandbox: <... $INPUT ...>},...);\n\
      \  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  new VM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = <... {$NAME:$INPUT}\
      \ ...>;\n  ...\n  new VM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  new VM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n  ...\n\
      \  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  new VM({sandbox: <... $CONTEXT\
      \ ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $OPTS = {sandbox: <... $INPUT\
      \ ...>};\n  ...\n  new VM($OPTS,...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new VM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new VM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n  ...\n\
      \  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  $OPTS = {sandbox: <... $CONTEXT\
      \ ...>};\n  ...\n  new VM($OPTS,...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  new VM({sandbox: <... $INPUT\
      \ ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  new VM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = <... {$NAME:$INPUT}\
      \ ...>;\n  ...\n  new VM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  new VM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n \
      \ ...\n  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  new VM({sandbox: <...\
      \ $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $OPTS = {sandbox: <... $INPUT\
      \ ...>};\n  ...\n  new VM($OPTS,...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new VM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new VM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n \
      \ ...\n  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  $OPTS = {sandbox: <...\
      \ $CONTEXT ...>};\n  ...\n  new VM($OPTS,...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  new NodeVM({sandbox: <... $INPUT\
      \ ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  new NodeVM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = <... {$NAME:$INPUT}\
      \ ...>;\n  ...\n  new NodeVM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  new NodeVM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n  ...\n\
      \  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  new NodeVM({sandbox: <... $CONTEXT\
      \ ...>},...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $OPTS = {sandbox: <... $INPUT\
      \ ...>};\n  ...\n  new NodeVM($OPTS,...);\n  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new NodeVM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new NodeVM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function (...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n  ...\n\
      \  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  $OPTS = {sandbox: <... $CONTEXT\
      \ ...>};\n  ...\n  new NodeVM($OPTS,...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  new NodeVM({sandbox: <... $INPUT\
      \ ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  new NodeVM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = <... {$NAME:$INPUT}\
      \ ...>;\n  ...\n  new NodeVM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  new NodeVM({sandbox: <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n \
      \ ...\n  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  new NodeVM({sandbox:\
      \ <... $CONTEXT ...>},...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $OPTS = {sandbox: <... $INPUT\
      \ ...>};\n  ...\n  new NodeVM($OPTS,...);\n  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = <... $INPUT ...>;\n\
      \  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new NodeVM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $CONTEXT = {$NAME: <... $INPUT\
      \ ...>};\n  ...\n  $OPTS = {sandbox: <... $CONTEXT ...>};\n  ...\n  new NodeVM($OPTS,...);\n\
      \  ...\n}\n"
  - pattern: "function $F(...,$INPUT,...) {\n  ...\n  $VAR = <... $INPUT ...>;\n \
      \ ...\n  $CONTEXT = {$NAME: <... $VAR ...>};\n  ...\n  $OPTS = {sandbox: <...\
      \ $CONTEXT ...>};\n  ...\n  new NodeVM($OPTS,...);\n  ...\n}"
