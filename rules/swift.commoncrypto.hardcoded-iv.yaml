id: swift.commoncrypto.hardcoded-iv.hardcoded-iv
message: Initialization Vectors (IVs) for block ciphers should be randomly generated
  each time they are used. Using a static IV means the same plaintext encrypts to
  the same ciphertext every time, weakening the strength of the encryption.
severity: WARNING
metadata:
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-329: Not using a random initialization Vector (IV) with Cipher Block Chaining
    (CBC) Mode causes algorithms to be susceptible to dictionary attacks.'
  functional-categories:
  - crypto::search::randomness::CommonCrypto
  masvs:
  - 'MSTG-CRYPTO-3: The app uses cryptographic primitives that are appropriate for
    the particular use-case, configured with parameters that adhere to industry best
    practices.'
  owasp:
  - A02:2021 - Cryptographic Failures
  references:
  - https://mobile-security.gitbook.io/masvs/security-requirements/0x08-v3-cryptography_verification_requirements
  technology:
  - ios
  - macos
  - secrets
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Other
  source: https://semgrep.dev/r/swift.commoncrypto.hardcoded-iv.hardcoded-iv
  shortlink: https://sg.run/GjGn
  semgrep.dev:
    rule:
      r_id: 59704
      rv_id: 111986
      rule_id: YGUWe3
      version_id: nWTxoRr
      url: https://semgrep.dev/playground/r/nWTxoRr/swift.commoncrypto.hardcoded-iv.hardcoded-iv
      origin: pro_rules
languages:
- swift
mode: taint
options:
  symbolic_propagation: true
pattern-sources:
- patterns:
  - pattern-either:
    - pattern: '"...".data(...)

        '
    - pattern: 'Data(bytes:[$Y,...])

        '
    - pattern: '$IVDATA = [$Y,...]

        ...

        Data(bytes: $IVDATA)

        '
    - pattern: 'nil

        '
    - pattern: '.none

        '
    - pattern: 'Optional.none

        '
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern: 'CCCrypt($A, $B, CCOptions($OPTIONS), $D, $E, $X, ...)

        '
    - pattern: 'CCCryptorCreate($A, $B, CCOptions($OPTIONS), $D, $E, $X, ...)

        '
  - focus-metavariable: $X
  - metavariable-regex:
      metavariable: $OPTIONS
      regex: ^((?!ECB).)*$
