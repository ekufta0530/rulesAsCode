id: javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key
message: Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using
  an alternate option such as reading the secret from a config file or using an environment
  variable.
options:
  interfile: true
metadata:
  interfile: true
  category: security
  technology:
  - crypto
  - hmac
  references:
  - https://rules.sonarsource.com/javascript/RSPEC-2068
  - https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html#key-management
  owasp:
  - A07:2021 - Identification and Authentication Failures
  cwe:
  - 'CWE-798: Use of Hard-coded Credentials'
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: LOW
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Hard-coded Secrets
  source: https://semgrep.dev/r/javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key
  shortlink: https://sg.run/K9bn
  semgrep.dev:
    rule:
      r_id: 22555
      rv_id: 109918
      rule_id: v8UGEw
      version_id: e1T01kp
      url: https://semgrep.dev/playground/r/e1T01kp/javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key
      origin: community
languages:
- javascript
- typescript
severity: WARNING
pattern-either:
- pattern: $CRYPTO.createHmac($ALGO, '...')
- patterns:
  - pattern-inside: 'const $SECRET = ''...''

      ...

      '
  - pattern: $CRYPTO.createHmac($ALGO, $SECRET)
