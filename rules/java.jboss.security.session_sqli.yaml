id: java.jboss.security.session_sqli.find-sql-string-concatenation
message: In $METHOD, $X is used to construct a SQL query via string concatenation.
languages:
- java
severity: ERROR
pattern-either:
- pattern: "$RETURN $METHOD(...,String $X,...){\n  ...\n  Session $SESSION = ...;\n\
    \  ...\n  String $QUERY = ... + $X + ...;\n  ...\n  PreparedStatement $PS = $SESSION.connection().prepareStatement($QUERY);\n\
    \  ...\n  ResultSet $RESULT = $PS.executeQuery();\n  ...\n}\n"
- pattern: "$RETURN $METHOD(...,String $X,...){\n  ...\n  String $QUERY = ... + $X\
    \ + ...;\n  ...\n  Session $SESSION = ...;\n  ...\n  PreparedStatement $PS = $SESSION.connection().prepareStatement($QUERY);\n\
    \  ...\n  ResultSet $RESULT = $PS.executeQuery();\n  ...\n}\n"
metadata:
  category: security
  technology:
  - jboss
  confidence: MEDIUM
  cwe:
  - 'CWE-89: Improper Neutralization of Special Elements used in an SQL Command (''SQL
    Injection'')'
  owasp:
  - A01:2017 - Injection
  - A03:2021 - Injection
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - vuln
  likelihood: LOW
  impact: HIGH
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - SQL Injection
  source: https://semgrep.dev/r/java.jboss.security.session_sqli.find-sql-string-concatenation
  shortlink: https://sg.run/W8kA
  semgrep.dev:
    rule:
      r_id: 9153
      rv_id: 109674
      rule_id: X5U8rQ
      version_id: 5PTdAQ2
      url: https://semgrep.dev/playground/r/5PTdAQ2/java.jboss.security.session_sqli.find-sql-string-concatenation
      origin: community
