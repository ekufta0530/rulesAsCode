id: java.spring.security.xxe.tainted-schemafactory-xxe-spring.tainted-schemafactory-xxe-spring
message: 'The application is using an XML parser that has not been safely configured.
  This might lead to XML External Entity (XXE) vulnerabilities when parsing user-controlled
  input. An attacker can include document type definitions (DTDs) or XIncludes which
  can interact with internal or external hosts. XXE can lead to other vulnerabilities,
  such as Local File Inclusion (LFI), Remote Code Execution (RCE), and Server-side
  request forgery (SSRF), depending on the application configuration. An attacker
  can also use DTDs to expand recursively, leading to a Denial-of-Service (DoS) attack,
  also known as a `Billion Laughs Attack`. It is our recommendation to secure this
  parser against XXE attacks by configuring the parser with `factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING,
  true)`. Alternatively, enabling both of the following configurations also provides
  protection against XXE attacks. `factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD,"")`
  and `factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, "")`. For more information,
  see: [Java XXE prevention](https://semgrep.dev/docs/cheat-sheets/java-xxe/)'
severity: ERROR
metadata:
  likelihood: MEDIUM
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-611: Improper Restriction of XML External Entity Reference'
  cwe2020-top25: true
  cwe2021-top25: true
  cwe2022-top25: true
  functional-categories:
  - web::source::cookie::Spring
  - web::source::header::Spring
  - web::source::http-body::Spring
  - web::source::http-params::Spring
  - web::source::url-path-params::Spring
  - xml::sink::xml-parser::javax.xml
  owasp:
  - A04:2017 - XML External Entities (XXE)
  - A05:2021 - Security Misconfiguration
  references:
  - https://blog.sonarsource.com/secure-xml-processor/
  - https://blog.sonarsource.com/understanding-xxe-vulnerabilities/
  - https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html
  - https://cwe.mitre.org/data/definitions/611.html
  - https://cwe.mitre.org/data/definitions/776.html
  - https://docs.oracle.com/en/java/javase/13/security/java-api-xml-processing-jaxp-security-guide.html#GUID-D97A1F1D-8DDF-4D19-A7E5-99099F27346E
  - https://github.com/semgrep/java-xxe-research
  - https://owasp.org/Top10/A05_2021-Security_Misconfiguration
  - https://rules.sonarsource.com/java/type/Vulnerability/RSPEC-2755
  technology:
  - Spring
  - java
  - xml
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - XML Injection
  source: https://semgrep.dev/r/java.spring.security.xxe.tainted-schemafactory-xxe-spring.tainted-schemafactory-xxe-spring
  shortlink: https://sg.run/gPWJ
  semgrep.dev:
    rule:
      r_id: 43785
      rv_id: 735053
      rule_id: WAUgXZ
      version_id: d6T401d
      url: https://semgrep.dev/playground/r/d6T401d/java.spring.security.xxe.tainted-schemafactory-xxe-spring.tainted-schemafactory-xxe-spring
      origin: pro_rules
languages:
- java
mode: taint
options:
  interfile: true
  taint_assume_safe_booleans: true
  taint_assume_safe_numbers: true
pattern-sources:
- label: REQ
  patterns:
  - pattern-either:
    - pattern: $RET $METHOD(..., @$REQ(...) $TYPE $SOURCE, ...) {...}
    - pattern: $RET $METHOD(..., @$REQ $TYPE $SOURCE, ...) {...}
  - metavariable-regex:
      metavariable: $REQ
      regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute|MatrixVariable|RequestPart|RequestAttribute)
  - focus-metavariable: $SOURCE
- label: REQ
  patterns:
  - pattern-either:
    - pattern-inside: '@$MAPPING(...)

        $RET $METHODNAME(..., $TYPE $SOURCE, ...) {...}

        '
    - pattern-inside: '@$MAPPING

        $RET $METHODNAME(..., $TYPE $SOURCE, ...) {...}

        '
  - pattern-either:
    - pattern: $RET $METHOD(..., String $SOURCE, ...) {...}
    - pattern: $RET $METHOD(..., org.springframework.http.HttpEntity<$X> $SOURCE,
        ...) {...}
    - pattern: $RET $METHOD(..., java.io.InputStream $SOURCE, ...) {...}
    - pattern: $RET $METHOD(..., java.io.Reader $SOURCE, ...) {...}
  - metavariable-regex:
      metavariable: $MAPPING
      regex: (ResponseBody|RequestMapping|PatchMapping|GetMapping|DeleteMapping|PutMapping|PostMapping|HttpExchange|GetExchange|PostExchange|PutExchange|PatchExchange|DeleteExchange|ResponseStatus)
  - focus-metavariable: $SOURCE
- label: REQ
  patterns:
  - pattern-either:
    - pattern: (org.springframework.web.context.request.WebRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.web.context.request.NativeWebRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.web.context.request.FacesWebRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.web.context.request.ServletWebRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.web.servlet.handler.DispatcherServletWebRequest
        $REQ).$METHOD(...)
    - pattern: (org.springframework.web.context.request.async.AsyncWebRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.web.context.request.async.StandardServletAsyncWebRequest
        $REQ).$METHOD(...)
  - metavariable-regex:
      metavariable: $METHOD
      regex: (getHeader|getHeaderNames|getHeaderValues|getParameter|getParameterMap|getParameterNames|getParameterValues|getAttribute|getAttributeNames)
- label: REQ
  patterns:
  - pattern-either:
    - pattern: (org.springframework.http.HttpRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.http.client.ClientHttpRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.http.server.ServerHttpRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.http.server.ServletServerHttpRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.web.multipart.support.RequestPartServletServerHttpRequest
        $REQ).$METHOD(...)
    - pattern: (org.springframework.http.server.reactive.ServerHttpRequest $REQ).$METHOD(...)
    - pattern: (org.springframework.http.server.reactive.ServerHttpRequestDecorator
        $REQ).$METHOD(...)
  - metavariable-regex:
      metavariable: $METHOD
      regex: (getPath|getQueryParams|getBody|getURI|getHeaders|getCookies)
- label: REQ
  patterns:
  - pattern-either:
    - pattern: (javax.servlet.ServletRequest $REQ).$METHOD(...)
    - pattern: (javax.servlet.http.HttpServletRequest $REQ).$METHOD(...)
    - pattern: (jakarta.servlet.ServletRequest $REQ).$METHOD(...)
    - pattern: (jakarta.servlet.http.HttpServletRequest $REQ).$METHOD(...)
  - metavariable-regex:
      metavariable: $METHOD
      regex: (getInputStream|getParameter|getParameterMap|getParameterValues|getReader|getCookies|getHeader|getHeaderNames|getHeaders|getPart|getParts|getQueryString)
- label: SCHEMAFACTORY
  pattern: (SchemaFactory $FACTORY)
- by-side-effect: true
  label: FSP
  patterns:
  - focus-metavariable: $PARSER
  - pattern-either:
    - pattern: $PARSER.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true)
    - pattern: $PARSER.setFeature("=~/.*secure-processing.*/", true)
- by-side-effect: true
  label: EXTERNAL_SCHEMA
  patterns:
  - focus-metavariable: $FACTORY
  - pattern-either:
    - pattern: $FACTORY.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, "")
    - pattern: $FACTORY.setProperty("=~/.*accessExternalSchema.*/", "")
- by-side-effect: true
  label: DTD
  patterns:
  - focus-metavariable: $PARSER
  - pattern-not-inside: "if (...) {\n  ...\n} else {\n  ...\n}\n"
  - pattern-either:
    - pattern: $PARSER.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, "")
    - pattern: $PARSER.setProperty("=~/.*accessExternalDTD.*/", "")
pattern-propagators:
- from: $INPUT
  patterns:
  - pattern-either:
    - pattern: String.format($FMT, ..., $INPUT, ...)
    - pattern: MessageFormat.format($FMT, ..., $INPUT, ...)
  to: $FMT
- from: $INPUT
  patterns:
  - pattern: (StringBuilder $BUILDER).append($INPUT);
  to: $BUILDER
pattern-sinks:
- pattern: (SchemaFactory $FACTORY).newSchema(...)
  requires: (REQ and SCHEMAFACTORY) and not (FSP or (DTD and EXTERNAL_SCHEMA))
pattern-sanitizers:
- pattern: (ChoiceFormat $X).format(...)
- pattern: (DecimalFormat $X).format(...)
- pattern: (java.util.UUID $X)
