id: cpp.lang.security.format-string.format-string-injection.format-string-injection
message: Externally controlled data influences a format string. This can allow an
  attacker to leak information from memory or trigger memory corruption. Format strings
  should be constant strings to prevent these issues. If you need to print a user-controlled
  string then you can use `%s`.
severity: WARNING
metadata:
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cert:
  - C
  - C++
  - FIO30-C
  - L1
  cwe:
  - 'CWE-134: Use of Externally-Controlled Format String'
  functional-categories:
  - os::source::console
  - os::source::environment
  references:
  - https://wiki.sei.cmu.edu/confluence/display/c/FIO30-C.+Exclude+user+input+from+format+strings
  supersedes:
  - c.lang.security.insecure-use-printf-fn.insecure-use-printf-fn
  technology:
  - cpp
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Improper Validation
  source: https://semgrep.dev/r/cpp.lang.security.format-string.format-string-injection.format-string-injection
  shortlink: https://sg.run/10BgD
  semgrep.dev:
    rule:
      r_id: 114766
      rv_id: 704230
      rule_id: OrUN8Op
      version_id: o5T2Z8K
      url: https://semgrep.dev/playground/r/o5T2Z8K/cpp.lang.security.format-string.format-string-injection.format-string-injection
      origin: pro_rules
languages:
- cpp
- c
mode: taint
min-version: 1.59.0
options:
  interfile: true
pattern-sources:
- patterns:
  - pattern: "int main(int $ARGC, $ARGV_TY $ARGV, $ENVP_TY $ENVP) {\n  ...\n}\n"
  - focus-metavariable: $ENVP
- patterns:
  - pattern: "int main(int $ARGC, $ARGV_TY $ARGV, ...) {\n  ...\n}\n"
  - focus-metavariable: $ARGV
- pattern-either:
  - pattern: getenv(...)
  - pattern: std::getenv(...)
  - pattern: readline()
- by-side-effect: only
  patterns:
  - pattern-either:
    - pattern: gets($SRC)
    - pattern: fread($SRC, ...)
    - pattern: fgets($SRC, ...)
    - pattern: getline($SRC, ...)
    - pattern: getdelim($SRC, ...)
    - pattern: read($S_OR_FP, $SRC, ...)
    - pattern: msgrcv($QID, $SRC, ...)
  - focus-metavariable: $SRC
- pattern: gets(...)
- by-side-effect: only
  patterns:
  - pattern-either:
    - pattern: $X.get($SRC, ...)
    - pattern: $X.getline($SRC, ...)
    - pattern: $X.read($SRC, ...)
    - pattern: $X.readsome($SRC, ...)
  - metavariable-type:
      metavariable: $X
      types:
      - basic_ifstream<$TYPE>
      - std::basic_ifstream<$TYPE>
      - ifstream
      - std::ifstream
      - wifstream
      - std::wifstream
      - basic_ofstream<$TYPE>
      - std::basic_ofstream<$TYPE>
      - ofstream
      - std::ofstream
      - wofstream
      - std::wofstream
      - basic_fstream<$TYPE>
      - std::basic_fstream<$TYPE>
      - fstream
      - std::fstream
      - wfstream
      - std::wfstream
      - basic_filebuf<$TYPE>
      - std::basic_filebuf<$TYPE>
      - filebuf
      - std::filebuf
      - wfilebuf
      - std::wfilebuf
  - focus-metavariable: $SRC
- by-side-effect: only
  patterns:
  - pattern-either:
    - pattern: recv($S, $SRC, ...)
    - pattern: recvfrom($S, $SRC, ...)
    - pattern: recvmsg($S, $SRC, ...)
    - patterns:
      - pattern: curl_easy_setopt($CURL, CURLOPT_WRITEDATA, $SRC)
      - pattern-not: curl_easy_setopt($CURL, CURLOPT_WRITEDATA, $CURL)
  - focus-metavariable: $SRC
- pattern: mysql_fetch_row(...)
- by-side-effect: only
  patterns:
  - pattern: mysql_fetch_row_nonblocking($RESULT, &$ROW)
  - focus-metavariable: $ROW
- patterns:
  - pattern: $WT->body()
  - metavariable-type:
      metavariable: $WT
      types:
      - Wt::Http::Message*
      - Http::Message*
      - Wt::Mail::Message*
      - Mail::Message*
pattern-propagators:
- from: $FROM
  patterns:
  - pattern-either:
    - pattern: memccpy($TO, $FROM, ...)
    - pattern: memcpy($TO, $FROM, ...)
    - pattern: memcpy_s($TO, $TO_SIZE, $FROM, ...)
    - pattern: memmove($TO, $FROM, ...)
    - pattern: memmove_s($TO, $TO_SIZE, $FROM, ...)
    - pattern: snprintf($TO, $SIZE, $FORMAT, ..., $FROM, ...)
    - pattern: sprintf($TO, $FORMAT, ..., $FROM, ...)
    - pattern: stpcpy($TO, $FROM)
    - pattern: stpncpy($TO, $FROM, ...)
    - pattern: strcat($TO, $FROM)
    - pattern: strcpy($TO, $FROM)
    - pattern: strcpy_s($TO, $SIZE, $FROM)
    - pattern: strlcat($TO, $FROM, ...)
    - pattern: strlcpy($TO, $FROM, ...)
    - pattern: strncat($TO, $FROM, ...)
    - pattern: strncpy($TO, $FROM, ...)
    - pattern: strncpy_s($TO, $TO_SIZE, $FROM, ...)
    - pattern: strxfrm($TO, $FROM, ...)
  to: $TO
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern: $TO.append(..., $FROM, ...)
      - pattern: $TO.append_range($FROM)
      - pattern: $TO.assign($FROM, ...)
      - pattern: $TO.assign_range($FROM)
      - pattern: $TO.insert(..., $FROM, ...)
      - pattern: $TO.insert_range($POSITION, $FROM)
      - pattern: $TO.replace(..., $FROM, ...)
      - pattern: $TO.replace_with_range($FIRST, $LAST, $FROM)
      - pattern: $FROM.copy($TO, ...)
    - metavariable-type:
        metavariable: $TO
        types:
        - basic_string<$TYPE>
        - std::basic_string<$TYPE>
        - string
        - std::string
        - wstring
        - std::wstring
  to: $TO
- from: $FROM
  patterns:
  - pattern-either:
    - patterns:
      - pattern: $TO.open($FROM, ...)
      - metavariable-type:
          metavariable: $TO
          types:
          - basic_ifstream<$TYPE>
          - std::basic_ifstream<$TYPE>
          - ifstream
          - std::ifstream
          - wifstream
          - std::wifstream
          - basic_ofstream<$TYPE>
          - std::basic_ofstream<$TYPE>
          - ofstream
          - std::ofstream
          - wofstream
          - std::wofstream
          - basic_fstream<$TYPE>
          - std::basic_fstream<$TYPE>
          - fstream
          - std::fstream
          - wfstream
          - std::wfstream
          - basic_filebuf<$TYPE>
          - std::basic_filebuf<$TYPE>
          - filebuf
          - std::filebuf
          - wfilebuf
          - std::wfilebuf
    - patterns:
      - pattern-either:
        - pattern: $FROM.get($TO, ...)
        - pattern: $FROM.getline($TO, ...)
        - pattern: $FROM.read($TO, ...)
        - pattern: $FROM.readsome($TO, ...)
      - metavariable-type:
          metavariable: $FROM
          types:
          - basic_ifstream<$TYPE>
          - std::basic_ifstream<$TYPE>
          - ifstream
          - std::ifstream
          - wifstream
          - std::wifstream
          - basic_ofstream<$TYPE>
          - std::basic_ofstream<$TYPE>
          - ofstream
          - std::ofstream
          - wofstream
          - std::wofstream
          - basic_fstream<$TYPE>
          - std::basic_fstream<$TYPE>
          - fstream
          - std::fstream
          - wfstream
          - std::wfstream
          - basic_filebuf<$TYPE>
          - std::basic_filebuf<$TYPE>
          - filebuf
          - std::filebuf
          - wfilebuf
          - std::wfilebuf
  to: $TO
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern: $FROM >> $TO
      - pattern: $FROM >> $_1 >> $TO
      - pattern: $FROM >> $_1 >> $_2 >> $TO
      - pattern: $FROM >> $_1 >> $_2 >> $_3 >> $TO
      - pattern: $FROM >> $_1 >> $_2 >> $_3 >> $_4 >> $TO
    - metavariable-type:
        metavariable: $FROM
        types:
        - basic_ifstream<$TYPE>
        - std::basic_ifstream<$TYPE>
        - ifstream
        - std::ifstream
        - wifstream
        - std::wifstream
        - basic_ofstream<$TYPE>
        - std::basic_ofstream<$TYPE>
        - ofstream
        - std::ofstream
        - wofstream
        - std::wofstream
        - basic_fstream<$TYPE>
        - std::basic_fstream<$TYPE>
        - fstream
        - std::fstream
        - wfstream
        - std::wfstream
        - basic_filebuf<$TYPE>
        - std::basic_filebuf<$TYPE>
        - filebuf
        - std::filebuf
        - wfilebuf
        - std::wfilebuf
        - basic_istringstream<$TYPE>
        - std::basic_istringstream<$TYPE>
        - istringstream
        - std::istringstream
        - wistringstream
        - std::wistringstream
        - basic_ostringstream<$TYPE>
        - std::basic_ostringstream<$TYPE>
        - ostringstream
        - std::ostringstream
        - wostringstream
        - std::wostringstream
        - basic_stringstream<$TYPE>
        - std::basic_stringstream<$TYPE>
        - stringstream
        - std::stringstream
        - wstringstream
        - std::wstringstream
  to: $TO
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern: $TO << $FROM
      - pattern: $TO << $_1 << $FROM
      - pattern: $TO << $_1 << $_2 << $FROM
      - pattern: $TO << $_1 << $_2 << $_3 << $FROM
      - pattern: $TO << $_1 << $_2 << $_3 << $_4 << $FROM
    - metavariable-type:
        metavariable: $TO
        types:
        - basic_ifstream<$TYPE>
        - std::basic_ifstream<$TYPE>
        - ifstream
        - std::ifstream
        - wifstream
        - std::wifstream
        - basic_ofstream<$TYPE>
        - std::basic_ofstream<$TYPE>
        - ofstream
        - std::ofstream
        - wofstream
        - std::wofstream
        - basic_fstream<$TYPE>
        - std::basic_fstream<$TYPE>
        - fstream
        - std::fstream
        - wfstream
        - std::wfstream
        - basic_filebuf<$TYPE>
        - std::basic_filebuf<$TYPE>
        - filebuf
        - std::filebuf
        - wfilebuf
        - std::wfilebuf
        - basic_istringstream<$TYPE>
        - std::basic_istringstream<$TYPE>
        - istringstream
        - std::istringstream
        - wistringstream
        - std::wistringstream
        - basic_ostringstream<$TYPE>
        - std::basic_ostringstream<$TYPE>
        - ostringstream
        - std::ostringstream
        - wostringstream
        - std::wostringstream
        - basic_stringstream<$TYPE>
        - std::basic_stringstream<$TYPE>
        - stringstream
        - std::stringstream
        - wstringstream
        - std::wstringstream
  to: $TO
pattern-sinks:
- patterns:
  - pattern-inside: "$RET $FUNC(...) {\n  ...\n}\n"
  - patterns:
    - pattern-either:
      - pattern: printf($SRC, ...)
      - pattern: fprintf($FP, $SRC, ...)
      - pattern: sprintf($BUF, $SRC, ...)
      - pattern: snprintf($BUF, $SIZE, $SRC, ...)
      - pattern: vprintf($SRC, ...)
      - pattern: vfprintf($FP, $SRC, ...)
      - pattern: vsprintf($BUF, $SRC, ...)
      - pattern: vsnprintf($BUF, $SIZE, $SRC, ...)
      - pattern: wprintf($SRC, ...)
      - pattern: fwprintf($FP, $SRC, ...)
      - pattern: swprintf($BUF, $SIZE, $SRC, ...)
      - pattern: scanf($SRC, ...)
      - pattern: fscanf($FP, $SRC, ...)
      - pattern: sscanf($BUF, $SRC, ...)
      - pattern: std::printf($SRC, ...)
      - pattern: std::fprintf($FP, $SRC, ...)
      - pattern: std::sprintf($BUF, $SRC, ...)
      - pattern: std::snprintf($BUF, $SIZE, $SRC, ...)
      - pattern: std::vprintf($SRC, ...)
      - pattern: std::vfprintf($FP, $SRC, ...)
      - pattern: std::vsprintf($BUF, $SRC, ...)
      - pattern: std::vsnprintf($BUF, $SIZE, $SRC, ...)
      - pattern: std::wprintf($SRC, ...)
      - pattern: std::fwprintf($FP, $SRC, ...)
      - pattern: std::swprintf($BUF, $SIZE, $SRC, ...)
      - pattern: std::scanf($SRC, ...)
      - pattern: std::fscanf($FP, $SRC, ...)
      - pattern: std::sscanf($BUF, $SRC, ...)
    - focus-metavariable: $SRC
