id: java.lang.security.audit.ognl-injection.ognl-injection
message: A expression is built with a dynamic value. The source of the value(s) should
  be verified to avoid that unfiltered values fall into this risky code evaluation.
metadata:
  cwe:
  - 'CWE-94: Improper Control of Generation of Code (''Code Injection'')'
  owasp:
  - A03:2021 - Injection
  source-rule-url: https://find-sec-bugs.github.io/bugs.htm#OGNL_INJECTION
  category: security
  technology:
  - ognl
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  cwe2022-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/java.lang.security.audit.ognl-injection.ognl-injection
  shortlink: https://sg.run/7o7R
  semgrep.dev:
    rule:
      r_id: 9182
      rv_id: 109724
      rule_id: ReUgjJ
      version_id: 8KTQ9Xw
      url: https://semgrep.dev/playground/r/8KTQ9Xw/java.lang.security.audit.ognl-injection.ognl-injection
      origin: community
severity: WARNING
languages:
- java
patterns:
- pattern-either:
  - pattern: "$X $METHOD(...,OgnlReflectionProvider $P,...) {\n  ...\n  $P.getGetMethod($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlReflectionProvider $P,...) {\n  ...\n  $P.getSetMethod($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlReflectionProvider $P,...) {\n  ...\n  $P.getField($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlReflectionProvider $P,...) {\n  ...\n  $P.setProperties($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlReflectionProvider $P,...) {\n  ...\n  $P.setProperty($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlReflectionProvider $P,...) {\n  ...\n  $P.getValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlReflectionProvider $P,...) {\n  ...\n  $P.setValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ReflectionProvider $P,...) {\n  ...\n  $P.getGetMethod($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...,ReflectionProvider $P,...) {\n  ...\n  $P.getSetMethod($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...,ReflectionProvider $P,...) {\n  ...\n  $P.getField($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...,ReflectionProvider $P,...) {\n  ...\n  $P.setProperties($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ReflectionProvider $P,...) {\n  ...\n  $P.setProperty($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ReflectionProvider $P,...) {\n  ...\n  $P.getValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ReflectionProvider $P,...) {\n  ...\n  $P.setValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,TextParseUtil $P,...) {\n  ...\n  $P.translateVariables($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,TextParseUtil $P,...) {\n  ...\n  $P.translateVariablesCollection($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,TextParseUtil $P,...) {\n  ...\n  $P.shallBeIncluded($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,TextParseUtil $P,...) {\n  ...\n  $P.commaDelimitedStringToSet($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,TextParser $P,...) {\n  ...\n  $P.evaluate($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlTextParser $P,...) {\n  ...\n  $P.evaluate($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlUtil $P,...) {\n  ...\n  $P.setProperties($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlUtil $P,...) {\n  ...\n  $P.setProperty($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlUtil $P,...) {\n  ...\n  $P.getValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlUtil $P,...) {\n  ...\n  $P.setValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlUtil $P,...) {\n  ...\n  $P.callMethod($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlUtil $P,...) {\n  ...\n  $P.compile($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,VelocityStrutsUtil $P,...) {\n  ...\n  $P.evaluate($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,StrutsUtil $P,...) {\n  ...\n  $P.isTrue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,StrutsUtil $P,...) {\n  ...\n  $P.findString($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,StrutsUtil $P,...) {\n  ...\n  $P.findValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,StrutsUtil $P,...) {\n  ...\n  $P.getText($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,StrutsUtil $P,...) {\n  ...\n  $P.translateVariables($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,StrutsUtil $P,...) {\n  ...\n  $P.makeSelectList($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,OgnlTool $P,...) {\n  ...\n  $P.findValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ValueStack $P,...) {\n  ...\n  $P.findString($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ValueStack $P,...) {\n  ...\n  $P.findValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ValueStack $P,...) {\n  ...\n  $P.setValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...,ValueStack $P,...) {\n  ...\n  $P.setParameter($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlReflectionProvider $P = ...;\n  ...\n\
      \  $P.getGetMethod($T, $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlReflectionProvider $P = ...;\n  ...\n\
      \  $P.getSetMethod($T, $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlReflectionProvider $P = ...;\n  ...\n\
      \  $P.getField($T, $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlReflectionProvider $P = ...;\n  ...\n\
      \  $P.setProperties($INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlReflectionProvider $P = ...;\n  ...\n\
      \  $P.setProperty($INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlReflectionProvider $P = ...;\n  ...\n\
      \  $P.getValue($INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlReflectionProvider $P = ...;\n  ...\n\
      \  $P.setValue($INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ReflectionProvider $P = ...;\n  ...\n  $P.getGetMethod($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ReflectionProvider $P = ...;\n  ...\n  $P.getSetMethod($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ReflectionProvider $P = ...;\n  ...\n  $P.getField($T,\
      \ $INPUT,...);\n  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ReflectionProvider $P = ...;\n  ...\n  $P.setProperties($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ReflectionProvider $P = ...;\n  ...\n  $P.setProperty($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ReflectionProvider $P = ...;\n  ...\n  $P.getValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ReflectionProvider $P = ...;\n  ...\n  $P.setValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  TextParseUtil $P = ...;\n  ...\n  $P.translateVariables($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  TextParseUtil $P = ...;\n  ...\n  $P.translateVariablesCollection($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  TextParseUtil $P = ...;\n  ...\n  $P.shallBeIncluded($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  TextParseUtil $P = ...;\n  ...\n  $P.commaDelimitedStringToSet($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  TextParser $P = ...;\n  ...\n  $P.evaluate($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlTextParser $P = ...;\n  ...\n  $P.evaluate($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlUtil $P = ...;\n  ...\n  $P.setProperties($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlUtil $P = ...;\n  ...\n  $P.setProperty($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlUtil $P = ...;\n  ...\n  $P.getValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlUtil $P = ...;\n  ...\n  $P.setValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlUtil $P = ...;\n  ...\n  $P.callMethod($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlUtil $P = ...;\n  ...\n  $P.compile($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  VelocityStrutsUtil $P = ...;\n  ...\n  $P.evaluate($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  StrutsUtil $P = ...;\n  ...\n  $P.isTrue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  StrutsUtil $P = ...;\n  ...\n  $P.findString($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  StrutsUtil $P = ...;\n  ...\n  $P.findValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  StrutsUtil $P = ...;\n  ...\n  $P.getText($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  StrutsUtil $P = ...;\n  ...\n  $P.translateVariables($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  StrutsUtil $P = ...;\n  ...\n  $P.makeSelectList($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  OgnlTool $P = ...;\n  ...\n  $P.findValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ValueStack $P = ...;\n  ...\n  $P.findString($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ValueStack $P = ...;\n  ...\n  $P.findValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ValueStack $P = ...;\n  ...\n  $P.setValue($INPUT,...);\n\
      \  ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  ValueStack $P = ...;\n  ...\n  $P.setParameter($INPUT,...);\n\
      \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.getGetMethod($T,\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.getSetMethod($T,\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.getField($T,\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.setProperties(\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.setProperty(\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.getValue(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.setValue(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.translateVariables(\"...\",...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.translateVariablesCollection(\"...\"\
    ,...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.shallBeIncluded(\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.commaDelimitedStringToSet(\"...\",...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.evaluate(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.callMethod(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.compile(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.isTrue(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.findString(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.findValue(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.getText(\"...\",...);\n  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.makeSelectList(\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  $P.setParameter(\"...\",...);\n  ...\n\
    }\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.getGetMethod($T,$S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.getSetMethod($T,$S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.getField($T,$S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.setProperties($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.setProperty($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.getValue($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.setValue($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.translateVariables($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.translateVariablesCollection($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.shallBeIncluded($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.commaDelimitedStringToSet($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.evaluate($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.callMethod($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.compile($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.isTrue($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.findString($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.findValue($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.getText($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.makeSelectList($S,...);\n\
    \  ...\n}\n"
- pattern-not: "$X $METHOD(...) {\n  ...\n  String $S = \"...\";\n  ...\n  $P.setParameter($S,...);\n\
    \  ...\n}\n"
