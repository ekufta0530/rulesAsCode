id: php.lang.security.audit.openssl-decrypt-validate.openssl-decrypt-validate
patterns:
- pattern: openssl_decrypt(...);
- pattern-not-inside: "$DECRYPTED_STRING = openssl_decrypt(...);\n...\nif($DECRYPTED_STRING\
    \ === false){\n  ...\n}\n"
- pattern-not-inside: "$DECRYPTED_STRING = openssl_decrypt(...);\n...\nif($DECRYPTED_STRING\
    \ == false){\n  ...\n}\n"
- pattern-not-inside: "$DECRYPTED_STRING = openssl_decrypt(...);\n...\nif(false ===\
    \ $DECRYPTED_STRING){\n  ...\n}\n"
- pattern-not-inside: "$DECRYPTED_STRING = openssl_decrypt(...);\n...\nif(false ==\
    \ $DECRYPTED_STRING){\n  ...\n}\n"
- pattern-not-inside: '$DECRYPTED_STRING = openssl_decrypt(...);

    ...

    assertTrue(false !== $DECRYPTED_STRING,...);

    '
- pattern-not-inside: '$DECRYPTED_STRING = openssl_decrypt(...);

    ...

    assertTrue($DECRYPTED_STRING !== false,...);

    '
- pattern-not-inside: '$DECRYPTED_STRING = openssl_decrypt(...);

    ...

    $REFERENCE::assertTrue(false !== $DECRYPTED_STRING,...);

    '
- pattern-not-inside: '$DECRYPTED_STRING = openssl_decrypt(...);

    ...

    $REFERENCE::assertTrue($DECRYPTED_STRING !== false,...);

    '
- pattern-not-inside: '$DECRYPTED_STRING = openssl_decrypt(...);

    ...

    assert(false !== $DECRYPTED_STRING,...);

    '
- pattern-not-inside: '$DECRYPTED_STRING = openssl_decrypt(...);

    ...

    assert($DECRYPTED_STRING !== false,...);

    '
message: The function `openssl_decrypt` returns either a string of the decrypted data
  on success or `false` on failure. If the failure case is not handled, this could
  lead to undefined behavior in your application. Please handle the case where `openssl_decrypt`
  returns `false`.
languages:
- php
severity: WARNING
metadata:
  references:
  - https://www.php.net/manual/en/function.openssl-decrypt.php
  cwe:
  - 'CWE-252: Unchecked Return Value'
  owasp:
  - A02:2021 - Cryptographic Failures
  technology:
  - php
  - openssl
  category: security
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Other
  source: https://semgrep.dev/r/php.lang.security.audit.openssl-decrypt-validate.openssl-decrypt-validate
  shortlink: https://sg.run/kzn7
  semgrep.dev:
    rule:
      r_id: 17328
      rv_id: 110033
      rule_id: YGUAoe
      version_id: JdTNpx9
      url: https://semgrep.dev/playground/r/JdTNpx9/php.lang.security.audit.openssl-decrypt-validate.openssl-decrypt-validate
      origin: community
