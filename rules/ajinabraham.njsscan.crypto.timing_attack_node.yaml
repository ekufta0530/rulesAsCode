id: ajinabraham.njsscan.crypto.timing_attack_node.node_timing_attack
patterns:
- pattern-not: if ($Z == null) { ... };
- pattern-not: if ($Z === null) { ... };
- pattern-not: if ($Z != null) { ... };
- pattern-not: if ($Z !== null) { ... };
- pattern-not: if ($Q != undefined) { ... };
- pattern-not: if ($Q !== undefined) { ... };
- pattern-not: if ($Q == undefined) { ... };
- pattern-not: if ($Q === undefined) { ... };
- pattern-not: return $Y == null;
- pattern-not: return $Y === null;
- pattern-not: return $Y != null;
- pattern-not: return $Y !== null;
- pattern-not: return $Y == undefined;
- pattern-not: return $Y === undefined;
- pattern-not: return $Y != undefined;
- pattern-not: return $Y !== undefined;
- pattern-either:
  - pattern: "if (password == $X) {\n    ...\n}\n"
  - pattern: "if ($X == password) {\n    ...\n}\n"
  - pattern: "if (password === $X) {\n    ...\n}\n"
  - pattern: "if ($X === password) {\n    ...\n}\n"
  - pattern: "if (pass == $X) {\n    ...\n}\n"
  - pattern: "if ($X == pass) {\n    ...\n}\n"
  - pattern: "if (pass === $X) {\n    ...\n}\n"
  - pattern: "if ($X === pass) {\n    ...\n}\n"
  - pattern: "if (secret == $X) {\n    ...\n}\n"
  - pattern: "if ($X == secret) {\n    ...\n}\n"
  - pattern: "if (secret === $X) {\n    ...\n}\n"
  - pattern: "if ($X === secret) {\n    ...\n}\n"
  - pattern: "if (api == $X) {\n    ...\n}\n"
  - pattern: "if ($X == api) {\n    ...\n}\n"
  - pattern: "if (api === $X) {\n    ...\n}\n"
  - pattern: "if ($X === api) {\n    ...\n}\n"
  - pattern: "if (apiKey == $X) {\n    ...\n}\n"
  - pattern: "if ($X == apiKey) {\n    ...\n}\n"
  - pattern: "if (apiKey === $X) {\n    ...\n}\n"
  - pattern: "if ($X === apiKey) {\n    ...\n}\n"
  - pattern: "if (apiSecret == $X) {\n    ...\n}\n"
  - pattern: "if ($X == apiSecret) {\n    ...\n}\n"
  - pattern: "if (apiSecret === $X) {\n    ...\n}\n"
  - pattern: "if ($X === apiSecret) {\n    ...\n}\n"
  - pattern: "if (token == $X) {\n    ...\n}\n"
  - pattern: "if ($X == token) {\n    ...\n}\n"
  - pattern: "if (token === $X) {\n    ...\n}\n"
  - pattern: "if ($X === token) {\n    ...\n}\n"
  - pattern: "if (hash == $X) {\n    ...\n}\n"
  - pattern: "if ($X == hash) {\n    ...\n}\n"
  - pattern: "if (hash === $X) {\n    ...\n}\n"
  - pattern: "if ($X === hash) {\n    ...\n}\n"
  - pattern: "if (auth_token == $X) {\n    ...\n}\n"
  - pattern: "if ($X == auth_token) {\n    ...\n}\n"
  - pattern: "if (auth_token === $X) {\n    ...\n}\n"
  - pattern: "if ($X === auth_token) {\n    ...\n}\n"
  - pattern: "if (password != $X) {\n    ...\n}\n"
  - pattern: "if ($X != password) {\n    ...\n}\n"
  - pattern: "if (password !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== password) {\n    ...\n}\n"
  - pattern: "if (pass != $X) {\n    ...\n}\n"
  - pattern: "if ($X != pass) {\n    ...\n}\n"
  - pattern: "if (pass !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== pass) {\n    ...\n}\n"
  - pattern: "if (secret != $X) {\n    ...\n}\n"
  - pattern: "if ($X != secret) {\n    ...\n}\n"
  - pattern: "if (secret !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== secret) {\n    ...\n}\n"
  - pattern: "if (api != $X) {\n    ...\n}\n"
  - pattern: "if ($X != api) {\n    ...\n}\n"
  - pattern: "if (api !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== api) {\n    ...\n}\n"
  - pattern: "if (apiKey != $X) {\n    ...\n}\n"
  - pattern: "if ($X != apiKey) {\n    ...\n}\n"
  - pattern: "if (apiKey !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== apiKey) {\n    ...\n}\n"
  - pattern: "if (apiSecret != $X) {\n    ...\n}\n"
  - pattern: "if ($X != apiSecret) {\n    ...\n}\n"
  - pattern: "if (apiSecret !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== apiSecret) {\n    ...\n}\n"
  - pattern: "if (token != $X) {\n    ...\n}\n"
  - pattern: "if ($X != token) {\n    ...\n}\n"
  - pattern: "if (token !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== token) {\n    ...\n}\n"
  - pattern: "if (hash != $X) {\n    ...\n}\n"
  - pattern: "if ($X != hash) {\n    ...\n}\n"
  - pattern: "if (hash !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== hash) {\n    ...\n}\n"
  - pattern: "if (auth_token != $X) {\n    ...\n}\n"
  - pattern: "if ($X != auth_token) {\n    ...\n}\n"
  - pattern: "if (auth_token !== $X) {\n    ...\n}\n"
  - pattern: "if ($X !== auth_token) {\n    ...\n}\n"
  - pattern: 'return $X === auth_token;

      '
  - pattern: 'return auth_token === $X;

      '
  - pattern: 'return $X === token;

      '
  - pattern: 'return token === $X;

      '
  - pattern: 'return $X === hash;

      '
  - pattern: 'return hash === $X;

      '
  - pattern: 'return $X === password;

      '
  - pattern: 'return password === $X;

      '
  - pattern: 'return $X === pass;

      '
  - pattern: 'return pass === $X;

      '
  - pattern: 'return $X === apiKey;

      '
  - pattern: 'return apiKey === $X;

      '
  - pattern: 'return $X === apiSecret;

      '
  - pattern: 'return apiSecret === $X;

      '
  - pattern: 'return $X === api_key;

      '
  - pattern: 'return api_key === $X;

      '
  - pattern: 'return $X === api_secret;

      '
  - pattern: 'return api_secret === $X;

      '
  - pattern: 'return $X === secret;

      '
  - pattern: 'return secret === $X;

      '
  - pattern: 'return $X === api;

      '
  - pattern: 'return api === $X;

      '
  - pattern: 'return $X == auth_token;

      '
  - pattern: 'return auth_token == $X;

      '
  - pattern: 'return $X == token;

      '
  - pattern: 'return token == $X;

      '
  - pattern: 'return $X == hash;

      '
  - pattern: 'return hash == $X;

      '
  - pattern: 'return $X == password;

      '
  - pattern: 'return password == $X;

      '
  - pattern: 'return $X == pass;

      '
  - pattern: 'return pass == $X;

      '
  - pattern: 'return $X == apiKey;

      '
  - pattern: 'return apiKey == $X;

      '
  - pattern: 'return $X == apiSecret;

      '
  - pattern: 'return apiSecret == $X;

      '
  - pattern: 'return $X == api_key;

      '
  - pattern: 'return api_key == $X;

      '
  - pattern: 'return $X == api_secret;

      '
  - pattern: 'return api_secret == $X;

      '
  - pattern: 'return $X == secret;

      '
  - pattern: 'return secret == $X;

      '
  - pattern: 'return $X == api;

      '
  - pattern: 'return api == $X;

      '
  - pattern: 'return $X !== auth_token;

      '
  - pattern: 'return auth_token !== $X;

      '
  - pattern: 'return $X !== token;

      '
  - pattern: 'return token !== $X;

      '
  - pattern: 'return $X !== hash;

      '
  - pattern: 'return hash !== $X;

      '
  - pattern: 'return $X !== password;

      '
  - pattern: 'return password !== $X;

      '
  - pattern: 'return $X !== pass;

      '
  - pattern: 'return pass !== $X;

      '
  - pattern: 'return $X !== apiKey;

      '
  - pattern: 'return apiKey !== $X;

      '
  - pattern: 'return $X !== apiSecret;

      '
  - pattern: 'return apiSecret !== $X;

      '
  - pattern: 'return $X !== api_key;

      '
  - pattern: 'return api_key !== $X;

      '
  - pattern: 'return $X !== api_secret;

      '
  - pattern: 'return api_secret !== $X;

      '
  - pattern: 'return $X !== secret;

      '
  - pattern: 'return secret !== $X;

      '
  - pattern: 'return $X !== api;

      '
  - pattern: 'return api !== $X;

      '
  - pattern: 'return $X != auth_token;

      '
  - pattern: 'return auth_token != $X;

      '
  - pattern: 'return $X != token;

      '
  - pattern: 'return token != $X;

      '
  - pattern: 'return $X != hash;

      '
  - pattern: 'return hash != $X;

      '
  - pattern: 'return $X != password;

      '
  - pattern: 'return password != $X;

      '
  - pattern: 'return $X != pass;

      '
  - pattern: 'return pass != $X;

      '
  - pattern: 'return $X != apiKey;

      '
  - pattern: 'return apiKey != $X;

      '
  - pattern: 'return $X != apiSecret;

      '
  - pattern: 'return apiSecret != $X;

      '
  - pattern: 'return $X != api_key;

      '
  - pattern: 'return api_key != $X;

      '
  - pattern: 'return $X != api_secret;

      '
  - pattern: 'return api_secret != $X;

      '
  - pattern: 'return $X != secret;

      '
  - pattern: 'return secret != $X;

      '
  - pattern: 'return $X != api;

      '
  - pattern: 'return api != $X;

      '
message: 'String comparisons using ''==='', ''!=='', ''!='' and ''=='' is vulnerable
  to timing attacks. A timing attack allows the attacker to learn potentially sensitive
  information by, for example, measuring how long it takes for the application to
  respond to a request.  More info: https://nodejs.org/en/learn/getting-started/security-best-practices#information-exposure-through-timing-attacks-cwe-208'
languages:
- javascript
severity: WARNING
metadata:
  owasp-web: a9
  cwe: cwe-208
  license: LGPL-3.0-or-later
  vulnerability_class:
  - Other
  source: https://semgrep.dev/r/ajinabraham.njsscan.crypto.timing_attack_node.node_timing_attack
  shortlink: https://sg.run/BDR2
  semgrep.dev:
    rule:
      r_id: 43607
      rv_id: 724513
      rule_id: v8UJKp
      version_id: QkTnL1k
      url: https://semgrep.dev/playground/r/QkTnL1k/ajinabraham.njsscan.crypto.timing_attack_node.node_timing_attack
      origin: community
