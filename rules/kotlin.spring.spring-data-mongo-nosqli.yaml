id: kotlin.spring.spring-data-mongo-nosqli.spring-data-mongo-nosqli
message: Untrusted input might be used to build a database query, which can lead to
  a NoSQL injection vulnerability. An attacker can execute malicious NoSQL statements
  and gain unauthorized access to sensitive data, modify, delete data, or execute
  arbitrary system commands. Make sure all user input is validated and sanitized,
  and avoid using tainted user input to construct NoSQL statements if possible. Ideally,
  avoid raw queries and instead use parameterized queries.
severity: ERROR
metadata:
  likelihood: HIGH
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-943: Improper Neutralization of Special Elements in Data Query Logic'
  functional-categories:
  - db::source::sql-or-nosql-query::SpringData
  - web::source::cookie::SpringBoot
  - web::source::header::SpringBoot
  - web::source::http-body::SpringBoot
  - web::source::http-params::SpringBoot
  - web::source::url-path-params::SpringBoot
  owasp:
  - A01:2017 - Injection
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  technology:
  - kotlin
  - mongo
  - nosql
  - spring
  - spring-data
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Improper Validation
  source: https://semgrep.dev/r/kotlin.spring.spring-data-mongo-nosqli.spring-data-mongo-nosqli
  shortlink: https://sg.run/1w35
  semgrep.dev:
    rule:
      r_id: 59566
      rv_id: 731952
      rule_id: d8UXdG
      version_id: BjTznDr
      url: https://semgrep.dev/playground/r/BjTznDr/kotlin.spring.spring-data-mongo-nosqli.spring-data-mongo-nosqli
      origin: pro_rules
languages:
- kotlin
mode: taint
pattern-sources:
- label: USER_INPUT
  patterns:
  - pattern-either:
    - pattern: '($REQ: ServletRequest)

        '
    - pattern: '($REQ: HttpServletRequest)

        '
    - pattern: '($REQ: WebRequest)

        '
    - pattern: '($REQ: ServletWebRequest)

        '
    - pattern: '($REQ: FacesWebRequest)

        '
    - pattern: '($REQ: NativeWebRequest)

        '
    - patterns:
      - pattern-either:
        - pattern: 'fun $METHOD(..., @$REQ(...) $SOURCE: $TYPE, ...) {...}

            '
        - pattern: 'fun $METHOD(..., @$REQ $SOURCE: $TYPE, ...) {...}

            '
        - pattern: 'fun $METHOD(..., @$REQ(...) $SOURCE: $TYPE, ...) = $Z(...)

            '
        - pattern: 'fun $METHOD(..., @$REQ $SOURCE: $TYPE, ...) = $Z(...)

            '
      - metavariable-regex:
          metavariable: $TYPE
          regex: ^(?!(Int|Long|Float|Double|Short|Byte|Char|UByte|UInt|ULong|UShort|Boolean))
      - metavariable-regex:
          metavariable: $REQ
          regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute)
      - focus-metavariable: $SOURCE
- label: CONCAT
  patterns:
  - pattern-either:
    - pattern: '"...${...}..."

        '
    - pattern: '"...${...}...".$MD(...)

        '
    - pattern: '"..." + ...

        '
    - pattern: '... + "..."'
    - pattern: '"...${...}..." + ...

        '
    - pattern: '... + "...${...}..."'
    - pattern: String.format(...)
  requires: USER_INPUT
pattern-sinks:
- patterns:
  - focus-metavariable: $QUERY
  - pattern-either:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern-inside: 'import org.springframework.data.mongodb.core.*

              ...

              '
          - pattern-inside: 'import org.springframework.data.mongodb.core.query

              ...

              '
        - pattern: query.BasicQuery($QUERY,...)
      - patterns:
        - pattern-either:
          - pattern-inside: 'import org.springframework.data.mongodb.core.query.*

              ...

              '
          - pattern-inside: 'import org.springframework.data.mongodb.core.query.BasicQuery

              ...

              '
        - pattern: BasicQuery($QUERY,...)
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern-inside: 'import org.springframework.data.mongodb.core.aggregation.*

              ...

              '
          - pattern-inside: 'import org.springframework.data.mongodb.core.aggregation.Aggregation

              ...

              '
        - pattern: Aggregation.stage($QUERY,...)
      - patterns:
        - pattern-either:
          - pattern-inside: 'import org.springframework.data.mongodb.core.aggregation.Aggregation.*

              ...

              '
          - pattern-inside: 'import org.springframework.data.mongodb.core.aggregation.Aggregation.stage

              ...

              '
        - pattern: stage($QUERY,...)
  requires: CONCAT
pattern-sanitizers:
- patterns:
  - pattern: $X.$METHOD(...)
  - metavariable-regex:
      metavariable: $METHOD
      regex: (equals|toInt|toLong|toFloat|toDouble|toShort|toByte|toUByte|toUInt|toULong|toUShort)
- pattern: '($X: boolean)

    '
