id: python.django.security.audit.xss.filter-with-is-safe.filter-with-is-safe
message: Detected Django filters flagged with 'is_safe'. 'is_safe' tells Django not
  to apply escaping on the value returned by this filter (although the input is escaped).
  Used improperly, 'is_safe' could expose your application to cross-site scripting
  (XSS) vulnerabilities. Ensure this filter does not 1) add HTML characters, 2) remove
  characters, or 3) use external data in any way. Consider instead removing 'is_safe'
  and explicitly marking safe content with 'mark_safe()'.
metadata:
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://docs.djangoproject.com/en/3.1/topics/security/#cross-site-scripting-xss-protection
  - https://docs.djangoproject.com/en/3.1/howto/custom-template-tags/#filters-and-auto-escaping
  - https://stackoverflow.com/questions/7665512/why-use-is-safe
  category: security
  technology:
  - django
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/python.django.security.audit.xss.filter-with-is-safe.filter-with-is-safe
  shortlink: https://sg.run/7o12
  semgrep.dev:
    rule:
      r_id: 9482
      rv_id: 110195
      rule_id: JDUyd4
      version_id: A8T956L
      url: https://semgrep.dev/playground/r/A8T956L/python.django.security.audit.xss.filter-with-is-safe.filter-with-is-safe
      origin: community
languages:
- python
severity: WARNING
pattern: "@register.filter(..., is_safe=True, ...)\ndef $FILTER(...):\n  ..."
