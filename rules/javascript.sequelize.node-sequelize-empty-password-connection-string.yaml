id: javascript.sequelize.node-sequelize-empty-password-connection-string.node-sequelize-empty-password-connection-string
message: The application creates a database connection with an empty password. This
  can lead to unauthorized access by either an internal or external malicious actor.
  To prevent this vulnerability, enforce authentication when connecting to a database
  by using environment variables to securely provide credentials or retrieving them
  from a secure vault or HSM (Hardware Security Module).
severity: WARNING
metadata:
  likelihood: LOW
  impact: MEDIUM
  confidence: HIGH
  interfile: true
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-287: Improper Authentication'
  cwe2021-top25: true
  cwe2022-top25: true
  owasp:
  - A07:2021 - Identification and Authentication Failures
  - A02:2017 - Broken Authentication
  references:
  - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
  technology:
  - Sequelize
  - Nodejs
  - Secrets
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Improper Authentication
  source: https://semgrep.dev/r/javascript.sequelize.node-sequelize-empty-password-connection-string.node-sequelize-empty-password-connection-string
  shortlink: https://sg.run/ZwG4
  semgrep.dev:
    rule:
      r_id: 37935
      rv_id: 111697
      rule_id: zdUQ0Y
      version_id: A8T9XD1
      url: https://semgrep.dev/playground/r/A8T9XD1/javascript.sequelize.node-sequelize-empty-password-connection-string.node-sequelize-empty-password-connection-string
      origin: pro_rules
languages:
- js
- ts
mode: taint
pattern-sources:
- patterns:
  - pattern-inside: '"$URL"

      '
  - metavariable-regex:
      metavariable: $URL
      regex: (.*)://(?!<.*>)([A-Za-z])([A-Za-z0-9_-]){1,31}@.*
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern-inside: '$SQL = require(''$IMPORT'')

        ...

        '
    - pattern-inside: 'import $SQL from ''$IMPORT''

        ...

        '
    - pattern-inside: 'import * as $SQL from ''$IMPORT''

        ...

        '
    - pattern-inside: 'import {...,$SQL,...} from ''$IMPORT''

        ...

        '
  - metavariable-regex:
      metavariable: $IMPORT
      regex: ^(sequelize)$
  - patterns:
    - pattern-inside: 'new $SQL($URL)

        '
    - focus-metavariable: $URL
