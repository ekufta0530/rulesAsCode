id: typescript.react.react-create-element-dangerouslysetinnerhtml-url.react-create-element-dangerouslysetinnerhtml-url
message: Untrusted input could be used to tamper with a web page rendering, which
  can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur
  when untrusted input executes malicious JavaScript code, leading to issues such
  as account compromise and sensitive information leakage. Validate the user input,
  perform contextual output encoding, or sanitize the input. If you have to use dangerouslySetInnerHTML,
  consider using a sanitization library such as DOMPurify to sanitize the HTML within.
severity: WARNING
metadata:
  likelihood: HIGH
  impact: MEDIUM
  confidence: HIGH
  interfile: true
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  cwe2021-top25: true
  cwe2022-top25: true
  functional-categories:
  - web::source::url-path-params::react
  - web::sink::html-webpage::react
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://medium.com/dailyjs/exploiting-script-injection-flaws-in-reactjs-883fb1fe36c1
  technology:
  - react
  - browser
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/typescript.react.react-create-element-dangerouslysetinnerhtml-url.react-create-element-dangerouslysetinnerhtml-url
  shortlink: https://sg.run/Y3De
  semgrep.dev:
    rule:
      r_id: 27214
      rv_id: 112053
      rule_id: JDUz54
      version_id: JdTNvWb
      url: https://semgrep.dev/playground/r/JdTNvWb/typescript.react.react-create-element-dangerouslysetinnerhtml-url.react-create-element-dangerouslysetinnerhtml-url
      origin: pro_rules
languages:
- typescript
- javascript
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern: new URLSearchParams(useLocation().search).get('...')
    - pattern: new URL(location.href).searchParams.get('...')
    - pattern: new URL($WINDOW. ... .location.href).searchParams.get('...')
    - pattern: new URLSearchParams(location.search).get("...")
    - pattern: new URLSearchParams($WINDOW. ... .location.search).get("...")
    - pattern: new URLSearchParams($WINDOW. ... .location.hash.substring(1)).get("...")
    - pattern: new URLSearchParams(location.hash.substring(1)).get("...")
    - pattern: new URLSearchParams($WINDOW. ... .location.hash.substring(1)).get("...")
    - pattern: new URLSearchParams(location.hash.substr(1)).get("...")
    - pattern: new URLSearchParams($WINDOW. ... .location.hash.substr(1)).get("...")
    - pattern: new URLSearchParams(location.hash.slice(1)).get("...")
    - pattern: new URLSearchParams($WINDOW. ... .location.hash.slice(1)).get("...")
    - pattern: location.hash.split("...")[1]
    - pattern: $WINDOW. ... .location.hash.split("...")[1]
- patterns:
  - pattern-either:
    - pattern-inside: '$VALUE = new URLSearchParams(useLocation().search)

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams(window.location.search)

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams($WINDOW. ... .location.search)

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams($WINDOW. ... .location.hash.substring(1))

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams(location.hash.substring(1))

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams(location.hash.substr(1))

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams(location.hash.slice(1))

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams($WINDOW. ... .location.hash.substring(1))

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams($WINDOW. ... .location.hash.substr(1))

        ...

        '
    - pattern-inside: '$VALUE = new URLSearchParams($WINDOW. ... .location.hash.slice(1))

        ...

        '
  - pattern: $VALUE.get('...')
- patterns:
  - pattern-either:
    - pattern-inside: '$VALUE = new URL(location.href)

        ...

        '
    - pattern-inside: '$VALUE = new URL($WINDOW. ... .location.href)

        ...

        '
  - pattern: $VALUE.searchParams.get('...')
- patterns:
  - pattern-either:
    - pattern-inside: '[...,$VALUE,...] = useSearchParams()

        ...

        '
  - pattern: $VALUE.get('...')
- patterns:
  - pattern: '[$QUERY,...] = useQueryParams(...)

      '
  - focus-metavariable: $QUERY
- patterns:
  - pattern: '$QUERY = useQueryParams(...)

      '
  - focus-metavariable: $QUERY
  - pattern: $QUERY.get('...')
- patterns:
  - pattern-either:
    - pattern-inside: 'var { ...,$VALUE,... } = useLocation()

        ...

        '
    - pattern-inside: 'const { ...,$VALUE,... } = useLocation()

        ...

        '
    - pattern-inside: 'let { ...,$VALUE,... } = useLocation()

        ...

        '
  - pattern-inside: '$ASSIGN = new URLSearchParams($VALUE)

      ...

      '
  - pattern: $ASSIGN.get('...')
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern-inside: '$REACT.createElement("...", {...,dangerouslySetInnerHTML:{__html:
        $PROPS},...},...);

        '
    - pattern-inside: '$REACT. ... .createElement("...",{...,dangerouslySetInnerHTML:
        {__html: $PROPS},...},...);

        '
  - focus-metavariable: $PROPS
pattern-sanitizers:
- patterns:
  - pattern-either:
    - pattern-inside: 'import $S from "underscore.string"

        ...

        '
    - pattern-inside: 'import * as $S from "underscore.string"

        ...

        '
    - pattern-inside: 'import $S from "underscore.string"

        ...

        '
    - pattern-inside: '$S = require("underscore.string")

        ...

        '
  - pattern-either:
    - pattern: $S.escapeHTML(...)
- patterns:
  - pattern-either:
    - pattern-inside: 'import $S from "dompurify"

        ...

        '
    - pattern-inside: 'import { ..., $S,... } from "dompurify"

        ...

        '
    - pattern-inside: 'import * as $S from "dompurify"

        ...

        '
    - pattern-inside: '$S = require("dompurify")

        ...

        '
    - pattern-inside: 'import $S from "isomorphic-dompurify"

        ...

        '
    - pattern-inside: 'import * as $S from "isomorphic-dompurify"

        ...

        '
    - pattern-inside: '$S = require("isomorphic-dompurify")

        ...

        '
  - pattern-either:
    - patterns:
      - pattern-inside: '$VALUE = $S(...)

          ...

          '
      - pattern: $VALUE.sanitize(...)
    - patterns:
      - pattern-inside: '$VALUE = $S.sanitize

          ...

          '
      - pattern: $S(...)
    - pattern: $S.sanitize(...)
    - pattern: $S(...)
- patterns:
  - pattern-either:
    - pattern-inside: 'import $S from ''xss'';

        ...

        '
    - pattern-inside: 'import * as $S from ''xss'';

        ...

        '
    - pattern-inside: '$S = require("xss")

        ...

        '
  - pattern: $S(...)
- patterns:
  - pattern-either:
    - pattern-inside: 'import $S from ''sanitize-html'';

        ...

        '
    - pattern-inside: 'import * as $S from "sanitize-html";

        ...

        '
    - pattern-inside: '$S = require("sanitize-html")

        ...

        '
  - pattern: $S(...)
- patterns:
  - pattern-either:
    - pattern-inside: '$S = new Remarkable()

        ...

        '
  - pattern: $S.render(...)
