id: python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2
message: Detected direct use of jinja2. If not done properly, this may bypass HTML
  escaping which opens up the application to cross-site scripting (XSS) vulnerabilities.
  Prefer using the Flask method 'render_template()' and templates with a '.html' extension
  in order to prevent XSS.
metadata:
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://jinja.palletsprojects.com/en/2.11.x/api/#basics
  category: security
  technology:
  - flask
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2
  shortlink: https://sg.run/RoKe
  semgrep.dev:
    rule:
      r_id: 9549
      rv_id: 110280
      rule_id: qNUjN2
      version_id: 5PTdA57
      url: https://semgrep.dev/playground/r/5PTdA57/python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2
      origin: community
languages:
- python
severity: WARNING
pattern-either:
- pattern: jinja2.Environment(...)
- pattern: jinja2.Template.render(...)
- patterns:
  - pattern-inside: '$TEMPLATE = $ENV.get_template(...)

      ...

      '
  - pattern: $TEMPLATE.render(...)
- patterns:
  - pattern-inside: '$TEMPLATE = jinja2.Template(...)

      ...

      '
  - pattern: $TEMPLATE.render(...)
