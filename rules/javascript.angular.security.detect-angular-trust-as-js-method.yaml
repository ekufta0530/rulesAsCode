id: javascript.angular.security.detect-angular-trust-as-js-method.detect-angular-trust-as-js-method
message: The use of $sce.trustAsJs can be dangerous if unsanitized user input flows
  through this API.
metadata:
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://docs.angularjs.org/api/ng/service/$sce#trustAsJs
  - https://owasp.org/www-chapter-london/assets/slides/OWASPLondon20170727_AngularJS.pdf
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  category: security
  technology:
  - angular
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/javascript.angular.security.detect-angular-trust-as-js-method.detect-angular-trust-as-js-method
  shortlink: https://sg.run/x1nA
  semgrep.dev:
    rule:
      r_id: 9230
      rv_id: 109794
      rule_id: 8GUj8k
      version_id: WrTWQLq
      url: https://semgrep.dev/playground/r/WrTWQLq/javascript.angular.security.detect-angular-trust-as-js-method.detect-angular-trust-as-js-method
      origin: community
languages:
- javascript
- typescript
severity: WARNING
patterns:
- pattern-either:
  - pattern: '$SOURCE = $scope.$INPUT;

      $sce.trustAsJs($SOURCE);

      '
  - pattern: '$sce.trustAsJs($scope.$INPUT);

      '
- pattern-inside: 'app.controller(..., function($scope,$sce){

    ...

    });

    '
