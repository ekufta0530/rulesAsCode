id: javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection
message: Make sure that unverified user data can not reach `sandbox`.
metadata:
  owasp:
  - A03:2021 - Injection
  cwe:
  - 'CWE-94: Improper Control of Generation of Code (''Code Injection'')'
  category: security
  technology:
  - sandbox
  cwe2022-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: LOW
  confidence: LOW
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection
  shortlink: https://sg.run/J9BP
  semgrep.dev:
    rule:
      r_id: 9346
      rv_id: 109970
      rule_id: KxUbk3
      version_id: 8KTQ9l5
      url: https://semgrep.dev/playground/r/8KTQ9l5/javascript.sandbox.security.audit.sandbox-code-injection.sandbox-code-injection
      origin: community
languages:
- javascript
- typescript
severity: WARNING
patterns:
- pattern-inside: '$SANDBOX = require(''sandbox'');

    ...

    '
- pattern-not-inside: '$CODE = "...";

    ...

    '
- pattern-either:
  - patterns:
    - pattern-inside: '$S = new $SANDBOX(...);

        ...

        '
    - pattern: $S.run($CODE,...);
  - pattern: 'new $SANDBOX(...).run($CODE,...);

      '
- pattern-not-inside: '$S = new $SANDBOX(...);

    ...

    $S.run("...",...);

    '
- pattern-not-inside: new $SANDBOX(...).run("...",...);
