id: javascript.apollo.security.apollo-axios-ssrf.apollo-axios-ssrf
message: User-controllable argument $DATAVAL to $METHOD passed to Axios via internal
  handler $INNERFUNC. This could be a server-side request forgery. A user could call
  a restricted API or leak internal headers to an unauthorized party. Validate your
  user arguments against an allowlist of known URLs, or consider refactoring so that
  user-controlled data is not necessary.
metadata:
  owasp:
  - A10:2021 - Server-Side Request Forgery (SSRF)
  cwe:
  - 'CWE-918: Server-Side Request Forgery (SSRF)'
  category: security
  technology:
  - apollo
  - axios
  references:
  - https://www.cvedetails.com/cve/CVE-2020-28168/
  - https://owasp.org/www-community/attacks/Server_Side_Request_Forgery
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Server-Side Request Forgery (SSRF)
  source: https://semgrep.dev/r/javascript.apollo.security.apollo-axios-ssrf.apollo-axios-ssrf
  shortlink: https://sg.run/jkEZ
  semgrep.dev:
    rule:
      r_id: 13021
      rv_id: 109799
      rule_id: AbUGBR
      version_id: YDTp2LO
      url: https://semgrep.dev/playground/r/YDTp2LO/javascript.apollo.security.apollo-axios-ssrf.apollo-axios-ssrf
      origin: community
languages:
- javascript
severity: WARNING
patterns:
- pattern: const $RESPONSE = await axios.request($INNERARG,...)
- pattern-inside: "Query: {\n  $METHOD(parent, args, context, info) {\n    ...\n \
    \   $DATA = args.$DATAVAL\n    ...\n    async function $INNERFUNC(...,$INNERARG,...){\n\
    \      ...\n    }\n    ...\n    return $INNERFUNC(...,$DATA,...)\n    }\n  }\n"
