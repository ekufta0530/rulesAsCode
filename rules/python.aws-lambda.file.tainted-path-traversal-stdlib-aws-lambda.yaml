id: python.aws-lambda.file.tainted-path-traversal-stdlib-aws-lambda.tainted-path-traversal-stdlib-aws-lambda
message: The application builds a file path from potentially untrusted data, which
  can lead to a path traversal vulnerability. An attacker can manipulate the path
  which the application uses to access files. If the application does not validate
  user input and sanitize file paths, sensitive files such as configuration or user
  data can be accessed, potentially creating or overwriting files. To prevent this
  vulnerability, validate and sanitize any input that is used to create references
  to file paths. Also, enforce strict file access controls. For example, choose privileges
  allowing public-facing applications to access only the required files.
severity: ERROR
metadata:
  likelihood: MEDIUM
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')'
  cwe2020-top25: true
  cwe2021-top25: true
  cwe2022-top25: true
  functional-categories:
  - file::sink::file-access::fileinput
  - file::sink::file-access::io
  - file::sink::file-access::linecache
  - file::sink::file-access::os
  - file::sink::file-access::pathlib
  - file::sink::file-access::shutil
  - file::sink::file-access::stdlib
  - file::sink::file-access::stdlib2
  - file::sink::file-access::stdlib3
  - file::sink::file-access::tempfile
  - serverless::source::function-params::aws-lambda
  owasp:
  - A01:2021 - Broken Access Control
  - A05:2017 - Broken Access Control
  references:
  - https://owasp.org/Top10/A01_2021-Broken_Access_Control
  - https://owasp.org/www-community/attacks/Path_Traversal
  - https://portswigger.net/web-security/file-path-traversal
  technology:
  - aws
  - aws-lambda
  - cloud
  - codecs
  - fileaccess
  - fileinput
  - io
  - linecache
  - os
  - pathlib
  - serverless
  - shutil
  - stdlib
  - stdlib2
  - stdlib3
  - tempfile
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Path Traversal
  source: https://semgrep.dev/r/python.aws-lambda.file.tainted-path-traversal-stdlib-aws-lambda.tainted-path-traversal-stdlib-aws-lambda
  shortlink: https://sg.run/AbKXg
  semgrep.dev:
    rule:
      r_id: 116494
      rv_id: 731961
      rule_id: QrUWEdj
      version_id: o5T2pyW
      url: https://semgrep.dev/playground/r/o5T2pyW/python.aws-lambda.file.tainted-path-traversal-stdlib-aws-lambda.tainted-path-traversal-stdlib-aws-lambda
      origin: pro_rules
languages:
- python
mode: taint
options:
  interfile: true
pattern-sources:
- label: USER_INPUT
  patterns:
  - pattern-either:
    - patterns:
      - pattern: "def $HANDLER($EVENT, context):\n    ...\n"
      - metavariable-regex:
          metavariable: $EVENT
          regex: ^(event)$
    - patterns:
      - pattern: "def $HANDLER($EVENT, $CONTEXT):\n    ...\n"
      - metavariable-regex:
          metavariable: $HANDLER
          regex: .*(aws_lambda|lambda_handler).*
  - focus-metavariable: $EVENT
- label: PATH
  patterns:
  - pattern-either:
    - pattern: pathlib.Path(...)
    - pattern: pathlib.PosixPath(...)
    - pattern: pathlib.WindowsPath(...)
    - pattern: pathlib.PurePosixPath(...)
    - pattern: pathlib.PureWindowsPath(...)
    - pattern: pathlib.PurePath(...)
    - pattern: pathlib2.Path(...)
    - pattern: pathlib2.PosixPath(...)
    - pattern: pathlib2.WindowsPath(...)
    - pattern: pathlib2.PurePosixPath(...)
    - pattern: pathlib2.PureWindowsPath(...)
    - pattern: pathlib2.PurePath(...)
pattern-propagators:
- from: $DEFAULT
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$DICT[$KEY]

          ...

          '
      - pattern-inside: '$DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$DICT = { ... }

          ...

          '
      - pattern-inside: '$DICT = dict(...)

          ...

          '
    - pattern-either:
      - pattern: $DICT.get($FIELD, $DEFAULT)
      - pattern: $DICT.setdefault($KEY, $DEFAULT)
  to: $DICT
- from: $FROM_DICT
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$TO_DICT[$KEY]

          ...

          '
      - pattern-inside: '$TO_DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$TO_DICT = { ... }

          ...

          '
      - pattern-inside: '$TO_DICT = dict(...)

          ...

          '
      - pattern-inside: '$FROM_DICT[$KEY]

          ...

          '
      - pattern-inside: '$FROM_DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$FROM_DICT = { ... }

          ...

          '
      - pattern-inside: '$FROM_DICT = dict(...)

          ...

          '
    - pattern-either:
      - pattern: $TO_DICT.update($FROM_DICT)
      - pattern: $TO_DICT | $FROM_DICT
      - pattern: $TO_DICT |= $FROM_DICT
  to: $TO_DICT
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$LIST = [ ... ]

          ...

          '
      - pattern-inside: '$LIST = list(...)

          ...

          '
    - pattern-either:
      - pattern: $LIST.append($FROM)
      - pattern: $LIST.extend($FROM)
      - pattern: $LIST.insert($INDEX, $FROM)
  to: $LIST
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
      - pattern-inside: '$OTHERSET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$OTHERSET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.update(..., $FROM, ...)
      - pattern: $SET.intersection_update(..., $FROM, ...)
      - pattern: $SET.difference_update(..., $FROM, ...)
      - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
      - pattern: $SET.add($FROM)
      - pattern: $SET |= $FROM
      - pattern: $SET &= $FROM
      - pattern: $SET -= $FROM
      - pattern: $SET ^= $FROM
  to: $SET
- from: $FORM
  patterns:
  - pattern: $FORM.populate_obj($OBJ)
  to: $OBJ
pattern-sinks:
- pattern-either:
  - patterns:
    - pattern-either:
      - pattern: open($SINK, ...)
      - pattern: open(..., file=$SINK, ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern: os.$FUNC($SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(rename|replace|link|symlink|dup|dup2|sendfile|splice|renames)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: os.$FUNC($FIRST, $SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(rename|replace|link|symlink|dup|dup2|sendfile|splice|renames)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: os.$FUNC(... , $ARG=$SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(rename|replace|link|symlink|dup|dup2|sendfile|splice|renames)$
    - metavariable-regex:
        metavariable: $ARG
        regex: ^(src|dst|fd|fd2|out_fd|in_fd|old|new)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: os.$FUNC($SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(open|chmod|fsencode|fsdecode|fdopen|ftruncate|pread|preadv|pwrite|pwritev|read|readv|write|writev|mkfifo|readlink|remove|truncate|memfd_create)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: os.$FUNC(..., $ARG=$SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(open|chmod|fsencode|fsdecode|fdopen|ftruncate|pread|preadv|pwrite|pwritev|read|readv|write|writev|mkfifo|readlink|remove|truncate|memfd_create)$
    - metavariable-regex:
        metavariable: $ARG
        regex: ^(path|filename|fd|)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: io.$FUNC($SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(open|open_code)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern-either:
      - pattern: io.open(..., file=$SINK, ...)
      - pattern: io.open_code(..., path=$SINK, ...)
    - focus-metavariable: $SINK
  requires: USER_INPUT
- pattern-either:
  - patterns:
    - pattern: codecs.$FUNC($SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(open|EncodedFile|iterencode|iterdecode|StreamReader|StreamRecorder)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: codecs.$FUNC(..., $ARG=$SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(open|EncodedFile|iterencode|iterdecode|StreamReader|StreamRecorder)$
    - metavariable-regex:
        metavariable: $ARG
        regex: ^(filename|file|iterator|stream)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern-either:
      - pattern: linecache.getline($SINK, ...)
      - pattern: linecache.getline(..., filename=$SINK, ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern: fileinput.input((..., $SINK, ...), ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern: fileinput.input(..., files=(..., $SINK, ...), ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern: fileinput.FileInput((..., $SINK, ...), ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern: fileinput.FileInput(..., files=(..., $SINK, ...), ...)
    - focus-metavariable: $SINK
  requires: USER_INPUT
- pattern-either:
  - patterns:
    - pattern: tempfile.$TEMPFILE(..., dir=$SINK, ...)
    - metavariable-regex:
        metavariable: $TEMPFILE
        regex: ^(TemporaryFile|NamedTemporaryFile|SpooledTemporaryFile)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern-either:
      - pattern: tempfile.TemporaryFile($MODE, $BUFFERING, $ENCODING, $NEWLINE, $SUFFIX,
          $PREFIX, $DIR, ...)
      - pattern: tempfile.NamedTemporaryFile($MODE, $BUFFERING, $ENCODING, $NEWLINE,
          $SUFFIX, $PREFIX, $DIR, ...)
      - pattern: tempfile.SpooledTemporaryFile($MAX_SIZE, $MODE, $BUFF, $ENC, $NEWLINE,
          $SUFFIX, $PREFIX, $DIR, ...)
    - focus-metavariable: $DIR
  - patterns:
    - pattern: shutil.$FUNC($SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(copyfileobj|copyfile|copymode|copystat|copy|copy2|copytree|rmtree|move|chown|unpack_archive)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: shutil.unpack_archive($FIRST, $SINK)
    - focus-metavariable: $SINK
  - patterns:
    - pattern: shutil.$FUNC($FIRST, $SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(copyfileobj|copyfile|copymode|copystat|copy|copy2|copytree|move)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: shutil.$FUNC(..., $ARG=$SINK, ...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(copyfileobj|copyfile|copymode|copystat|copy|copy2|copytree|rmtree|move|chown|unpack_archive)$
    - metavariable-regex:
        metavariable: $ARG
        regex: ^(fsrc|fdst|src|dst|path|filename|extract_dir)$
    - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: _locale.bindtextdomain($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: _locale.bindtextdomain(..., __dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.base_tasks._task_print_stack($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.base_tasks._task_print_stack(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.open_unix_connection($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.open_unix_connection(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.start_unix_server($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.start_unix_server(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.open_unix_connection($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.open_unix_connection(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.start_unix_server($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: asyncio.streams.start_unix_server(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: bz2.open($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: bz2.open(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: cgitb.enable($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: cgitb.enable(..., logdir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., ddir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., stripdir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., prependdir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., limit_sl_dest=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., fullname=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., ddir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., stripdir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., prependdir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., limit_sl_dest=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., ddir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., prependdir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., limit_sl_dest=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., fullname=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., ddir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., prependdir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., limit_sl_dest=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_dir(..., ddir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., fullname=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: compileall.compile_file(..., ddir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: distutils.core.gen_usage($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: distutils.core.gen_usage(..., script_name=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: distutils.util.copydir_run_2to3($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: distutils.util.copydir_run_2to3(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: distutils.util.copydir_run_2to3(..., dest=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: filecmp.cmp($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: filecmp.cmp(..., f1=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: filecmp.cmp(..., f2=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., files=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., openhook=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., files=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., openhook=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., files=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., openhook=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., files=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., openhook=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., files=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., openhook=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., files=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.input(..., openhook=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.hook_compressed($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.hook_compressed(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.hook_compressed($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: fileinput.hook_compressed(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: gzip.open($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: gzip.open(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: http.server.executable($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: http.server.executable(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: imp.load_package($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: imp.load_package(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: logging.basicConfig(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: logging.basicConfig(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: logging.config.fileConfig($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: logging.config.fileConfig(..., fname=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: logging.config.fileConfig($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: logging.config.fileConfig(..., fname=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: lzma.open($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: lzma.open(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ntpath.join($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ntpath.join(..., __path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.open($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.open(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.link($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.link(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.link(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.mkdir($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.mkdir(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.mkfifo($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.mkfifo(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.makedirs($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.makedirs(..., name=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.mknod($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.mknod(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.remove($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.remove(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.removedirs($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.removedirs(..., name=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.rename($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.rename(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.rename(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.renames($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.renames(..., old=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.renames(..., new=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.replace($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.replace(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.replace(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.rmdir($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.rmdir(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.symlink($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.symlink(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.symlink(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.unlink($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.unlink(..., path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execl($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execl(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execl(..., __arg0=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execlp($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execlp(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execlp(..., __arg0=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execle($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execle(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execlpe($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execlpe(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execv($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execv(..., __path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execvp($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execvp(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execvpe($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.execvpe(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnl($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnl(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnl($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnl(..., arg0=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnle($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnle(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnle($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnle(..., arg0=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnv($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnv(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnve($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnve(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnv($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnv(..., __path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnve($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnve(..., __path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.system($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.system(..., command=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.startfile($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.startfile(..., filepath=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.startfile($PY_POSARG_0, $PY_POSARG_1, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.startfile(..., cwd=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.startfile($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.startfile(..., filepath=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlp($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlp(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlp($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlp(..., arg0=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlpe($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlpe(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlpe($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnlpe(..., arg0=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnvp($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnvp(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnvpe($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.spawnvpe(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.posix_spawn($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.posix_spawn(..., __path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.posix_spawnp($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: os.posix_spawnp(..., __path=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.read_init_file($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.read_init_file(..., __filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.read_history_file($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.read_history_file(..., __filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.write_history_file($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.write_history_file(..., __filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.append_history_file($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: readline.append_history_file(..., __filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copyfile($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copyfile(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copymode($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copymode(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copymode(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copystat($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copystat(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copystat(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy2($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy2(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy2(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy2($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy2(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copy2(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copytree($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copytree(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copytree(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copytree($PY_POSARG_0, $PY_POSARG_1, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.copytree(..., ignore=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.move($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.move(..., src=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.move(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.move($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.move(..., dst=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.make_archive($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.make_archive(..., root_dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.make_archive($PY_POSARG_0, $PY_POSARG_1, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.make_archive(..., base_dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.unpack_archive($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.unpack_archive(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: shutil.unpack_archive(..., extract_dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: site.addpackage($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: site.addpackage(..., sitedir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: site.addpackage(..., name=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl.wrap_socket($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl.wrap_socket(..., keyfile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl.wrap_socket($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl.wrap_socket(..., certfile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl.create_default_context(..., cafile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl.create_default_context(..., capath=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., certfile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., keyfile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., cafile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., capath=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., certfile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., keyfile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., cafile=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: ssl._create_unverified_context(..., capath=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tabnanny.check($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tabnanny.check(..., file=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tarfile.open($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tarfile.open(..., name=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkstemp($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkstemp(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkstemp($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkstemp(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkdtemp($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkdtemp(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkdtemp($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mkdtemp(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mktemp($PY_POSARG_0, $SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: tempfile.mktemp(..., dir=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: urllib.request.urlretrieve($SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- patterns:
  - pattern: urllib.request.urlretrieve(..., filename=$SINK, ...)
  - focus-metavariable: $SINK
  requires: USER_INPUT
- pattern-either:
  - patterns:
    - pattern: $PATH.$FUNC($SINK)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(rename|replace|symlink_to|hardlink_to)$
    - focus-metavariable: $SINK
  - patterns:
    - pattern: $PATH.$FUNC(...)
    - metavariable-regex:
        metavariable: $FUNC
        regex: ^(open|read_bytes|read_text|readlink|rmdir|touch|rename|replace|symlink_to|hardlink_to|write_bytes|write_text|chmod)$
  requires: USER_INPUT and PATH
pattern-sanitizers:
- patterns:
  - pattern-either:
    - pattern: int(...)
    - pattern: bool(...)
    - pattern: float(...)
    - pattern: complex(...)
    - pattern: oct(...)
    - pattern: hex(...)
    - pattern: bin(...)
    - pattern: round(...)
    - pattern: id(...)
    - pattern: hash(...)
    - pattern: len(...)
    - pattern: type(...)
- patterns:
  - pattern-either:
    - pattern-inside: '$DICT[$KEY]

        ...

        '
    - pattern-inside: '$DICT = { $KEY: $VALUE for ... in ...}

        ...

        '
    - pattern-inside: '$DICT.get($KEY, $DEFAULT)

        ...

        '
    - pattern-inside: '$DICT = { }

        ...

        '
    - pattern-inside: '$DICT = { $KEY: $VALUE, ... }

        ...

        '
    - pattern-inside: '$DICT = dict(...)

        ...

        '
  - pattern-either:
    - pattern: $DICT.clear()
    - pattern: $DICT.len()
- patterns:
  - pattern-either:
    - pattern-inside: '$LIST = [ ... ]

        ...

        '
    - pattern-inside: '$LIST = list(...)

        ...

        '
  - pattern-either:
    - pattern: $LIST.clear()
    - pattern: $LIST.count(...)
    - pattern: $LIST.index(...)
- patterns:
  - pattern-either:
    - pattern-inside: '$SET = { $ITEM, ... }

        ...

        '
    - pattern-inside: '$SET = set(...)

        ...

        '
  - pattern-either:
    - pattern: $SET.len()
    - pattern: $SET.clear()
- patterns:
  - pattern-either:
    - pattern-inside: '$SET = { $ITEM, ... }

        ...

        '
    - pattern-inside: '$SET = { $ITEM for ... in ...}

        ...

        '
    - pattern-inside: '$SET = set(...)

        ...

        '
    - pattern-inside: '$SET = frozenset(...)

        ...

        '
    - pattern-inside: '$OTHERSET = { $ITEM, ... }

        ...

        '
    - pattern-inside: '$OTHERSET = set(...)

        ...

        '
  - pattern-either:
    - pattern: $SET.isdisjoint($OTHERSET)
    - pattern: $SET.issubset($OTHERSET)
    - pattern: $SET < $OTHERSET
    - pattern: $SET <= $OTHERSET
    - pattern: $SET.issuperset($OTHERSET)
    - pattern: $SET > $OTHERSET
    - pattern: $SET >= $OTHERSET
- patterns:
  - pattern-either:
    - pattern-inside: '$TUPLE = ( $ITEM, ... )

        ...

        '
    - pattern-inside: '$TUPLE = $ITEM, ...

        ...

        '
    - pattern-inside: '$TUPLE = tuple(...)

        ...

        '
  - pattern-either:
    - pattern: $TUPLE.len()
- patterns:
  - pattern: werkzeug.utils.secure_filename(...)
