id: python.lang.code.tainted-code-stdlib.tainted-code-stdlib
message: The application might dynamically evaluate untrusted input, which can lead
  to a code injection vulnerability. An attacker can execute arbitrary code, potentially
  gaining complete control of the system. To prevent this vulnerability, avoid executing
  code containing user input. If this is unavoidable, validate and sanitize the input,
  and use safe alternatives for evaluating user input.
severity: ERROR
metadata:
  likelihood: HIGH
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-94: Improper Control of Generation of Code (''Code Injection'')'
  cwe2020-top25: true
  cwe2022-top25: true
  functional-categories:
  - code::sink::eval::stdlib
  - code::sink::eval::stdlib2
  - code::sink::eval::stdlib3
  - expression-lang::sink::expression::stdlib
  - expression-lang::sink::expression::stdlib2
  - expression-lang::sink::expression::stdlib3
  - web::source::cookie::lang
  - web::source::form-data::lang
  - web::source::header::lang
  - web::source::http-body::lang
  - web::source::http-params::lang
  - web::source::url-path-params::lang
  owasp:
  - A03:2021 - Injection
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  - https://www.stackhawk.com/blog/command-injection-python/
  technology:
  - http
  - http.server
  - stdlib
  - stdlib2
  - stdlib3
  - web
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/python.lang.code.tainted-code-stdlib.tainted-code-stdlib
  shortlink: https://sg.run/Qry6d
  semgrep.dev:
    rule:
      r_id: 116542
      rv_id: 524369
      rule_id: JDUNn60
      version_id: nWTrrRd
      url: https://semgrep.dev/playground/r/nWTrrRd/python.lang.code.tainted-code-stdlib.tainted-code-stdlib
      origin: pro_rules
languages:
- python
mode: taint
options:
  interfile: true
  symbolic_propagation: true
pattern-sources:
- patterns:
  - pattern-either:
    - pattern-inside: "class $SERVER(..., http.server.BaseHTTPRequestHandler, ...):\n\
        \    ...\n"
    - pattern-inside: "class $SERVER(..., http.server.StreamRequestHandler, ...):\n\
        \    ...\n"
    - pattern-inside: "class $SERVER(..., http.server.DatagramRequestHandler, ...):\n\
        \    ...\n"
  - pattern-either:
    - pattern: self.$PROPERTY
    - pattern: self.$PROPERTY.get(...)
    - pattern: self.$PROPERTY[...]
  - metavariable-regex:
      metavariable: $PROPERTY
      regex: ^(command|headers|rfile|wfile|responses|requestline|path)$
pattern-propagators:
- from: $DEFAULT
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$DICT[$KEY]

          ...

          '
      - pattern-inside: '$DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$DICT = { ... }

          ...

          '
      - pattern-inside: '$DICT = dict(...)

          ...

          '
    - pattern-either:
      - pattern: $DICT.get($FIELD, $DEFAULT)
      - pattern: $DICT.setdefault($KEY, $DEFAULT)
  to: $DICT
- from: $FROM_DICT
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$TO_DICT[$KEY]

          ...

          '
      - pattern-inside: '$TO_DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$TO_DICT = { ... }

          ...

          '
      - pattern-inside: '$TO_DICT = dict(...)

          ...

          '
      - pattern-inside: '$FROM_DICT[$KEY]

          ...

          '
      - pattern-inside: '$FROM_DICT.get($KEY, $DEFAULT)

          ...

          '
      - pattern-inside: '$FROM_DICT = { ... }

          ...

          '
      - pattern-inside: '$FROM_DICT = dict(...)

          ...

          '
    - pattern-either:
      - pattern: $TO_DICT.update($FROM_DICT)
      - pattern: $TO_DICT | $FROM_DICT
      - pattern: $TO_DICT |= $FROM_DICT
  to: $TO_DICT
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$LIST = [ ... ]

          ...

          '
      - pattern-inside: '$LIST = list(...)

          ...

          '
    - pattern-either:
      - pattern: $LIST.append($FROM)
      - pattern: $LIST.extend($FROM)
      - pattern: $LIST.insert($INDEX, $FROM)
  to: $LIST
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern-inside: '$SET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$SET = set(...)

          ...

          '
      - pattern-inside: '$OTHERSET = { $ITEM, ... }

          ...

          '
      - pattern-inside: '$OTHERSET = set(...)

          ...

          '
    - pattern-either:
      - pattern: $SET.update(..., $FROM, ...)
      - pattern: $SET.intersection_update(..., $FROM, ...)
      - pattern: $SET.difference_update(..., $FROM, ...)
      - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
      - pattern: $SET.add($FROM)
      - pattern: $SET |= $FROM
      - pattern: $SET &= $FROM
      - pattern: $SET -= $FROM
      - pattern: $SET ^= $FROM
  to: $SET
- from: $FORM
  patterns:
  - pattern: $FORM.populate_obj($OBJ)
  to: $OBJ
pattern-sinks:
- pattern-either:
  - pattern: exec(...)
  - pattern: eval(...)
pattern-sanitizers:
- patterns:
  - pattern-either:
    - pattern: int(...)
    - pattern: bool(...)
    - pattern: float(...)
    - pattern: complex(...)
    - pattern: oct(...)
    - pattern: hex(...)
    - pattern: bin(...)
    - pattern: round(...)
    - pattern: id(...)
    - pattern: hash(...)
    - pattern: len(...)
    - pattern: type(...)
- patterns:
  - pattern-either:
    - pattern-inside: '$DICT[$KEY]

        ...

        '
    - pattern-inside: '$DICT = { $KEY: $VALUE for ... in ...}

        ...

        '
    - pattern-inside: '$DICT.get($KEY, $DEFAULT)

        ...

        '
    - pattern-inside: '$DICT = { }

        ...

        '
    - pattern-inside: '$DICT = { $KEY: $VALUE, ... }

        ...

        '
    - pattern-inside: '$DICT = dict(...)

        ...

        '
  - pattern-either:
    - pattern: $DICT.clear()
    - pattern: $DICT.len()
- patterns:
  - pattern-either:
    - pattern-inside: '$LIST = [ ... ]

        ...

        '
    - pattern-inside: '$LIST = list(...)

        ...

        '
  - pattern-either:
    - pattern: $LIST.clear()
    - pattern: $LIST.count(...)
    - pattern: $LIST.index(...)
- patterns:
  - pattern-either:
    - pattern-inside: '$SET = { $ITEM, ... }

        ...

        '
    - pattern-inside: '$SET = set(...)

        ...

        '
  - pattern-either:
    - pattern: $SET.len()
    - pattern: $SET.clear()
- patterns:
  - pattern-either:
    - pattern-inside: '$SET = { $ITEM, ... }

        ...

        '
    - pattern-inside: '$SET = { $ITEM for ... in ...}

        ...

        '
    - pattern-inside: '$SET = set(...)

        ...

        '
    - pattern-inside: '$SET = frozenset(...)

        ...

        '
    - pattern-inside: '$OTHERSET = { $ITEM, ... }

        ...

        '
    - pattern-inside: '$OTHERSET = set(...)

        ...

        '
  - pattern-either:
    - pattern: $SET.isdisjoint($OTHERSET)
    - pattern: $SET.issubset($OTHERSET)
    - pattern: $SET < $OTHERSET
    - pattern: $SET <= $OTHERSET
    - pattern: $SET.issuperset($OTHERSET)
    - pattern: $SET > $OTHERSET
    - pattern: $SET >= $OTHERSET
- patterns:
  - pattern-either:
    - pattern-inside: '$TUPLE = ( $ITEM, ... )

        ...

        '
    - pattern-inside: '$TUPLE = $ITEM, ...

        ...

        '
    - pattern-inside: '$TUPLE = tuple(...)

        ...

        '
  - pattern-either:
    - pattern: $TUPLE.len()
