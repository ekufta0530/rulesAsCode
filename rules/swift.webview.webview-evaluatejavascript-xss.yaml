id: swift.webview.webview-evaluatejavascript-xss.swift-evaluate-js
message: Potential cross site scripting (XSS) occurs due to untrusted input being
  loaded into a WebView. The impact of such issues can vary depending on the features,
  permissions and exposure of data & functionality that the WebView contains. For
  example, in some applications the presence of JavaScript bridges may allow for the
  instrumentation of application code, and potentially arbitrary code execution in
  the context of the app. In other instances, it may be possible to manipulate the
  DOM to redraw the UI and phish users, or execute other typical XSS attacks.
severity: WARNING
metadata:
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  functional-categories:
  - mobile::sink::html-webpage::lang
  - mobile::source::user-input-fields::lang
  masvs:
  - 'MASVS-CODE-4: The app validates and sanitizes all untrusted inputs.'
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://developer.apple.com/library/archive/documentation/Security/Conceptual/SecureCodingGuide/Articles/ValidatingInput.html
  technology:
  - ios
  - macos
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/swift.webview.webview-evaluatejavascript-xss.swift-evaluate-js
  shortlink: https://sg.run/RJLN
  semgrep.dev:
    rule:
      r_id: 66505
      rv_id: 112038
      rule_id: GdUEq4
      version_id: O9TNdYp
      url: https://semgrep.dev/playground/r/O9TNdYp/swift.webview.webview-evaluatejavascript-xss.swift-evaluate-js
      origin: pro_rules
languages:
- swift
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern: 'String(contentsOf: (URL: $U), ...)

        '
    - pattern: '$X = $OBJ.text()

        '
    - pattern: '(UITextField: $X).text

        '
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern: '(WKWebView: $W).$FUNC($X, ...)

        '
    - pattern: '(UIWebView: $W).$FUNC($X, ...)

        '
  - metavariable-regex:
      metavariable: $FUNC
      regex: ^(evaluateJavaScript|stringByEvaluatingJavaScript|callAsyncJavaScript)$
  - focus-metavariable: $X
