id: elixir.lang.correctness.or-truthiness.or-truthiness
message: 'Elixir provides the concept of truthiness: nil and false are considered
  "falsy" and all other values are "truthy". Many constructs in the language, such
  as `&&/2`, `||/2`, and `!/1` handle truthy and falsy values. Using those operators
  is not an anti-pattern. However, using those operators when all operands are expected
  to be booleans, may be an anti-pattern and could lead to undefined behavior.'
severity: INFO
metadata:
  category: correctness
  references:
  - https://hexdocs.pm/elixir/main/code-anti-patterns.html#non-assertive-truthiness
  technology:
  - elixir
  license: Copyright 2023 Semgrep, Inc.
  source: https://semgrep.dev/r/elixir.lang.correctness.or-truthiness.or-truthiness
  shortlink: https://sg.run/AbDy6
  semgrep.dev:
    rule:
      r_id: 114606
      rv_id: 256996
      rule_id: wdU9plX
      version_id: 0bT7xjz
      url: https://semgrep.dev/playground/r/0bT7xjz/elixir.lang.correctness.or-truthiness.or-truthiness
      origin: pro_rules
languages:
- elixir
fix: $X or $Y
min-version: 1.55.2
patterns:
- pattern: $X || $Y
