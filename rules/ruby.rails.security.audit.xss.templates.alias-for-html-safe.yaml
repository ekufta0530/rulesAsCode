id: ruby.rails.security.audit.xss.templates.alias-for-html-safe.alias-for-html-safe
message: The syntax `<%== ... %>` is an alias for `html_safe`. This means the content
  inside these tags will be rendered as raw HTML. This may expose your application
  to cross-site scripting. If you need raw HTML, prefer using the more explicit `html_safe`
  and be sure to correctly sanitize variables using a library such as DOMPurify.
metadata:
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  references:
  - https://medium.com/sumone-technical-blog/a-pretty-way-to-unescape-html-in-a-ruby-on-rails-application-efc22b850027
  - https://stackoverflow.com/questions/4251284/raw-vs-html-safe-vs-h-to-unescape-html#:~:text===
  category: security
  technology:
  - rails
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/ruby.rails.security.audit.xss.templates.alias-for-html-safe.alias-for-html-safe
  shortlink: https://sg.run/8nGJ
  semgrep.dev:
    rule:
      r_id: 9740
      rv_id: 110580
      rule_id: PeUkJe
      version_id: 44TR6zg
      url: https://semgrep.dev/playground/r/44TR6zg/ruby.rails.security.audit.xss.templates.alias-for-html-safe.alias-for-html-safe
      origin: community
languages:
- generic
paths:
  include:
  - '*.erb'
severity: WARNING
patterns:
- pattern: <%== ... %>
- pattern-not: <%== $...A.to_json %>
