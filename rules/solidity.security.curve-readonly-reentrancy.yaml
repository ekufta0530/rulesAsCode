id: solidity.security.curve-readonly-reentrancy.curve-readonly-reentrancy
message: $POOL.get_virtual_price() call on a Curve pool is not protected from the
  read-only reentrancy.
metadata:
  category: security
  technology:
  - solidity
  cwe: 'CWE-841: Improper Enforcement of Behavioral Workflow'
  confidence: HIGH
  likelihood: MEDIUM
  impact: HIGH
  subcategory:
  - vuln
  references:
  - https://chainsecurity.com/heartbreaks-curve-lp-oracles/
  - https://chainsecurity.com/curve-lp-oracle-manipulation-post-mortem/
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Other
  source: https://semgrep.dev/r/solidity.security.curve-readonly-reentrancy.curve-readonly-reentrancy
  shortlink: https://sg.run/Jk5P
  semgrep.dev:
    rule:
      r_id: 67646
      rv_id: 110674
      rule_id: d8UGDL
      version_id: ExTjAKE
      url: https://semgrep.dev/playground/r/ExTjAKE/solidity.security.curve-readonly-reentrancy.curve-readonly-reentrancy
      origin: community
patterns:
- pattern: '$POOL.get_virtual_price()

    '
- pattern-not-inside: "function $F(...) {\n  ...\n  $VAR.withdraw_admin_fees(...);\n\
    \  ...\n}\n"
- pattern-not-inside: "function $F(...) {\n  ...\n  $VAR.withdraw_admin_fees(...);\n\
    \  ...\n}\n"
- pattern-not-inside: "contract $C {\n  ...\n  function $CHECKFUNC(...) {\n    ...\n\
    \    $VAR.withdraw_admin_fees(...);\n    ...\n  }\n  ...\n  function $F(...) {\n\
    \    ...\n    $CHECKFUNC(...);\n    ...\n    $POOL.get_virtual_price();\n    ...\n\
    \  }\n  ...\n}\n"
- pattern-not-inside: "contract $C {\n  ...\n  function $CHECKFUNC(...) {\n    ...\n\
    \    $VAR.withdraw_admin_fees(...);\n    ...\n  }\n  ...\n  function $F(...) {\n\
    \    ...\n    $POOL.get_virtual_price();\n    ...\n    $CHECKFUNC(...);\n    ...\n\
    \  }\n  ...\n}\n"
languages:
- solidity
severity: ERROR
