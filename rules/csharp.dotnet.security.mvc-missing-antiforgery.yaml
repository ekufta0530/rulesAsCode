id: csharp.dotnet.security.mvc-missing-antiforgery.mvc-missing-antiforgery
message: $METHOD is a state-changing MVC method that does not validate the antiforgery
  token or do strict content-type checking. State-changing controller methods should
  either enforce antiforgery tokens or do strict content-type checking to prevent
  simple HTTP request types from bypassing CORS preflight controls.
severity: WARNING
metadata:
  likelihood: LOW
  impact: MEDIUM
  confidence: LOW
  category: security
  cwe:
  - 'CWE-352: Cross-Site Request Forgery (CSRF)'
  cwe2021-top25: true
  cwe2022-top25: true
  owasp:
  - A01:2021 - Broken Access Control
  references:
  - https://cheatsheetseries.owasp.org/cheatsheets/DotNet_Security_Cheat_Sheet.html#cross-site-request-forgery
  - https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests
  subcategory:
  - audit
  technology:
  - .net
  - mvc
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site Request Forgery (CSRF)
  source: https://semgrep.dev/r/csharp.dotnet.security.mvc-missing-antiforgery.mvc-missing-antiforgery
  shortlink: https://sg.run/Y0Jy
  semgrep.dev:
    rule:
      r_id: 18214
      rv_id: 109180
      rule_id: ZqUlxE
      version_id: YDTp2kw
      url: https://semgrep.dev/playground/r/YDTp2kw/csharp.dotnet.security.mvc-missing-antiforgery.mvc-missing-antiforgery
      origin: community
languages:
- csharp
patterns:
- pattern: "[$HTTPMETHOD]\npublic IActionResult $METHOD(...){\n    ...\n}\n"
- pattern-inside: 'using Microsoft.AspNetCore.Mvc;

    ...

    '
- pattern-not: "[ValidateAntiForgeryToken]\npublic IActionResult $METHOD(...){\n \
    \   ...\n}\n"
- pattern-not: "[Consumes(...)]\npublic IActionResult $METHOD(...){\n  ...\n}\n"
- metavariable-regex:
    metavariable: $HTTPMETHOD
    regex: Http(Post|Put|Delete|Patch)
