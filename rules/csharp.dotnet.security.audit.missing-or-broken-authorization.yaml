id: csharp.dotnet.security.audit.missing-or-broken-authorization.missing-or-broken-authorization
message: Anonymous access shouldn't be allowed unless explicit by design. Access control
  checks are missing and potentially can be bypassed. This finding violates the principle
  of least privilege or deny by default, where access should only be permitted for
  a specific set of roles or conforms to a custom policy or users.
severity: INFO
metadata:
  likelihood: LOW
  impact: MEDIUM
  confidence: MEDIUM
  category: security
  cwe:
  - 'CWE-862: Missing Authorization'
  cwe2021-top25: true
  cwe2022-top25: true
  cwe2023-top25: true
  owasp:
  - A01:2021 - Broken Access Control
  references:
  - https://owasp.org/Top10/A01_2021-Broken_Access_Control
  - https://cwe.mitre.org/data/definitions/862.html
  - https://docs.microsoft.com/en-us/aspnet/core/security/authorization/simple?view=aspnetcore-7.0
  subcategory:
  - vuln
  technology:
  - .net
  - mvc
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Improper Authorization
  source: https://semgrep.dev/r/csharp.dotnet.security.audit.missing-or-broken-authorization.missing-or-broken-authorization
  shortlink: https://sg.run/Z8GA
  semgrep.dev:
    rule:
      r_id: 26335
      rv_id: 113528
      rule_id: eqU32Y
      version_id: A8T9gKe
      url: https://semgrep.dev/playground/r/A8T9gKe/csharp.dotnet.security.audit.missing-or-broken-authorization.missing-or-broken-authorization
      origin: community
languages:
- csharp
patterns:
- pattern: "public class $CLASS : Controller {\n  ...\n}\n"
- pattern-inside: 'using Microsoft.AspNetCore.Mvc;

    ...

    '
- pattern-not: "[AllowAnonymous]\npublic class $CLASS : Controller {\n  ...\n}\n"
- pattern-not: "[Authorize]\npublic class $CLASS : Controller {\n  ...\n}\n"
- pattern-not: "[Authorize(Roles = ...)]\npublic class $CLASS : Controller {\n  ...\n\
    }\n"
- pattern-not: "[Authorize(Policy = ...)]\npublic class $CLASS : Controller {\n  ...\n\
    }\n"
