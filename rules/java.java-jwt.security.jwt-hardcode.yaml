id: java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret
message: A hard-coded credential was detected. It is not recommended to store credentials
  in source-code, as this risks secrets being leaked and used by either an internal
  or external malicious adversary. It is recommended to use environment variables
  to securely provide credentials or retrieve credentials from a secure vault or HSM
  (Hardware Security Module).
metadata:
  cwe:
  - 'CWE-798: Use of Hard-coded Credentials'
  references:
  - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
  owasp:
  - A07:2021 - Identification and Authentication Failures
  technology:
  - java
  - secrets
  - jwt
  category: security
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - vuln
  likelihood: LOW
  impact: MEDIUM
  confidence: HIGH
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Hard-coded Secrets
  source: https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret
  shortlink: https://sg.run/RoDK
  semgrep.dev:
    rule:
      r_id: 9149
      rv_id: 109668
      rule_id: oqUeAn
      version_id: gET3xz5
      url: https://semgrep.dev/playground/r/gET3xz5/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret
      origin: community
languages:
- java
severity: WARNING
patterns:
- pattern-either:
  - pattern: '(Algorithm $ALG) = $ALGO.$HMAC("$Y");

      '
  - pattern: '$SECRET = "$Y";

      ...

      (Algorithm $ALG) = $ALGO.$HMAC($SECRET);

      '
  - pattern: "class $CLASS {\n  ...\n  $TYPE $SECRET = \"$Y\";\n  ...\n  $RETURNTYPE\
      \ $FUNC (...) {\n    ...\n    (Algorithm $ALG) = $ALGO.$HMAC($SECRET);\n   \
      \ ...\n  }\n  ...\n}\n"
- focus-metavariable: $Y
- metavariable-regex:
    metavariable: $HMAC
    regex: (HMAC384|HMAC256|HMAC512)
