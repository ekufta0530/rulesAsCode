id: javascript.angular.security.detect-angular-trust-as-method.detect-angular-trust-as-method
message: The use of $sce.trustAs can be dangerous if unsanitized user input flows
  through this API.
metadata:
  references:
  - https://docs.angularjs.org/api/ng/service/$sce
  - https://owasp.org/www-chapter-london/assets/slides/OWASPLondon20170727_AngularJS.pdf
  category: security
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  technology:
  - angular
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - vuln
  likelihood: LOW
  impact: MEDIUM
  confidence: MEDIUM
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/javascript.angular.security.detect-angular-trust-as-method.detect-angular-trust-as-method
  shortlink: https://sg.run/OPW2
  semgrep.dev:
    rule:
      r_id: 9231
      rv_id: 109795
      rule_id: gxU1QX
      version_id: 0bTLlno
      url: https://semgrep.dev/playground/r/0bTLlno/javascript.angular.security.detect-angular-trust-as-method.detect-angular-trust-as-method
      origin: community
languages:
- javascript
- typescript
severity: WARNING
mode: taint
pattern-sources:
- patterns:
  - pattern-inside: 'app.controller(..., function($scope,$sce) {

      ...

      });

      '
  - pattern: $scope.$X
pattern-sinks:
- pattern: $sce.trustAs(...)
- pattern: $sce.trustAsHtml(...)
