id: javascript.lang.security.audit.md5-used-as-password.md5-used-as-password
message: It looks like MD5 is used as a password hash. MD5 is not considered a secure
  password hash because it can be cracked by an attacker in a short amount of time.
  Use a suitable password hashing function such as bcrypt. You can use the `bcrypt`
  node.js package.
metadata:
  category: security
  technology:
  - crypto
  - md5
  references:
  - https://tools.ietf.org/id/draft-lvelvindron-tls-md5-sha1-deprecate-01.html
  - https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords
  - https://github.com/returntocorp/semgrep-rules/issues/1609
  - https://www.npmjs.com/package/bcrypt
  owasp:
  - A03:2017 - Sensitive Data Exposure
  - A02:2021 - Cryptographic Failures
  cwe:
  - 'CWE-327: Use of a Broken or Risky Cryptographic Algorithm'
  subcategory:
  - vuln
  likelihood: HIGH
  impact: MEDIUM
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cryptographic Issues
  source: https://semgrep.dev/r/javascript.lang.security.audit.md5-used-as-password.md5-used-as-password
  shortlink: https://sg.run/GOEn
  semgrep.dev:
    rule:
      r_id: 14692
      rv_id: 109920
      rule_id: GdUr5G
      version_id: d6TrAG4
      url: https://semgrep.dev/playground/r/d6TrAG4/javascript.lang.security.audit.md5-used-as-password.md5-used-as-password
      origin: community
languages:
- javascript
severity: WARNING
mode: taint
pattern-sources:
- pattern: $CRYPTO.createHash("md5")
pattern-sinks:
- patterns:
  - pattern: $FUNCTION(...);
  - metavariable-regex:
      metavariable: $FUNCTION
      regex: (?i)(.*password.*)
