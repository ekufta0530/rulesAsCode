id: scala.lang.security.audit.dangerous-seq-run.dangerous-seq-run
patterns:
- pattern: Seq($CMD, ...)
- pattern-not: Seq("...", ...)
- pattern-inside: 'import sys.process

    ...

    '
- pattern-not-inside: '$CMD = "..."

    ...

    '
- pattern-either:
  - pattern-inside: Seq(...).!
  - pattern-inside: Seq(...).!!
  - pattern-inside: Seq(...).lazyLines
message: Found dynamic content used for the external process. This is dangerous if
  arbitrary data can reach this function call because it allows a malicious actor
  to execute commands. Ensure your variables are not controlled by users or sufficiently
  sanitized.
languages:
- scala
severity: ERROR
metadata:
  category: security
  cwe:
  - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS
    Command Injection'')'
  owasp:
  - A01:2017 - Injection
  - A03:2021 - Injection
  technology:
  - scala
  confidence: LOW
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: HIGH
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Command Injection
  source: https://semgrep.dev/r/scala.lang.security.audit.dangerous-seq-run.dangerous-seq-run
  shortlink: https://sg.run/79b2
  semgrep.dev:
    rule:
      r_id: 18282
      rv_id: 110625
      rule_id: JDUle4
      version_id: e1T03pD
      url: https://semgrep.dev/playground/r/e1T03pD/scala.lang.security.audit.dangerous-seq-run.dangerous-seq-run
      origin: community
