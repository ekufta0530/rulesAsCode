id: swift.lang.string.format-string.swift-format-string
message: Format string attacks occur when untrusted data is passed directly into functions
  that build formatted strings, within the format parameter. This can result in memory/data
  leakage.
severity: WARNING
metadata:
  likelihood: LOW
  impact: HIGH
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-134: Use of Externally-Controlled Format String'
  functional-categories:
  - mobile::source::user-input-fields::lang
  masvs:
  - 'MASVS-CODE-4: The app validates and sanitizes all untrusted inputs.'
  references:
  - https://developer.apple.com/library/archive/documentation/Security/Conceptual/SecureCodingGuide/Articles/ValidatingInput.html
  technology:
  - ios
  - macos
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Improper Validation
  source: https://semgrep.dev/r/swift.lang.string.format-string.swift-format-string
  shortlink: https://sg.run/0JAB
  semgrep.dev:
    rule:
      r_id: 66498
      rv_id: 112031
      rule_id: gxU2PB
      version_id: yeTRZjP
      url: https://semgrep.dev/playground/r/yeTRZjP/swift.lang.string.format-string.swift-format-string
      origin: pro_rules
languages:
- swift
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern: 'String(contentsOf: (URL: $U), ...)

        '
    - pattern: '$OBJ.text()

        '
    - pattern: '(UITextField: $X).text

        '
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern: 'String(format: $FMT, ...)

        '
    - pattern: 'String.init(format: $FMT, ...)

        '
    - pattern: 'String.localizedStringWithFormat(format: $FMT, ...)

        '
  - focus-metavariable:
    - $FMT
