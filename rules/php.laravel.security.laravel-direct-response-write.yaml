id: php.laravel.security.laravel-direct-response-write.laravel-direct-response-write
message: Detected data rendered directly to the end user via 'response' This bypasses
  Laravel's built-in cross-site scripting (XSS) defenses and could result in an XSS
  vulnerability. Use Laravel's template engine to safely render HTML.
severity: WARNING
metadata:
  likelihood: LOW
  impact: MEDIUM
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
    Scripting'')'
  functional-categories:
  - web::source::cookie::lang
  - web::source::http-params::lang
  - web::source::http-body::lang
  - web::source::header::lang
  - web::source::url-path-params::lang
  - web::source::form-data::lang
  - web::source::cookie::laravel
  - web::source::http-params::laravel
  - web::source::http-body::laravel
  - web::source::header::laravel
  - web::source::url-path-params::laravel
  - web::source::form-data::laravel
  - web::sink::direct-response::laravel
  owasp:
  - A07:2017 - Cross-Site Scripting (XSS)
  - A03:2021 - Injection
  references:
  - https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Laravel_Cheat_Sheet.md#cross-site-scripting-xss
  - https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md
  technology:
  - laravel
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Cross-Site-Scripting (XSS)
  source: https://semgrep.dev/r/php.laravel.security.laravel-direct-response-write.laravel-direct-response-write
  shortlink: https://sg.run/qwKe
  semgrep.dev:
    rule:
      r_id: 36756
      rv_id: 111787
      rule_id: AbUpbE
      version_id: LjTqAvW
      url: https://semgrep.dev/playground/r/LjTqAvW/php.laravel.security.laravel-direct-response-write.laravel-direct-response-write
      origin: pro_rules
languages:
- php
mode: taint
pattern-sources:
- patterns:
  - pattern: public function $CALL(..., $ARG, ...) {...}
  - pattern-not: public function $CALL(..., $TYPE $ARG, ...) {...}
  - focus-metavariable: $ARG
  - pattern-inside: 'class $CLASS extends App\Http\Controllers\Controller {...}

      '
- patterns:
  - pattern-either:
    - pattern: 'Route::$METHOD($ROUTE, function(...,$ARG,...) { ... })

        '
    - pattern: 'Route::$METHOD($X, $ROUTE, function(...,$ARG,...) { ... })

        '
  - focus-metavariable: $ARG
- patterns:
  - pattern: function handle($REQ, Closure $NEXT) {...}
  - focus-metavariable: $REQ
- patterns:
  - pattern: 'function $FN(..., Illuminate\Http\Request $REQ, ...) {...}

      '
  - focus-metavariable: $REQ
- patterns:
  - pattern-either:
    - pattern: '$this->$PROPERTY

        '
    - pattern: '$this->$PROPERTY->$GET

        '
  - metavariable-pattern:
      metavariable: $PROPERTY
      patterns:
      - pattern-either:
        - pattern: query
        - pattern: request
        - pattern: headers
        - pattern: cookies
        - pattern: cookie
        - pattern: files
        - pattern: file
        - pattern: allFiles
        - pattern: input
        - pattern: all
        - pattern: post
        - pattern: json
  - pattern-either:
    - pattern-inside: 'class $CL extends Illuminate\Http\Request {...}

        '
    - pattern-inside: 'class $CL extends Illuminate\Foundation\Http\FormRequest {...}

        '
- pattern: $_GET
- pattern: $_POST
- pattern: $_COOKIE
- pattern: $_REQUEST
- pattern: $_FILES
- patterns:
  - pattern: $_SERVER['$MEMBER']
  - metavariable-regex:
      metavariable: $MEMBER
      regex: ^(HTTP_ACCEPT|HTTP_ACCEPT_CHARSET|HTTP_ACCEPT_ENCODING|HTTP_ACCEPT_LANGUAGE|HTTP_CONNECTION|HTTP_HOST|HTTP_REFERER|HTTP_USER_AGENT|PHP_AUTH_DIGEST|PHP_AUTH_USER|PHP_AUTH_PW|PATH_INFO|ORIG_PATH_INFO|QUERY_STRING|REQUEST_METHOD)$
pattern-sinks:
- patterns:
  - focus-metavariable: $CONTENT
  - patterns:
    - pattern: response($CONTENT,...)
    - pattern-either:
      - pattern: response(...)->...->header('Content-Type', 'text/html')
      - pattern: response(...)->...->withHeaders([..., 'Content-Type' => 'text/html',...],...)
pattern-sanitizers:
- patterns:
  - pattern: $FUNC(...)
  - pattern-not: response(...)
  - pattern-not: response(...)->...->$WHATEVER(...)
  - pattern-not: Route->$NAME(...)
