id: python.flask.security.injection.user-eval.eval-injection
languages:
- python
severity: ERROR
message: Detected user data flowing into eval. This is code injection and should be
  avoided.
metadata:
  cwe:
  - 'CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code (''Eval
    Injection'')'
  owasp:
  - A03:2021 - Injection
  references:
  - https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html
  category: security
  technology:
  - flask
  subcategory:
  - vuln
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: MEDIUM
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Code Injection
  source: https://semgrep.dev/r/python.flask.security.injection.user-eval.eval-injection
  shortlink: https://sg.run/5QpX
  semgrep.dev:
    rule:
      r_id: 9547
      rv_id: 110273
      rule_id: 0oU54W
      version_id: 8KTQ92G
      url: https://semgrep.dev/playground/r/8KTQ92G/python.flask.security.injection.user-eval.eval-injection
      origin: community
pattern-either:
- patterns:
  - pattern: eval(...)
  - pattern-either:
    - pattern-inside: "@$APP.route($ROUTE, ...)\ndef $FUNC(..., $ROUTEVAR, ...):\n\
        \  ...\n  eval(..., <... $ROUTEVAR ...>, ...)\n"
    - pattern-inside: "@$APP.route($ROUTE, ...)\ndef $FUNC(..., $ROUTEVAR, ...):\n\
        \  ...\n  $INTERM = <... $ROUTEVAR ...>\n  ...\n  eval(..., <... $INTERM ...>,\
        \ ...)\n"
- pattern: eval(..., <... flask.request.$W.get(...) ...>, ...)
- pattern: eval(..., <... flask.request.$W[...] ...>, ...)
- pattern: eval(..., <... flask.request.$W(...) ...>, ...)
- pattern: eval(..., <... flask.request.$W ...>, ...)
- patterns:
  - pattern-inside: '$INTERM = <... flask.request.$W.get(...) ...>

      ...

      eval(..., <... $INTERM ...>, ...)

      '
  - pattern: eval(...)
- patterns:
  - pattern-inside: '$INTERM = <... flask.request.$W[...] ...>

      ...

      eval(..., <... $INTERM ...>, ...)

      '
  - pattern: eval(...)
- patterns:
  - pattern-inside: '$INTERM = <... flask.request.$W(...) ...>

      ...

      eval(..., <... $INTERM ...>, ...)

      '
  - pattern: eval(...)
- patterns:
  - pattern-inside: '$INTERM = <... flask.request.$W ...>

      ...

      eval(..., <... $INTERM ...>, ...)

      '
  - pattern: eval(...)
