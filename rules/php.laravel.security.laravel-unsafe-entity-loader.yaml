id: php.laravel.security.laravel-unsafe-entity-loader.laravel-unsafe-entity-loader
message: The application is using an XML parser that has not been safely configured.
  This might lead to XML External Entity (XXE) vulnerabilities when parsing user-controlled
  input. An attacker can include document type definitions (DTDs) which can interact
  with internal or external hosts. XXE can lead to other vulnerabilities, such as
  Local File Inclusion (LFI), Remote Code Execution (RCE), and Server-side request
  forgery (SSRF), depending on the application configuration. An attacker can also
  use DTDs to expand recursively, leading to a Denial-of-Service (DoS) attack, also
  known as a Billion Laughs Attack. The best defense against XXE is to have an XML
  parser that supports disabling DTDs. Limiting the use of external entities from
  the start can prevent the parser from being used to process untrusted XML files.
  Reducing dependencies on external resources is also a good practice for performance
  reasons. It is difficult to guarantee that even a trusted XML file on your server
  or during transmission has not been tampered with by a malicious third-party.
severity: WARNING
metadata:
  likelihood: LOW
  impact: MEDIUM
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-611: Improper Restriction of XML External Entity Reference'
  functional-categories:
  - web::source::cookie::lang
  - web::source::http-params::lang
  - web::source::http-body::lang
  - web::source::header::lang
  - web::source::url-path-params::lang
  - web::source::form-data::lang
  - web::source::cookie::laravel
  - web::source::http-params::laravel
  - web::source::http-body::laravel
  - web::source::header::laravel
  - web::source::url-path-params::laravel
  - web::source::form-data::laravel
  - xml::sink::xml-parser::lang
  - deserialization::sink::load-object::lang
  owasp:
  - A04:2017 - XML External Entities (XXE)
  - A05:2021 - Security Misconfiguration
  references:
  - https://websec.io/2012/08/27/Preventing-XXE-in-PHP.html
  - https://www.php.net/libxml_disable_entity_loader
  - https://www.php.net/manual/en/function.libxml-set-external-entity-loader.php
  technology:
  - laravel
  - XML
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - XML Injection
  source: https://semgrep.dev/r/php.laravel.security.laravel-unsafe-entity-loader.laravel-unsafe-entity-loader
  shortlink: https://sg.run/lePG
  semgrep.dev:
    rule:
      r_id: 36757
      rv_id: 111794
      rule_id: BYUv2J
      version_id: JdTNv8r
      url: https://semgrep.dev/playground/r/JdTNv8r/php.laravel.security.laravel-unsafe-entity-loader.laravel-unsafe-entity-loader
      origin: pro_rules
languages:
- php
mode: taint
pattern-sources:
- patterns:
  - pattern: public function $CALL(..., $ARG, ...) {...}
  - pattern-not: public function $CALL(..., $TYPE $ARG, ...) {...}
  - focus-metavariable: $ARG
  - pattern-inside: 'class $CLASS extends App\Http\Controllers\Controller {...}

      '
- patterns:
  - pattern-either:
    - pattern: 'Route::$METHOD($ROUTE, function(...,$ARG,...) { ... })

        '
    - pattern: 'Route::$METHOD($X, $ROUTE, function(...,$ARG,...) { ... })

        '
  - focus-metavariable: $ARG
- patterns:
  - pattern: function handle($REQ, Closure $NEXT) {...}
  - focus-metavariable: $REQ
- patterns:
  - pattern: 'function $FN(..., Illuminate\Http\Request $REQ, ...) {...}

      '
  - focus-metavariable: $REQ
- patterns:
  - pattern-either:
    - pattern: '$this->$PROPERTY

        '
    - pattern: '$this->$PROPERTY->$GET

        '
  - metavariable-pattern:
      metavariable: $PROPERTY
      patterns:
      - pattern-either:
        - pattern: query
        - pattern: request
        - pattern: headers
        - pattern: cookies
        - pattern: cookie
        - pattern: files
        - pattern: file
        - pattern: allFiles
        - pattern: input
        - pattern: all
        - pattern: post
        - pattern: json
  - pattern-either:
    - pattern-inside: 'class $CL extends Illuminate\Http\Request {...}

        '
    - pattern-inside: 'class $CL extends Illuminate\Foundation\Http\FormRequest {...}

        '
- pattern: $_GET
- pattern: $_POST
- pattern: $_COOKIE
- pattern: $_REQUEST
- pattern: $_FILES
- patterns:
  - pattern: $_SERVER['$MEMBER']
  - metavariable-regex:
      metavariable: $MEMBER
      regex: ^(HTTP_ACCEPT|HTTP_ACCEPT_CHARSET|HTTP_ACCEPT_ENCODING|HTTP_ACCEPT_LANGUAGE|HTTP_CONNECTION|HTTP_HOST|HTTP_REFERER|HTTP_USER_AGENT|PHP_AUTH_DIGEST|PHP_AUTH_USER|PHP_AUTH_PW|PATH_INFO|ORIG_PATH_INFO|QUERY_STRING|REQUEST_METHOD)$
pattern-sinks:
- patterns:
  - pattern-inside: 'libxml_disable_entity_loader(false);

      ...

      '
  - pattern-either:
    - patterns:
      - pattern: $X->loadXML($INPUT,...)
      - pattern-inside: '$X = new DOMDocument;

          ...

          '
    - pattern: simplexml_load_string($INPUT,...)
    - pattern: simplexml_load_file($INPUT,...)
    - pattern: simplexml_import_dom($INPUT,...)
    - pattern: DOMDocument::loadXML($INPUT,...)
    - pattern: DOMDocument::load($INPUT,...)
  - focus-metavariable: $INPUT
