id: kotlin.spring.tainted-system-command.tainted-system-command
message: Untrusted input might be injected into a command executed by the application,
  which can lead to a command injection vulnerability. An attacker can execute arbitrary
  commands, potentially gaining complete control of the system. To prevent this vulnerability,
  avoid executing OS commands with user input. If this is unavoidable, validate and
  sanitize the input, and use safe methods for executing the commands.
severity: ERROR
metadata:
  likelihood: MEDIUM
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS
    Command Injection'')'
  cwe2020-top25: true
  cwe2021-top25: true
  cwe2022-top25: true
  functional-categories:
  - os::sink::os-command-or-thread
  - web::source::cookie::SpringBoot
  - web::source::header::SpringBoot
  - web::source::http-body::SpringBoot
  - web::source::http-params::SpringBoot
  - web::source::url-path-params::SpringBoot
  owasp:
  - A01:2017 - Injection
  - A03:2021 - Injection
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  technology:
  - kotlin
  - spring
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Command Injection
  source: https://semgrep.dev/r/kotlin.spring.tainted-system-command.tainted-system-command
  shortlink: https://sg.run/rGnW
  semgrep.dev:
    rule:
      r_id: 59569
      rv_id: 731955
      rule_id: EwU70w
      version_id: 0bTrY7o
      url: https://semgrep.dev/playground/r/0bTrY7o/kotlin.spring.tainted-system-command.tainted-system-command
      origin: pro_rules
languages:
- kotlin
mode: taint
pattern-sources:
- label: USER_INPUT
  patterns:
  - pattern-either:
    - pattern: '($REQ: ServletRequest)

        '
    - pattern: '($REQ: HttpServletRequest)

        '
    - pattern: '($REQ: WebRequest)

        '
    - pattern: '($REQ: ServletWebRequest)

        '
    - pattern: '($REQ: FacesWebRequest)

        '
    - pattern: '($REQ: NativeWebRequest)

        '
    - patterns:
      - pattern-either:
        - pattern: 'fun $METHOD(..., @$REQ(...) $SOURCE: $TYPE, ...) {...}

            '
        - pattern: 'fun $METHOD(..., @$REQ $SOURCE: $TYPE, ...) {...}

            '
        - pattern: 'fun $METHOD(..., @$REQ(...) $SOURCE: $TYPE, ...) = $Z(...)

            '
        - pattern: 'fun $METHOD(..., @$REQ $SOURCE: $TYPE, ...) = $Z(...)

            '
      - metavariable-regex:
          metavariable: $TYPE
          regex: ^(?!(Int|Long|Float|Double|Short|Byte|Char|UByte|UInt|ULong|UShort|Boolean))
      - metavariable-regex:
          metavariable: $REQ
          regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute)
      - focus-metavariable: $SOURCE
- label: CONCAT
  patterns:
  - pattern-either:
    - pattern: '"...${...}..."

        '
    - pattern: '"...${...}...".$MD(...)

        '
    - pattern: '"..." + ...

        '
    - pattern: '... + "..."'
    - pattern: '"...${...}..." + ...

        '
    - pattern: '... + "...${...}..."'
    - pattern: String.format(...)
  requires: USER_INPUT
pattern-propagators:
- from: $INPUT
  label: STRBUILDER_CONCAT
  patterns:
  - patterns:
    - pattern-either:
      - pattern: '($STRB: StringBuilder).append($INPUT)

          '
      - patterns:
        - pattern: $STRB.append($INPUT)
        - pattern-inside: '$STRB = StringBuilder(...)

            ...

            '
  requires: USER_INPUT
  to: $STRB
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern: $P = Process(...)
    - pattern: '($PB: ProcessBuilder).command(...)

        '
    - pattern: ProcessBuilder(...). ... .start(...)
    - pattern: ProcessBuilder(...). ... .command(...)
    - patterns:
      - pattern-either:
        - patterns:
          - pattern: $R.$EXEC(...)
          - pattern-inside: '$R = Runtime.getRuntime(...)

              ...

              '
        - pattern: '($R: Runtime).$EXEC(...)

            '
        - pattern: Runtime.getRuntime(...).$EXEC(...)
      - metavariable-regex:
          metavariable: $EXEC
          regex: (exec|loadLibrary|load)
    - patterns:
      - pattern-either:
        - pattern: '($PB: ProcessBuilder).command(...).$ADD(...)

            '
        - patterns:
          - pattern: $PB.command(...).$ADD(...)
          - pattern-inside: '$PB = ProcessBuilder(...)

              ...

              '
      - metavariable-regex:
          metavariable: $ADD
          regex: (add|addAll)
    - patterns:
      - pattern-either:
        - pattern: $BUILDER.start(...)
        - pattern: $BUILDER.command(...)
      - pattern-inside: '$BUILDER = ProcessBuilder(...)

          ...

          '
  requires: CONCAT or STRBUILDER_CONCAT
pattern-sanitizers:
- patterns:
  - pattern: $X.$METHOD(...)
  - metavariable-regex:
      metavariable: $METHOD
      regex: (equals|toInt|toLong|toFloat|toDouble|toShort|toByte|toUByte|toUInt|toULong|toUShort)
- pattern: '($X: boolean)

    '
- pattern: arrayOf(...)
