id: python.lang.security.audit.sqli.asyncpg-sqli.asyncpg-sqli
languages:
- python
message: 'Detected string concatenation with a non-literal variable in a asyncpg Python
  SQL statement. This could lead to SQL injection if the variable is user-controlled
  and not properly sanitized. In order to prevent SQL injection, use parameterized
  queries or prepared statements instead. You can create parameterized queries like
  so: ''conn.fetch("SELECT $1 FROM table", value)''. You can also create prepared
  statements with ''Connection.prepare'': ''stmt = conn.prepare("SELECT $1 FROM table");
  await stmt.fetch(user_value)'''
metadata:
  references:
  - https://github.com/MagicStack/asyncpg
  - https://magicstack.github.io/asyncpg/current/
  category: security
  cwe:
  - 'CWE-89: Improper Neutralization of Special Elements used in an SQL Command (''SQL
    Injection'')'
  technology:
  - asyncpg
  owasp:
  - A01:2017 - Injection
  - A03:2021 - Injection
  cwe2022-top25: true
  cwe2021-top25: true
  subcategory:
  - audit
  likelihood: LOW
  impact: HIGH
  confidence: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - SQL Injection
  source: https://semgrep.dev/r/python.lang.security.audit.sqli.asyncpg-sqli.asyncpg-sqli
  shortlink: https://sg.run/0nBB
  semgrep.dev:
    rule:
      r_id: 10310
      rv_id: 110424
      rule_id: WAUZqq
      version_id: vdTY8YE
      url: https://semgrep.dev/playground/r/vdTY8YE/python.lang.security.audit.sqli.asyncpg-sqli.asyncpg-sqli
      origin: community
patterns:
- pattern-either:
  - patterns:
    - pattern: $CONN.$METHOD(...,$QUERY,...)
    - pattern-either:
      - pattern-inside: '$QUERY = $X + $Y

          ...

          '
      - pattern-inside: '$QUERY += $X

          ...

          '
      - pattern-inside: '$QUERY = ''...''.format(...)

          ...

          '
      - pattern-inside: '$QUERY = ''...'' % (...)

          ...

          '
      - pattern-inside: '$QUERY = f''...{$USERINPUT}...''

          ...

          '
    - pattern-not-inside: '$QUERY += "..."

        ...

        '
    - pattern-not-inside: '$QUERY = "..." + "..."

        ...

        '
    - pattern-not-inside: '$QUERY = ''...''.format()

        ...

        '
    - pattern-not-inside: '$QUERY = ''...'' % ()

        ...

        '
  - pattern: $CONN.$METHOD(..., $X + $Y, ...)
  - pattern: $CONN.$METHOD(..., $Y.format(...), ...)
  - pattern: $CONN.$METHOD(..., '...'.format(...), ...)
  - pattern: $CONN.$METHOD(..., '...' % (...), ...)
  - pattern: $CONN.$METHOD(..., f'...{$USERINPUT}...', ...)
- pattern-either:
  - pattern-inside: '$CONN = await asyncpg.connect(...)

      ...

      '
  - pattern-inside: "async with asyncpg.create_pool(...) as $CONN:\n    ...\n"
  - pattern-inside: "async with $POOL.acquire(...) as $CONN:\n    ...\n"
  - pattern-inside: '$CONN = await $POOL.acquire(...)

      ...

      '
  - pattern-inside: "def $FUNCNAME(..., $CONN: Connection, ...):\n    ...\n"
  - pattern-inside: "def $FUNCNAME(..., $CONN: asyncpg.Connection, ...):\n    ...\n"
- pattern-not: $CONN.$METHOD(..., "..." + "...", ...)
- pattern-not: $CONN.$METHOD(..., '...'.format(), ...)
- pattern-not: $CONN.$METHOD(..., '...'%(), ...)
- metavariable-regex:
    metavariable: $METHOD
    regex: ^(fetch|fetchrow|fetchval|execute|executemany|prepare|cursor|copyfromquery)$
severity: WARNING
