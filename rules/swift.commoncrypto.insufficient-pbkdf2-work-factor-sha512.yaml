id: swift.commoncrypto.insufficient-pbkdf2-work-factor-sha512.insufficient-pbkdf2-work-factor-sha512
message: PBKDF2 usage was identified with an insufficient work factor, i.e. an iteration
  count (rounds) lower than modern guidelines prescribe. Per OWASP guidance, 210K
  iterations should be used with SHA512
severity: WARNING
metadata:
  likelihood: LOW
  impact: LOW
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-916: Use of Password Hash With Insufficient Computational Effort'
  functional-categories:
  - crypto::search::hash-algorithm::CommonCrypto
  masvs:
  - 'MSTG-CRYPTO-3: The app uses cryptographic primitives that are appropriate for
    the particular use-case, configured with parameters that adhere to industry best
    practices.'
  owasp:
  - A02:2021 - Cryptographic Failures
  references:
  - https://mobile-security.gitbook.io/masvs/security-requirements/0x08-v3-cryptography_verification_requirements
  - https://pages.nist.gov/800-63-3/sp800-63b.html#sec5
  technology:
  - ios
  - macos
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Insecure Hashing Algorithm
  source: https://semgrep.dev/r/swift.commoncrypto.insufficient-pbkdf2-work-factor-sha512.insufficient-pbkdf2-work-factor-sha512
  shortlink: https://sg.run/1wpD
  semgrep.dev:
    rule:
      r_id: 59722
      rv_id: 112005
      rule_id: eqUQOy
      version_id: K3TvGXB
      url: https://semgrep.dev/playground/r/K3TvGXB/swift.commoncrypto.insufficient-pbkdf2-work-factor-sha512.insufficient-pbkdf2-work-factor-sha512
      origin: pro_rules
languages:
- swift
options:
  symbolic_propagation: true
patterns:
- pattern-either:
  - patterns:
    - pattern: 'CCKeyDerivationPBKDF($A, $B, $C, $D, $E, $ALG, UInt32($ROUNDS), ...)

        '
    - focus-metavariable: $ROUNDS
  - patterns:
    - pattern-inside: '$X = UInt32($ROUNDS)

        ...

        '
    - pattern: 'CCKeyDerivationPBKDF($A, $B, $C, $D, $E, $ALG, $X, ...)

        '
    - focus-metavariable: $X
- metavariable-comparison:
    metavariable: $ROUNDS
    comparison: $ROUNDS < 210000
- metavariable-regex:
    metavariable: $ALG
    regex: .*PRFHmacAlgSHA512.*
