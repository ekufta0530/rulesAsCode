id: java.servlets.security.tainted-xml-decoder-deepsemgrep.tainted-xml-decoder-deepsemgrep
message: 'The application is using an XML parser that has not been safely configured.
  This might lead to XML External Entity (XXE) vulnerabilities when parsing user-controlled
  input. An attacker can include document type definitions (DTDs) which can interact
  with internal or external hosts. XXE can lead to other vulnerabilities, such as
  Local File Inclusion (LFI), Remote Code Execution (RCE), and Server-side request
  forgery (SSRF), depending on the application configuration. An attacker can also
  use DTDs to expand recursively, leading to a Denial-of-Service (DoS) attack, also
  known as a Billion Laughs Attack. The best defense against XXE is to have an XML
  parser that supports disabling DTDs. Limiting the use of external entities from
  the start can prevent the parser from being used to process untrusted XML files.
  Reducing dependencies on external resources is also a good practice for performance
  reasons. It is difficult to guarantee that even a trusted XML file on your server
  or during transmission has not been tampered with by a malicious third-party. For
  more information, see: [Java XXE prevention](https://semgrep.dev/docs/cheat-sheets/java-xxe/)'
severity: WARNING
metadata:
  likelihood: HIGH
  impact: HIGH
  confidence: HIGH
  interfile: true
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-611: Improper Restriction of XML External Entity Reference'
  cwe2021-top25: true
  cwe2022-top25: true
  functional-categories:
  - web::source::cookie::Servlet
  - web::source::http-params::Servlet
  - web::source::http-body::Servlet
  - web::source::header::Servlet
  - web::source::url-path-params::Servlet
  - xml::sink::xml-parser::java.beans
  owasp:
  - A04:2017 - XML External Entities (XXE)
  - A05:2021 - Security Misconfiguration
  references:
  - https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html
  source-rule-url: https://find-sec-bugs.github.io/bugs.htm#XML_DECODER
  technology:
  - java
  - servlets
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - XML Injection
  source: https://semgrep.dev/r/java.servlets.security.tainted-xml-decoder-deepsemgrep.tainted-xml-decoder-deepsemgrep
  shortlink: https://sg.run/847Q
  semgrep.dev:
    rule:
      r_id: 40140
      rv_id: 111613
      rule_id: 4bUYrl
      version_id: 0bTLeDB
      url: https://semgrep.dev/playground/r/0bTLeDB/java.servlets.security.tainted-xml-decoder-deepsemgrep.tainted-xml-decoder-deepsemgrep
      origin: pro_rules
languages:
- java
mode: taint
pattern-sources:
- patterns:
  - pattern-either:
    - pattern: '(HttpServletRequest $REQ).$REQFUNC(...)

        '
    - pattern: "(ServletRequest $REQ).$REQFUNC(...) \n"
  - metavariable-regex:
      metavariable: $REQFUNC
      regex: (getInputStream|getParameter|getParameterMap|getParameterValues|getReader|getCookies|getHeader|getHeaderNames|getHeaders|getPart|getParts|getQueryString)
pattern-sinks:
- patterns:
  - pattern: '(XMLDecoder $XML) = new XMLDecoder($IN, ...);

      ...

      $VAR = $XML.readObject();

      '
  - focus-metavariable: $IN
