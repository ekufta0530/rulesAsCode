id: go.secrets.gorm.gorm-hardcoded-secret.gorm-hardcoded-secret
message: A secret is hard-coded in the application. Secrets stored in source code,
  such as credentials, identifiers, and other types of sensitive data, can be leaked
  and used by internal or external malicious actors. It is recommended to rotate the
  secret and retrieve them from a secure secret vault or Hardware Security Module
  (HSM), alternatively environment variables can be used if allowed by your company
  policy.
severity: WARNING
metadata:
  likelihood: LOW
  impact: HIGH
  confidence: HIGH
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-798: Use of Hard-coded Credentials'
  cwe2020-top25: true
  cwe2021-top25: true
  cwe2022-top25: true
  owasp:
  - A07:2021 - Identification and Authentication Failures
  references:
  - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
  technology:
  - go
  - gorm.io
  - gorm.io/driver/clickhouse
  - gorm.io/driver/mysql
  - gorm.io/driver/postgres
  - gorm.io/gorm
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Hard-coded Secrets
  source: https://semgrep.dev/r/go.secrets.gorm.gorm-hardcoded-secret.gorm-hardcoded-secret
  shortlink: https://sg.run/x0ql
  semgrep.dev:
    rule:
      r_id: 58430
      rv_id: 731888
      rule_id: WAUByx
      version_id: 44TgwRj
      url: https://semgrep.dev/playground/r/44TgwRj/go.secrets.gorm.gorm-hardcoded-secret.gorm-hardcoded-secret
      origin: pro_rules
languages:
- go
mode: taint
pattern-sources:
- pattern-either:
  - patterns:
    - pattern-either:
      - pattern-inside: '"$DSN"

          '
    - metavariable-regex:
        metavariable: $DSN
        regex: ((.*://)?(?!<.*>)([A-Za-z])([A-Za-z0-9_-]){1,31}:(?!<.*>).*@.*|.*password=(?!<.*>).*)
  - patterns:
    - pattern-inside: "$CLICKHOUSE.Options{\n  ...,\n  Auth: $CH.Auth{\n    ...,\n\
        \    Password: \"...\",\n    ...\n  },\n  ...\n}\n"
    - pattern-not-inside: "$CLICKHOUSE.Options{\n  ...,\n  Auth: $CH.Auth{\n    ...,\n\
        \    Password: \"\",\n    ...\n  },\n  ...\n}\n"
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern-inside: 'import "gorm.io/gorm"

        ...

        '
    - pattern-inside: 'import "gorm.io/gorm/driver/mysql"

        ...

        '
    - pattern-inside: 'import "gorm.io/gorm/driver/postgres"

        ...

        '
    - pattern-inside: 'import "gorm.io/gorm/driver/clickhouse"

        ...

        '
  - pattern: $GORMSQL.$FUNC(...)
  - metavariable-regex:
      metavariable: $FUNC
      regex: Open|OpenDB|New
