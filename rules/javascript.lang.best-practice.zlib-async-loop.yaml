id: javascript.lang.best-practice.zlib-async-loop.zlib-async-loop
patterns:
- pattern-either:
  - pattern-inside: "for (...) {\n    ...\n}\n"
  - pattern-inside: "while (...) {\n    ...\n}\n"
  - pattern-inside: "do {\n    ...\n} while (...)\n"
  - pattern-inside: '$SMTH.forEach(...)

      '
  - pattern-inside: '$SMTH.map(...)

      '
  - pattern-inside: '$SMTH.reduce(...)

      '
  - pattern-inside: '$SMTH.reduceRight(...)

      '
- pattern: zlib.$METHOD(...);
- metavariable-regex:
    metavariable: $METHOD
    regex: ^.+$(?<!Sync)
message: Creating and using a large number of zlib objects simultaneously can cause
  significant memory fragmentation. It is strongly recommended that the results of
  compression operations be cached or made synchronous to avoid duplication of effort.
metadata:
  references:
  - https://nodejs.org/api/zlib.html#zlib_threadpool_usage_and_performance_considerations
  category: best-practice
  technology:
  - javascript
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  source: https://semgrep.dev/r/javascript.lang.best-practice.zlib-async-loop.zlib-async-loop
  shortlink: https://sg.run/58yK
  semgrep.dev:
    rule:
      r_id: 10047
      rv_id: 109905
      rule_id: ReUPqp
      version_id: 2KTzrJj
      url: https://semgrep.dev/playground/r/2KTzrJj/javascript.lang.best-practice.zlib-async-loop.zlib-async-loop
      origin: community
severity: WARNING
languages:
- javascript
- typescript
