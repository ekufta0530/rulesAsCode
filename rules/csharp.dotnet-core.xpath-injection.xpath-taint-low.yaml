id: csharp.dotnet-core.xpath-injection.xpath-taint-low.xpath-taint-low
message: XPath queries are constructed dynamically on user-controlled input. This
  could lead to XPath injection if variables passed into the evaluate or compile commands
  are not properly sanitized. Xpath injection could lead to unauthorized access to
  sensitive information in XML documents. Thoroughly sanitize user input or use parameterized
  XPath queries if you can.
severity: WARNING
metadata:
  likelihood: MEDIUM
  impact: MEDIUM
  confidence: LOW
  category: security
  subcategory:
  - audit
  cwe:
  - 'CWE-643: Improper Neutralization of Data within XPath Expressions (''XPath Injection'')'
  functional-categories:
  - web::source::header::ASP.NET
  - web::source::http-body::ASP.NET
  - web::source::http-params::ASP.NET
  - web::source::url-path-params::ASP.NET
  - xml::sink::xpath
  owasp:
  - A03:2021 - Injection
  references:
  - https://owasp.org/Top10/A03_2021-Injection
  technology:
  - .NET
  - api
  - csharp
  - dotnet
  - mvc
  - xml
  - xpath
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - XPath Injection
  source: https://semgrep.dev/r/csharp.dotnet-core.xpath-injection.xpath-taint-low.xpath-taint-low
  shortlink: https://sg.run/D4vY
  semgrep.dev:
    rule:
      r_id: 73408
      rv_id: 229200
      rule_id: L1U31R
      version_id: vdT1eon
      url: https://semgrep.dev/playground/r/vdT1eon/csharp.dotnet-core.xpath-injection.xpath-taint-low.xpath-taint-low
      origin: pro_rules
languages:
- csharp
mode: taint
options:
  interfile: true
pattern-sources:
- patterns:
  - focus-metavariable: $VAR
  - metavariable-pattern:
      metavariable: $T
      patterns:
      - pattern-not-regex: (int|long|float|double|bool|Guid)
  - pattern-either:
    - pattern-inside: IActionResult $FN(..., $T $VAR, ...) {...}
    - pattern-inside: Task<IActionResult> $FN(..., $T $VAR, ...) {...}
    - pattern-inside: ActionResult<$TYPE> $FN(..., $T $VAR, ...) {...}
    - pattern-inside: Task<ActionResult<$TYPE>> $FN(..., $T $VAR, ...) {...}
    - pattern-inside: $X.MapGet($ROUTE, (..., $T $VAR, ...) => {...})
    - pattern-inside: $X.MapPost($ROUTE, (..., $T $VAR, ...) => {...})
    - pattern-inside: $X.MapPut($ROUTE, (..., $T $VAR, ...) => {...})
    - pattern-inside: $X.MapDelete($ROUTE, (..., $T $VAR, ...) => {...})
    - pattern-inside: $X.MapPatch($ROUTE, (..., $T $VAR, ...) => {...})
    - pattern-inside: $X.MapMethods($ROUTE, $M, (..., $T $VAR, ...) => {...})
    - pattern-inside: $X.Map($ROUTE, (..., $T $VAR, ...) => {...})
    - pattern-inside: $X.MapFallback($ROUTE, (..., $T $VAR, ...) => {...})
pattern-propagators:
- from: $FROM
  patterns:
  - patterns:
    - pattern-either:
      - pattern: (StringBuilder $TO).Append(..., $FROM,...)
      - pattern: (StringBuilder $TO).AppendLine(..., $FROM,...)
      - pattern: (StringBuilder $TO).AppendFormat(..., $FROM,...)
      - pattern: (StringBuilder $TO).AppendJoin(..., $FROM,...)
      - pattern: (StringBuilder $TO).Replace(..., $FROM,...)
      - pattern: (StringBuilder $TO).Insert(..., $FROM,...)
      - patterns:
        - pattern-either:
          - pattern: $TO.Append(..., $FROM,...)
          - pattern: $TO.AppendLine(..., $FROM,...)
          - pattern: $TO.AppendFormat(..., $FROM,...)
          - pattern: $TO.AppendJoin(..., $FROM,...)
          - pattern: $TO.Replace(..., $FROM,...)
          - pattern: $TO.Insert(..., $FROM,...)
        - pattern-either:
          - pattern-inside: 'var $TO = new StringBuilder(...);

              ...

              '
          - pattern-inside: '$TO = new StringBuilder(...);

              ...

              '
  to: $TO
pattern-sinks:
- patterns:
  - focus-metavariable: $QUERY
  - pattern-either:
    - pattern: XPathExpression.Compile($QUERY,...)
    - patterns:
      - pattern-either:
        - pattern: ($XMLTYPE $NODE).Compile($QUERY,...)
        - pattern: ($XMLTYPE $NODE).Evaluate($QUERY,...)
        - pattern: ($XMLTYPE $NODE).Select($QUERY,...)
        - pattern: ($XMLTYPE $NODE).SelectNodes($QUERY,...)
        - pattern: ($XMLTYPE $NODE).SelectSingleNode($QUERY,...)
      - metavariable-regex:
          metavariable: $XMLTYPE
          regex: (?i)^(xml|xpath)
    - patterns:
      - pattern-either:
        - pattern: $NODE.Compile($QUERY,...)
        - pattern: $NODE.Evaluate($QUERY,...)
        - pattern: $NODE.Select($QUERY,...)
        - pattern: $NODE.SelectNodes($QUERY,...)
        - pattern: $NODE.SelectSingleNode($QUERY,...)
      - pattern-either:
        - patterns:
          - pattern-either:
            - pattern-inside: 'var $NODE = new $XMLTYPE(...);

                ...

                '
            - pattern-inside: '$NODE = new $XMLTYPE(...);

                ...

                '
          - metavariable-regex:
              metavariable: $XMLTYPE
              regex: (?i)^(xml|xpath)
        - pattern-inside: 'var $NODE = $DOC.CreateNavigator(...);

            ...

            '
        - pattern-inside: '$NODE = $DOC.CreateNavigator(...);

            ...

            '
        - pattern-inside: 'var $NODE = $DOC.DocumentElement;

            ...

            '
        - pattern-inside: '$NODE = $DOC.DocumentElement;

            ...

            '
pattern-sanitizers:
- patterns:
  - pattern: Convert.$METHOD(...)
  - metavariable-regex:
      metavariable: $METHOD
      regex: (ToBase64CharArray|ToBase64String|ToBoolean|ToDateTime|ToDecimal|ToDouble|ToInt16|ToInt32|ToInt64|ToSByte|ToSingle|ToUInt16|ToUInt32|ToUInt64)
- patterns:
  - pattern-either:
    - pattern: $INT.Parse(...)
    - pattern: $INT.TryParse(...)
    - pattern: $INT.TryParseExact(...)
  - metavariable-regex:
      metavariable: $INT
      regex: (Int32|Int128|Int16|Int64|IntPtr|Boolean|Decimal|Double|Guid|DateTime|Single|SByte|UInt128|UInt16|UInt32|UInt64|UIntPtr)
- patterns:
  - pattern-either:
    - pattern: (int $NUM)
    - pattern: (long $NUM)
    - pattern: (float $NUM)
    - pattern: (double $NUM)
    - pattern: (bool $NUM)
    - pattern: (Guid $NUM)
    - pattern: var $X = (int) ...;
    - pattern: var $X = (long) ...;
    - pattern: var $X = (float) ...;
    - pattern: var $X = (double) ...;
    - pattern: var $X = (bool) ...;
    - pattern: var $X = (Guid) ...;
