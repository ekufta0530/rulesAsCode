id: go.net.dos.slowloris-dos.slowloris-dos
message: This server may be vulnerable to a Slowloris Denial-of-Service (DoS) attack.
  Slowloris attacks exploit the fact that HTTP servers keep the connection active
  if the request received is incomplete. By default, Go does not define a timeout
  value for `ReadHeaderTimeout`, which leaves your application vulnerable. To mitigate
  this, configure this parameter in your Server settings.
severity: WARNING
metadata:
  likelihood: LOW
  impact: HIGH
  confidence: LOW
  category: security
  subcategory:
  - audit
  cwe: 'CWE-400: Uncontrolled Resource Consumption'
  references:
  - https://medium.com/a-journey-with-go/go-understand-and-mitigate-slowloris-attack-711c1b1403f6
  - https://cs.opensource.google/go/go/+/refs/tags/go1.20.3:src/net/http/server.go;l=2641
  - https://github.com/securego/gosec/blob/master/rules/slowloris.go
  technology:
  - go
  - net/http
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Denial-of-Service (DoS)
  source: https://semgrep.dev/r/go.net.dos.slowloris-dos.slowloris-dos
  shortlink: https://sg.run/Xr1j
  semgrep.dev:
    rule:
      r_id: 56664
      rv_id: 111501
      rule_id: GdUyPe
      version_id: qkT2BPo
      url: https://semgrep.dev/playground/r/qkT2BPo/go.net.dos.slowloris-dos.slowloris-dos
      origin: pro_rules
languages:
- go
fix: '$...CONFIG,

  Readtimeout: 60* time.Second

  '
patterns:
- pattern-inside: 'import "net/http"

    ...

    '
- pattern-either:
  - patterns:
    - pattern: "&http.Server{\n  $...CONFIG,\n}\n"
    - pattern-not-inside: "&http.Server{\n  ...,\n  ReadHeaderTimeout: ...,\n  ...,\n\
        }\n"
    - pattern-not-inside: "&http.Server{\n  ...,\n  ReadTimeout: ...,\n  ...,\n}\n"
    - pattern-not-inside: "$S = &http.Server{\n  ...,\n}\n$S.ReadHeaderTimeout = ...\n"
    - pattern-not-inside: "$S = &http.Server{\n  ...,\n}\n$S.ReadTimeout = ...\n"
    - focus-metavariable:
      - $...CONFIG
