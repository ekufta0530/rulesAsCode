id: go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion
message: '`MinVersion` is missing from this TLS configuration.  By default, TLS 1.2
  is currently used as the minimum when acting as a client, and TLS 1.0 when acting
  as a server. General purpose web applications should default to TLS 1.3 with all
  other protocols disabled.  Only where it is known that a web server must support
  legacy clients with unsupported an insecure browsers (such as Internet Explorer
  10), it may be necessary to enable TLS 1.0 to provide support. Add `MinVersion:
  tls.VersionTLS13'' to the TLS configuration to bump the minimum version to TLS 1.3.'
metadata:
  cwe:
  - 'CWE-327: Use of a Broken or Risky Cryptographic Algorithm'
  owasp:
  - A03:2017 - Sensitive Data Exposure
  - A02:2021 - Cryptographic Failures
  source-rule-url: https://github.com/securego/gosec/blob/master/rules/tls_config.go
  references:
  - https://golang.org/doc/go1.14#crypto/tls
  - https://golang.org/pkg/crypto/tls/#:~:text=MinVersion
  - https://www.us-cert.gov/ncas/alerts/TA14-290A
  category: security
  technology:
  - go
  confidence: HIGH
  subcategory:
  - guardrail
  likelihood: MEDIUM
  impact: LOW
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  vulnerability_class:
  - Cryptographic Issues
  source: https://semgrep.dev/r/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion
  shortlink: https://sg.run/oxEN
  semgrep.dev:
    rule:
      r_id: 9116
      rv_id: 109599
      rule_id: NbUk4X
      version_id: o5Tglp0
      url: https://semgrep.dev/playground/r/o5Tglp0/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion
      origin: community
languages:
- go
severity: WARNING
patterns:
- pattern: 'tls.Config{ $...CONF }

    '
- pattern-not: 'tls.Config{..., MinVersion: ..., ...}

    '
fix: 'tls.Config{ $...CONF, MinVersion: tls.VersionTLS13 }

  '
