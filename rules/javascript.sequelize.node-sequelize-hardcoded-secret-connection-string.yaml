id: javascript.sequelize.node-sequelize-hardcoded-secret-connection-string.node-sequelize-hardcoded-secret-connection-string
message: A secret is hard-coded in the application. Secrets stored in source code,
  such as credentials, identifiers, and other types of sensitive data, can be leaked
  and used by internal or external malicious actors. Use environment variables to
  securely provide credentials and other secrets or retrieve them from a secure vault
  or Hardware Security Module (HSM).
severity: WARNING
metadata:
  likelihood: HIGH
  impact: MEDIUM
  confidence: HIGH
  interfile: true
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-798: Use of Hard-coded Credentials'
  cwe2021-top25: true
  cwe2022-top25: true
  owasp:
  - A07:2021 - Identification and Authentication Failures
  references:
  - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
  technology:
  - Sequelize
  - Nodejs
  - Secrets
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Hard-coded Secrets
  source: https://semgrep.dev/r/javascript.sequelize.node-sequelize-hardcoded-secret-connection-string.node-sequelize-hardcoded-secret-connection-string
  shortlink: https://sg.run/7bwQ
  semgrep.dev:
    rule:
      r_id: 37938
      rv_id: 111700
      rule_id: X5Ul0A
      version_id: WrTW3BD
      url: https://semgrep.dev/playground/r/WrTW3BD/javascript.sequelize.node-sequelize-hardcoded-secret-connection-string.node-sequelize-hardcoded-secret-connection-string
      origin: pro_rules
languages:
- js
- ts
mode: taint
pattern-sources:
- patterns:
  - pattern-inside: '"$URL"

      '
  - metavariable-regex:
      metavariable: $URL
      regex: (.*)://(?!<.*>)([A-Za-z])([A-Za-z0-9_-]){1,31}:(?!<.*>).*@.*
pattern-sinks:
- patterns:
  - pattern-either:
    - pattern-inside: '$SQL = require(''$IMPORT'')

        ...

        '
    - pattern-inside: 'import $SQL from ''$IMPORT''

        ...

        '
    - pattern-inside: 'import * as $SQL from ''$IMPORT''

        ...

        '
    - pattern-inside: 'import {...,$SQL,...} from ''$IMPORT''

        ...

        '
  - metavariable-regex:
      metavariable: $IMPORT
      regex: ^(sequelize)$
  - patterns:
    - pattern-inside: 'new $SQL($URL)

        '
    - focus-metavariable: $URL
