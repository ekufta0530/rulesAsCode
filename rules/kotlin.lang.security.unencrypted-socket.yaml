id: kotlin.lang.security.unencrypted-socket.unencrypted-socket
metadata:
  cwe:
  - 'CWE-319: Cleartext Transmission of Sensitive Information'
  owasp:
  - A03:2017 - Sensitive Data Exposure
  - A02:2021 - Cryptographic Failures
  source-rule-url: https://find-sec-bugs.github.io/bugs.htm#UNENCRYPTED_SOCKET
  asvs:
    section: V6 Stored Cryptography Verification Requirements
    control_id: 6.2.5 Insecure Algorithm
    control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms
    version: '4'
  category: security
  technology:
  - kotlin
  license: Commons Clause License Condition v1.0[LGPL-2.1-only]
  references:
  - https://owasp.org/Top10/A02_2021-Cryptographic_Failures
  subcategory:
  - audit
  likelihood: LOW
  impact: LOW
  confidence: LOW
  vulnerability_class:
  - Mishandled Sensitive Information
  source: https://semgrep.dev/r/kotlin.lang.security.unencrypted-socket.unencrypted-socket
  shortlink: https://sg.run/KXZd
  semgrep.dev:
    rule:
      r_id: 14699
      rv_id: 109999
      rule_id: KxU76z
      version_id: qkT2xwl
      url: https://semgrep.dev/playground/r/qkT2xwl/kotlin.lang.security.unencrypted-socket.unencrypted-socket
      origin: community
message: This socket is not encrypted. The traffic could be read by an attacker intercepting
  the network traffic. Use an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory'
  instead
severity: WARNING
languages:
- kt
pattern-either:
- pattern: ServerSocket(...)
- pattern: Socket(...)
