id: go.lang.memory.memory-aliasing.memory-aliasing
message: Implicit memory aliasing detected in for loop. When using for loops in Go,
  the iteration variable is reused across all iterations. This means the variable
  itself doesn't change, just its value does. Storing the address of this variable
  can lead to unexpected behavior, as the pointer will be dereferenced after the loop
  finishes. To avoid this issue, it's better to directly access the elements of the
  iterable you're looping through, rather than using the iterator variable. By doing
  this, you can prevent any unintended side effects and improve the stability of your
  code.
severity: INFO
metadata:
  likelihood: LOW
  impact: LOW
  confidence: LOW
  category: security
  subcategory:
  - audit
  cwe: 'CWE-118: Incorrect Access of Indexable Resource (''Range Error'')'
  functional-categories:
  - memory::search::user-after-free::lang
  references:
  - https://husni.dev/beware-of-implicit-memory-aliasing-in-go-foor-loop/
  - https://stackoverflow.com/questions/62446118/implicit-memory-aliasing-in-for-loop
  - https://github.com/securego/gosec/blob/master/rules/implicit_aliasing.go
  technology:
  - go
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Other
  source: https://semgrep.dev/r/go.lang.memory.memory-aliasing.memory-aliasing
  shortlink: https://sg.run/pX6e
  semgrep.dev:
    rule:
      r_id: 56662
      rv_id: 111493
      rule_id: JDUbDr
      version_id: GxTv852
      url: https://semgrep.dev/playground/r/GxTv852/go.lang.memory.memory-aliasing.memory-aliasing
      origin: pro_rules
languages:
- go
patterns:
- pattern-either:
  - pattern: "for _, $ARG := range $SLICE {\n  <... &($ARG) ...>\n}\n"
  - pattern: "for _, $ARG := range $SLICE {\n  <... func() { <... &$ARG ...> } ...>\n\
      }\n"
  - pattern: "for _, $ARG := range $SLICE {\n  <... $X(..., <... &$ARG ...>, ...)\
      \ ...>\n}\n"
- pattern-not: "for _, $ARG := range $SLICE {\n  <... *$ARG ...>\n}\n"
- pattern-not-inside: 'for _, $ARG := range $SLICE { return ... }

    '
- focus-metavariable:
  - $ARG
