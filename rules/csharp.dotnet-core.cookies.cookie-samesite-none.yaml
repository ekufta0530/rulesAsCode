id: csharp.dotnet-core.cookies.cookie-samesite-none.cookie-samesite-none
message: 'Detected a cookie options with the `SameSite` flag set to "None". This is
  a potential security risk that arises from the way web browsers manage cookies.
  In a typical web application, cookies are used to store and transmit session-related
  data between a client and a server. To enhance security, cookies can be marked with
  the "SameSite" attribute, which restricts their usage based on the origin of the
  page that set them. This attribute can have three values: "Strict," "Lax," or "None".
  Make sure the `SameSite` attribute of the important cookies (e.g., session cookie)
  is set to a reasonable value. When `SameSite` is set to "Strict", no 3rd party cookie
  will be sent with outgoing requests, this is the most secure and private setting
  but harder to deploy with good usability. Setting it to "Lax" is the minimum requirement.'
severity: INFO
metadata:
  likelihood: LOW
  impact: LOW
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-1275: Sensitive Cookie with Improper SameSite Attribute'
  functional-categories:
  - web::search::cookie-config::.net
  owasp:
  - A01:2021 - Broken Access Control
  references:
  - https://owasp.org/Top10/A01_2021-Broken_Access_Control
  - https://web.dev/articles/samesite-cookies-explained
  technology:
  - .NET
  - csharp
  - dotnet
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - Cookie Security
  source: https://semgrep.dev/r/csharp.dotnet-core.cookies.cookie-samesite-none.cookie-samesite-none
  shortlink: https://sg.run/G5np
  semgrep.dev:
    rule:
      r_id: 73404
      rv_id: 731846
      rule_id: ZqUZLN
      version_id: JdT6Y1W
      url: https://semgrep.dev/playground/r/JdT6Y1W/csharp.dotnet-core.cookies.cookie-samesite-none.cookie-samesite-none
      origin: pro_rules
languages:
- csharp
mode: taint
paths:
  include:
  - Program.cs
  - Startup.cs
  - cookie-samesite-none.cs
pattern-sources:
- pattern: SameSiteMode.None
- pattern: Microsoft.AspNetCore.Http.SameSiteMode.None
pattern-sinks:
- pattern: $S.Configure<CookieAuthenticationOptions>(...)
- pattern: $S.Configure<CookiePolicyOptions>(...)
- pattern: new CookieAuthenticationOptions(...) {...}
- pattern: new CookiePolicyOptions(...) {...}
- patterns:
  - pattern-either:
    - pattern: $X.MinimumSameSitePolicy = ...;
    - pattern: $X.SameSite = ...;
  - pattern-not-inside: new CookieAuthenticationOptions(...) {...}
  - pattern-not-inside: new CookiePolicyOptions(...) {...}
  - pattern-not-inside: $S.Configure<CookieAuthenticationOptions>(...)
  - pattern-not-inside: $S.Configure<CookiePolicyOptions>(...)
