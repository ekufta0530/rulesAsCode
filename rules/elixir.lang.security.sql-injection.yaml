id: elixir.lang.security.sql-injection.sql-injection
message: 'Untrusted input might be used to build a database query, which can lead
  to a SQL injection vulnerability. An attacker can execute malicious SQL statements
  and gain unauthorized access to sensitive data, modify, delete data, or execute
  arbitrary system commands. To prevent this vulnerability, use prepared statements
  that do not concatenate user-controllable strings and use parameterized queries
  where SQL commands and user data are strictly separated. Also, consider using an
  object-relational (ORM) framework to operate with safer abstractions. '
severity: ERROR
metadata:
  likelihood: MEDIUM
  impact: HIGH
  confidence: MEDIUM
  category: security
  subcategory:
  - vuln
  cwe:
  - 'CWE-89: Improper Neutralization of Special Elements used in an SQL Command (''SQL
    Injection'')'
  owasp:
  - A03:2021 - Injection
  references:
  - https://owasp.org/Top10/A03_2021-Injection/
  technology:
  - elixir
  license: Copyright 2023 Semgrep, Inc.
  vulnerability_class:
  - SQL Injection
  source: https://semgrep.dev/r/elixir.lang.security.sql-injection.sql-injection
  shortlink: https://sg.run/0oA8J
  semgrep.dev:
    rule:
      r_id: 114610
      rv_id: 257000
      rule_id: v8UYX4z
      version_id: YDT6qd3
      url: https://semgrep.dev/playground/r/YDT6qd3/elixir.lang.security.sql-injection.sql-injection
      origin: pro_rules
languages:
- elixir
min-version: 1.55.2
patterns:
- pattern-either:
  - patterns:
    - pattern: $SQL.$SQL_FUNCS($REPO, $QUERY_STRING)
    - pattern-not: $SQL.$SQL_FUNCS($REPO, "...")
    - pattern-not: $SQL.$SQL_FUNCS($REPO, $QUERY_STRING, $PARAMS)
    - pattern-not: $SQL.$SQL_FUNCS($REPO, $QUERY_STRING, $PARAMS, $OPTS)
    - metavariable-regex:
        metavariable: $SQL
        regex: ^((.*\.)?SQL)$
    - metavariable-regex:
        metavariable: $SQL_FUNCS
        regex: ^(query|query!|stream)$
  - patterns:
    - pattern: Repo.$REPO_FUNCS($QUERY_STRING)
    - pattern-not: Repo.$REPO_FUNCS("...")
    - pattern-not: Repo.$REPO_FUNCS($QUERY_STRING, $PARAMS)
    - pattern-not: Repo.$REPO_FUNCS($QUERY_STRING, $PARAMS, $OPTS)
    - metavariable-regex:
        metavariable: $REPO_FUNCS
        regex: ^(query|query!)$
- focus-metavariable: $QUERY_STRING
