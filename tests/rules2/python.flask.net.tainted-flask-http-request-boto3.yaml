rules:
- id: python.flask.net.tainted-flask-http-request-boto3.tainted-flask-http-request-boto3
  message: Untrusted input might be used to build an HTTP request, which can lead
    to a Server-side request forgery (SSRF) vulnerability. SSRF allows an attacker
    to send crafted requests from the server side to other internal or external systems.
    SSRF can lead to unauthorized access to sensitive data and, in some cases, allow
    the attacker to control applications or systems that trust the vulnerable service.
    To prevent this vulnerability, avoid allowing user input to craft the base request.
    Instead, treat it as part of the path or query parameter and encode it appropriately.
    When user input is necessary to prepare the HTTP request, perform strict input
    validation. Additionally, whenever possible, use allowlists to only interact with
    expected, trusted domains.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-918: Server-Side Request Forgery (SSRF)'
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - net::sink::http-request::boto3
    - net::sink::http-request::botocore
    - web::source::cookie::flask
    - web::source::form-data::flask
    - web::source::form-data::flask-wtf
    - web::source::form-data::wtforms
    - web::source::header::flask
    - web::source::http-body::flask
    - web::source::http-params::flask
    - web::source::url-path-params::flask
    owasp:
    - A10:2021 - Server-Side Request Forgery (SSRF)
    references:
    - https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29
    technology:
    - boto3
    - botocore
    - flask
    - flask-wtf
    - web
    - wtforms
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Server-Side Request Forgery (SSRF)
    source: https://semgrep.dev/r/python.flask.net.tainted-flask-http-request-boto3.tainted-flask-http-request-boto3
    shortlink: https://sg.run/j29zD
    semgrep.dev:
      rule:
        r_id: 116521
        rv_id: 524348
        rule_id: r6Uyn2D
        version_id: 6xT66ob
        url: https://semgrep.dev/playground/r/6xT66ob/python.flask.net.tainted-flask-http-request-boto3.tainted-flask-http-request-boto3
        origin: pro_rules
  languages:
  - python
  mode: taint
  options:
    interfile: true
    symbolic_propagation: true
  pattern-sources:
  - pattern-either:
    - patterns:
      - pattern: flask.request.$FUNC()
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(from_values|get_data|get_json)$
    - patterns:
      - pattern-either:
        - pattern: flask.request.$PROPERTY
        - pattern: flask.request.$PROPERTY[...]
        - pattern: flask.request.$PROPERTY.get(...)
      - metavariable-regex:
          metavariable: $PROPERTY
          regex: ^(args|cookies|data|files|form|full_path|headers|input_stream|json|path|stream|values|view_args)$
    - patterns:
      - pattern: |
          @$APP.$ROUTE
          def $FUNC(..., $PARAM, ...):
            ...
      - metavariable-regex:
          metavariable: $ROUTE
          regex: ^(endpoint)$
      - focus-metavariable: $PARAM
  - patterns:
    - pattern: |
        @$APP.$ROUTE(...)
        def $FUNC(..., $PARAM, ...):
          ...
    - metavariable-regex:
        metavariable: $ROUTE
        regex: ^(route|delete|get|patch|post|put)$
    - focus-metavariable: $PARAM
  - patterns:
    - pattern-either:
      - pattern-inside: |
          @$APP.$ROUTE(...)
          def $FUNC(...):
            ...
            $FORM = $FORMCLASS(...)
            ...
            $FORM.validate_on_submit()
            ...
      - pattern-inside: |
          @$APP.$ROUTE(...)
          def $FUNC(...):
            ...
            $FORM = $FORMCLASS(...)
            ...
            if $FORM.validate_on_submit():
              ...
            ...
    - metavariable-regex:
        metavariable: $ROUTE
        regex: ^(route|delete|get|patch|post|put|endpoint)$
    - pattern: $FORM.$FIELD.data
  pattern-propagators:
  - from: $DEFAULT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $DICT[$KEY]
            ...
        - pattern-inside: |
            $DICT.get($KEY, $DEFAULT)
            ...
        - pattern-inside: |
            $DICT = { ... }
            ...
        - pattern-inside: |
            $DICT = dict(...)
            ...
      - pattern-either:
        - pattern: $DICT.get($FIELD, $DEFAULT)
        - pattern: $DICT.setdefault($KEY, $DEFAULT)
    to: $DICT
  - from: $FROM_DICT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $TO_DICT[$KEY]
            ...
        - pattern-inside: |
            $TO_DICT.get($KEY, $DEFAULT)
            ...
        - pattern-inside: |
            $TO_DICT = { ... }
            ...
        - pattern-inside: |
            $TO_DICT = dict(...)
            ...
        - pattern-inside: |
            $FROM_DICT[$KEY]
            ...
        - pattern-inside: |
            $FROM_DICT.get($KEY, $DEFAULT)
            ...
        - pattern-inside: |
            $FROM_DICT = { ... }
            ...
        - pattern-inside: |
            $FROM_DICT = dict(...)
            ...
      - pattern-either:
        - pattern: $TO_DICT.update($FROM_DICT)
        - pattern: $TO_DICT | $FROM_DICT
        - pattern: $TO_DICT |= $FROM_DICT
    to: $TO_DICT
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $LIST = [ ... ]
            ...
        - pattern-inside: |
            $LIST = list(...)
            ...
      - pattern-either:
        - pattern: $LIST.append($FROM)
        - pattern: $LIST.extend($FROM)
        - pattern: $LIST.insert($INDEX, $FROM)
    to: $LIST
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $SET = { $ITEM, ... }
            ...
        - pattern-inside: |
            $SET = set(...)
            ...
        - pattern-inside: |
            $OTHERSET = { $ITEM, ... }
            ...
        - pattern-inside: |
            $OTHERSET = set(...)
            ...
      - pattern-either:
        - pattern: $SET.update(..., $FROM, ...)
        - pattern: $SET.intersection_update(..., $FROM, ...)
        - pattern: $SET.difference_update(..., $FROM, ...)
        - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
        - pattern: $SET.add($FROM)
        - pattern: $SET |= $FROM
        - pattern: $SET &= $FROM
        - pattern: $SET -= $FROM
        - pattern: $SET ^= $FROM
    to: $SET
  - from: $FORM
    patterns:
    - pattern: $FORM.populate_obj($OBJ)
    to: $OBJ
  - from: $URL
    label: USER_INPUT
    patterns:
    - patterns:
      - pattern: $REQUEST.prepare_url($URL, $PARAMS)
    requires: USER_INPUT
    to: $REQUEST
  - from: $SESSION
    label: SESSION
    patterns:
    - patterns:
      - pattern-either:
        - patterns:
          - pattern-either:
            - pattern: $SESSION.$FUNC($URL, ...)
            - pattern: $SESSION.$FUNC(..., url=$URL, ...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: ^(delete|get|head|options|patch|post|put)
        - pattern-either:
          - pattern: $SESSION.request($METHOD, $URL, ...)
          - pattern: $SESSION.request(..., url=$URL, ...)
          - pattern: $SESSION.send($URL, ...)
          - pattern: $SESSION.send(..., request=$URL, ...)
    requires: SESSION
    to: $URL
  - from: $URL
    label: USER_INPUT
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $OBJ.set_tunnel($URL)
        - pattern: $OBJ.set_tunnel(host=$URL)
    requires: USER_INPUT
    to: $OBJ
  - from: $OBJ
    label: CONNECTION_OBJECT
    patterns:
    - patterns:
      - pattern-either:
        - patterns:
          - pattern-either:
            - pattern: $OBJ.$FUNC($METHOD, $URL, ...)
            - pattern: $OBJ.$FUNC(..., url=$URL, ...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: ^(request|urlopen|request_chunked)$
        - patterns:
          - pattern-either:
            - pattern: $OBJ.$FUNC($URL, ...)
            - pattern: $OBJ.$FUNC(..., $ARG=$URL, ...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: ^(connection_from_host|connection_from_url)$
          - metavariable-regex:
              metavariable: $ARG
              regex: ^(host|url)$
    requires: CONNECTION_OBJECT
    to: $URL
  - from: $OBJ
    label: USER_INPUT
    patterns:
    - patterns:
      - pattern-either:
        - patterns:
          - pattern-either:
            - pattern: $OBJ.$FUNC($METHOD, $URL, ...)
            - pattern: $OBJ.$FUNC(..., url=$URL, ...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: ^(request|urlopen|request_chunked)$
        - patterns:
          - pattern-either:
            - pattern: $OBJ.$FUNC($URL, ...)
            - pattern: $OBJ.$FUNC(..., $ARG=$URL, ...)
          - metavariable-regex:
              metavariable: $FUNC
              regex: ^(connection_from_host|connection_from_url)$
          - metavariable-regex:
              metavariable: $ARG
              regex: ^(host|url)$
    requires: USER_INPUT
    to: $URL
  - from: $SESSION
    label: CLIENTSESSION
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $SESSION.$FUNC(..., $URL, ...)
        - pattern: $SESSION.$FUNC(..., url=$URL, ...)
        - pattern: $SESSION.$FUNC(..., str_or_url=$URL, ...)
    requires: CLIENTSESSION
    to: $URL
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: boto3.client(..., config=$SINK, ...)
      - pattern: botocore.awsrequest.AWSPreparedRequest($METHOD, $SINK, ...)
      - pattern: botocore.awsrequest.AWSPreparedRequest(..., url=$SINK, ...)
    - focus-metavariable: $SINK
  - patterns:
    - pattern-either:
      - pattern: $OBJ.client(..., endpoint_url=$SINK, ...)
      - pattern: $OBJ.create_client(..., endpoint_url=$SINK, ...)
    - focus-metavariable: $SINK
  pattern-sanitizers:
  - patterns:
    - pattern-either:
      - pattern: int(...)
      - pattern: bool(...)
      - pattern: float(...)
      - pattern: complex(...)
      - pattern: oct(...)
      - pattern: hex(...)
      - pattern: bin(...)
      - pattern: round(...)
      - pattern: id(...)
      - pattern: hash(...)
      - pattern: len(...)
      - pattern: type(...)
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $DICT[$KEY]
          ...
      - pattern-inside: |
          $DICT = { $KEY: $VALUE for ... in ...}
          ...
      - pattern-inside: |
          $DICT.get($KEY, $DEFAULT)
          ...
      - pattern-inside: |
          $DICT = { }
          ...
      - pattern-inside: |
          $DICT = { $KEY: $VALUE, ... }
          ...
      - pattern-inside: |
          $DICT = dict(...)
          ...
    - pattern-either:
      - pattern: $DICT.clear()
      - pattern: $DICT.len()
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $LIST = [ ... ]
          ...
      - pattern-inside: |
          $LIST = list(...)
          ...
    - pattern-either:
      - pattern: $LIST.clear()
      - pattern: $LIST.count(...)
      - pattern: $LIST.index(...)
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $SET = { $ITEM, ... }
          ...
      - pattern-inside: |
          $SET = set(...)
          ...
    - pattern-either:
      - pattern: $SET.len()
      - pattern: $SET.clear()
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $SET = { $ITEM, ... }
          ...
      - pattern-inside: |
          $SET = { $ITEM for ... in ...}
          ...
      - pattern-inside: |
          $SET = set(...)
          ...
      - pattern-inside: |
          $SET = frozenset(...)
          ...
      - pattern-inside: |
          $OTHERSET = { $ITEM, ... }
          ...
      - pattern-inside: |
          $OTHERSET = set(...)
          ...
    - pattern-either:
      - pattern: $SET.isdisjoint($OTHERSET)
      - pattern: $SET.issubset($OTHERSET)
      - pattern: $SET < $OTHERSET
      - pattern: $SET <= $OTHERSET
      - pattern: $SET.issuperset($OTHERSET)
      - pattern: $SET > $OTHERSET
      - pattern: $SET >= $OTHERSET
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $TUPLE = ( $ITEM, ... )
          ...
      - pattern-inside: |
          $TUPLE = $ITEM, ...
          ...
      - pattern-inside: |
          $TUPLE = tuple(...)
          ...
    - pattern-either:
      - pattern: $TUPLE.len()
  - pattern: urllib.parse.urlencode(...)
  - pattern: urllib.parse.quote(...)
  - pattern: urllib.parse.quote_plus(...)
  - pattern: urllib.urlencode(...)
  - pattern: urllib.quote(...)
  - pattern: urllib.quote_plus(...)
