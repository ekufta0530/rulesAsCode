rules:
- id: rust.hyper.nosql.mongodb-taint.mongodb-taint
  message: Untrusted input might be used to build a database query, which can lead
    to a NoSQL injection vulnerability. An attacker can execute malicious NoSQL statements
    and gain unauthorized access to sensitive data, modify, delete data, or execute
    arbitrary system commands. Make sure all user input is validated and sanitized,
    and avoid using tainted user input to construct NoSQL statements if possible.
    Ideally, avoid raw queries and instead use parameterized queries.
  severity: ERROR
  metadata:
    likelihood: HIGH
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-943: Improper Neutralization of Special Elements in Data Query Logic'
    functional-categories:
    - db::sink::sql-or-nosql-query::actix_web
    - db::sink::sql-or-nosql-query::mongodb
    - web::source::header::hyper
    - web::source::http-body::hyper
    - web::source::http-params::hyper
    - web::source::url-path-params::hyper
    owasp:
    - A01:2017 - Injection
    references:
    - https://docs.rs/mongodb/latest/mongodb/
    - https://owasp.org/Top10/A03_2021-Injection
    technology:
    - hyper
    - mongodb
    - rust
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Improper Validation
    source: https://semgrep.dev/r/rust.hyper.nosql.mongodb-taint.mongodb-taint
    shortlink: https://sg.run/Pj5v
    semgrep.dev:
      rule:
        r_id: 63201
        rv_id: 229341
        rule_id: v8UyEo
        version_id: w8T6X0D
        url: https://semgrep.dev/playground/r/w8T6X0D/rust.hyper.nosql.mongodb-taint.mongodb-taint
        origin: pro_rules
  languages:
  - rust
  mode: taint
  pattern-sources:
  - label: REQUEST
    patterns:
    - pattern: $REQ
    - pattern-either:
      - pattern-inside: |
          fn $FN_NAME(..., $REQ: hyper::Request<hyper::body::Incoming>, ...) {
            ...
          }
      - pattern-inside: |
          fn $FN_NAME(..., $REQ: hyper::Request<hyper::body::Body>, ...) {
            ...
          }
      - pattern-inside: |
          fn $FN_NAME(..., $REQ: hyper::Request<hyper::Body>, ...) {
            ...
          }
  - label: USER_INPUT
    patterns:
    - pattern-either:
      - pattern: $R.body()
      - pattern: $R.body_mut()
      - pattern: $R.into_body()
      - pattern: $R.headers
      - pattern: $R.headers_mut()
      - pattern: $R.query()
      - pattern: $R.path()
      - pattern: $R.path_and_query()
      - pattern: $R.collect()
  - label: CONCAT
    patterns:
    - pattern-either:
      - pattern: |
          "..." + ...
      - pattern: '... + "..."'
      - pattern: $STR.push_str(...)
      - pattern: format!(...)
      - pattern: std::fmt::format(...)
  pattern-propagators:
  - from: $FROM
    patterns:
    - pattern: $TO.push_str($FROM)
    to: $TO
  - from: $FROM
    patterns:
    - patterns:
      - pattern: $TO.$FUNC(..., $FROM)
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(insert_str|replace_range)$
    to: $TO
  - from: $FROM
    patterns:
    - patterns:
      - pattern: $FROM.$FUNC(&$TO)
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(Decode|DecodeBytes|UnmarshalBSON|All)$
    to: $TO
  - from: $FROM
    patterns:
    - pattern: $TO = $FROM.into()
    to: $TO
  - from: $FROM
    patterns:
    - pattern: $TO = std::from_utf8($FROM)
    to: $TO
  - from: $FROM
    patterns:
    - pattern: |
        let $TO = if let $SOME = $FROM {
          ...
        } else {
          ...
        };
    to: $TO
  pattern-sinks:
  - patterns:
    - focus-metavariable: $QUERY
    - pattern-either:
      - pattern: |
          ($COL: mongodb::Collection<$T>).$METHOD($QUERY,...)
      - pattern: |
          ($COL: actix_web::web::Data<mongodb::Collection<$T>>).$METHOD($QUERY,...)
    - metavariable-pattern:
        metavariable: $METHOD
        patterns:
        - pattern-either:
          - pattern: aggregate
          - pattern: aggregate_with_session
          - pattern: find
          - pattern: find_one
          - pattern: find_one_and_delete
          - pattern: find_one_and_delete_with_session
          - pattern: find_one_and_replace
          - pattern: find_one_and_replace_with_session
          - pattern: find_one_and_update
          - pattern: find_one_and_update_with_session
          - pattern: find_one_with_session
          - pattern: find_with_session
    requires: REQUEST and USER_INPUT and CONCAT
