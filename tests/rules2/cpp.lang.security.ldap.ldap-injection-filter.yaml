rules:
- id: cpp.lang.security.ldap.ldap-injection-filter.ldap-injection-filter
  message: Untrusted input might be used to build an LDAP query, which can allow attackers
    to run arbitrary LDAP queries. If an LDAP query must contain untrusted input then
    it must be escaped.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cert:
    - C
    - C++
    - L1
    - STR02-C
    cwe:
    - 'CWE-90: Improper Neutralization of Special Elements used in an LDAP Query (''LDAP
      Injection'')'
    functional-categories:
    - ldap::sink::ldap-query
    - os::source::console
    - os::source::environment
    - web::source::http-body
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    - https://wiki.sei.cmu.edu/confluence/display/c/STR02-C.+Sanitize+data+passed+to+complex+subsystems
    technology:
    - cpp
    - ldap
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - LDAP Injection
    source: https://semgrep.dev/r/cpp.lang.security.ldap.ldap-injection-filter.ldap-injection-filter
    shortlink: https://sg.run/yyGkr
    semgrep.dev:
      rule:
        r_id: 114768
        rv_id: 257379
        rule_id: v8UYXNL
        version_id: vdTpr2K
        url: https://semgrep.dev/playground/r/vdTpr2K/cpp.lang.security.ldap.ldap-injection-filter.ldap-injection-filter
        origin: pro_rules
  languages:
  - cpp
  - c
  mode: taint
  min-version: 1.59.0
  options:
    interfile: true
  pattern-sources:
  - patterns:
    - pattern: |
        int main(int $ARGC, $ARGV_TY $ARGV, $ENVP_TY $ENVP) {
          ...
        }
    - focus-metavariable: $ENVP
  - patterns:
    - pattern: |
        int main(int $ARGC, $ARGV_TY $ARGV, ...) {
          ...
        }
    - focus-metavariable: $ARGV
  - pattern-either:
    - pattern: getenv(...)
    - pattern: std::getenv(...)
    - pattern: readline()
  - by-side-effect: only
    patterns:
    - pattern-either:
      - pattern: gets($SRC)
      - pattern: fread($SRC, ...)
      - pattern: fgets($SRC, ...)
      - pattern: getline($SRC, ...)
      - pattern: getdelim($SRC, ...)
      - pattern: read($S_OR_FP, $SRC, ...)
      - pattern: msgrcv($QID, $SRC, ...)
    - focus-metavariable: $SRC
  - pattern: gets(...)
  - by-side-effect: only
    patterns:
    - pattern-either:
      - pattern: $X.get($SRC, ...)
      - pattern: $X.getline($SRC, ...)
      - pattern: $X.read($SRC, ...)
      - pattern: $X.readsome($SRC, ...)
    - metavariable-type:
        metavariable: $X
        types:
        - basic_ifstream<$TYPE>
        - std::basic_ifstream<$TYPE>
        - ifstream
        - std::ifstream
        - wifstream
        - std::wifstream
        - basic_ofstream<$TYPE>
        - std::basic_ofstream<$TYPE>
        - ofstream
        - std::ofstream
        - wofstream
        - std::wofstream
        - basic_fstream<$TYPE>
        - std::basic_fstream<$TYPE>
        - fstream
        - std::fstream
        - wfstream
        - std::wfstream
        - basic_filebuf<$TYPE>
        - std::basic_filebuf<$TYPE>
        - filebuf
        - std::filebuf
        - wfilebuf
        - std::wfilebuf
    - focus-metavariable: $SRC
  - by-side-effect: only
    patterns:
    - pattern-either:
      - pattern: recv($S, $SRC, ...)
      - pattern: recvfrom($S, $SRC, ...)
      - pattern: recvmsg($S, $SRC, ...)
      - patterns:
        - pattern: curl_easy_setopt($CURL, CURLOPT_WRITEDATA, $SRC)
        - pattern-not: curl_easy_setopt($CURL, CURLOPT_WRITEDATA, $CURL)
    - focus-metavariable: $SRC
  - pattern: mysql_fetch_row(...)
  - by-side-effect: only
    patterns:
    - pattern: mysql_fetch_row_nonblocking($RESULT, &$ROW)
    - focus-metavariable: $ROW
  - patterns:
    - pattern: $WT->body()
    - metavariable-type:
        metavariable: $WT
        types:
        - Wt::Http::Message*
        - Http::Message*
        - Wt::Mail::Message*
        - Mail::Message*
  pattern-propagators:
  - from: $FROM
    patterns:
    - pattern-either:
      - pattern: memccpy($TO, $FROM, ...)
      - pattern: memcpy($TO, $FROM, ...)
      - pattern: memcpy_s($TO, $TO_SIZE, $FROM, ...)
      - pattern: memmove($TO, $FROM, ...)
      - pattern: memmove_s($TO, $TO_SIZE, $FROM, ...)
      - pattern: snprintf($TO, $SIZE, $FORMAT, ..., $FROM, ...)
      - pattern: sprintf($TO, $FORMAT, ..., $FROM, ...)
      - pattern: stpcpy($TO, $FROM)
      - pattern: stpncpy($TO, $FROM, ...)
      - pattern: strcat($TO, $FROM)
      - pattern: strcpy($TO, $FROM)
      - pattern: strcpy_s($TO, $SIZE, $FROM)
      - pattern: strlcat($TO, $FROM, ...)
      - pattern: strlcpy($TO, $FROM, ...)
      - pattern: strncat($TO, $FROM, ...)
      - pattern: strncpy($TO, $FROM, ...)
      - pattern: strncpy_s($TO, $TO_SIZE, $FROM, ...)
      - pattern: strxfrm($TO, $FROM, ...)
    to: $TO
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $TO.append(..., $FROM, ...)
        - pattern: $TO.append_range($FROM)
        - pattern: $TO.assign($FROM, ...)
        - pattern: $TO.assign_range($FROM)
        - pattern: $TO.insert(..., $FROM, ...)
        - pattern: $TO.insert_range($POSITION, $FROM)
        - pattern: $TO.replace(..., $FROM, ...)
        - pattern: $TO.replace_with_range($FIRST, $LAST, $FROM)
        - pattern: $FROM.copy($TO, ...)
      - metavariable-type:
          metavariable: $TO
          types:
          - basic_string<$TYPE>
          - std::basic_string<$TYPE>
          - string
          - std::string
          - wstring
          - std::wstring
    to: $TO
  - from: $FROM
    patterns:
    - pattern-either:
      - patterns:
        - pattern: $TO.open($FROM, ...)
        - metavariable-type:
            metavariable: $TO
            types:
            - basic_ifstream<$TYPE>
            - std::basic_ifstream<$TYPE>
            - ifstream
            - std::ifstream
            - wifstream
            - std::wifstream
            - basic_ofstream<$TYPE>
            - std::basic_ofstream<$TYPE>
            - ofstream
            - std::ofstream
            - wofstream
            - std::wofstream
            - basic_fstream<$TYPE>
            - std::basic_fstream<$TYPE>
            - fstream
            - std::fstream
            - wfstream
            - std::wfstream
            - basic_filebuf<$TYPE>
            - std::basic_filebuf<$TYPE>
            - filebuf
            - std::filebuf
            - wfilebuf
            - std::wfilebuf
      - patterns:
        - pattern-either:
          - pattern: $FROM.get($TO, ...)
          - pattern: $FROM.getline($TO, ...)
          - pattern: $FROM.read($TO, ...)
          - pattern: $FROM.readsome($TO, ...)
        - metavariable-type:
            metavariable: $FROM
            types:
            - basic_ifstream<$TYPE>
            - std::basic_ifstream<$TYPE>
            - ifstream
            - std::ifstream
            - wifstream
            - std::wifstream
            - basic_ofstream<$TYPE>
            - std::basic_ofstream<$TYPE>
            - ofstream
            - std::ofstream
            - wofstream
            - std::wofstream
            - basic_fstream<$TYPE>
            - std::basic_fstream<$TYPE>
            - fstream
            - std::fstream
            - wfstream
            - std::wfstream
            - basic_filebuf<$TYPE>
            - std::basic_filebuf<$TYPE>
            - filebuf
            - std::filebuf
            - wfilebuf
            - std::wfilebuf
    to: $TO
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $FROM >> $TO
        - pattern: $FROM >> $_1 >> $TO
        - pattern: $FROM >> $_1 >> $_2 >> $TO
        - pattern: $FROM >> $_1 >> $_2 >> $_3 >> $TO
        - pattern: $FROM >> $_1 >> $_2 >> $_3 >> $_4 >> $TO
      - metavariable-type:
          metavariable: $FROM
          types:
          - basic_ifstream<$TYPE>
          - std::basic_ifstream<$TYPE>
          - ifstream
          - std::ifstream
          - wifstream
          - std::wifstream
          - basic_ofstream<$TYPE>
          - std::basic_ofstream<$TYPE>
          - ofstream
          - std::ofstream
          - wofstream
          - std::wofstream
          - basic_fstream<$TYPE>
          - std::basic_fstream<$TYPE>
          - fstream
          - std::fstream
          - wfstream
          - std::wfstream
          - basic_filebuf<$TYPE>
          - std::basic_filebuf<$TYPE>
          - filebuf
          - std::filebuf
          - wfilebuf
          - std::wfilebuf
          - basic_istringstream<$TYPE>
          - std::basic_istringstream<$TYPE>
          - istringstream
          - std::istringstream
          - wistringstream
          - std::wistringstream
          - basic_ostringstream<$TYPE>
          - std::basic_ostringstream<$TYPE>
          - ostringstream
          - std::ostringstream
          - wostringstream
          - std::wostringstream
          - basic_stringstream<$TYPE>
          - std::basic_stringstream<$TYPE>
          - stringstream
          - std::stringstream
          - wstringstream
          - std::wstringstream
    to: $TO
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern: $TO << $FROM
        - pattern: $TO << $_1 << $FROM
        - pattern: $TO << $_1 << $_2 << $FROM
        - pattern: $TO << $_1 << $_2 << $_3 << $FROM
        - pattern: $TO << $_1 << $_2 << $_3 << $_4 << $FROM
      - metavariable-type:
          metavariable: $TO
          types:
          - basic_ifstream<$TYPE>
          - std::basic_ifstream<$TYPE>
          - ifstream
          - std::ifstream
          - wifstream
          - std::wifstream
          - basic_ofstream<$TYPE>
          - std::basic_ofstream<$TYPE>
          - ofstream
          - std::ofstream
          - wofstream
          - std::wofstream
          - basic_fstream<$TYPE>
          - std::basic_fstream<$TYPE>
          - fstream
          - std::fstream
          - wfstream
          - std::wfstream
          - basic_filebuf<$TYPE>
          - std::basic_filebuf<$TYPE>
          - filebuf
          - std::filebuf
          - wfilebuf
          - std::wfilebuf
          - basic_istringstream<$TYPE>
          - std::basic_istringstream<$TYPE>
          - istringstream
          - std::istringstream
          - wistringstream
          - std::wistringstream
          - basic_ostringstream<$TYPE>
          - std::basic_ostringstream<$TYPE>
          - ostringstream
          - std::ostringstream
          - wostringstream
          - std::wostringstream
          - basic_stringstream<$TYPE>
          - std::basic_stringstream<$TYPE>
          - stringstream
          - std::stringstream
          - wstringstream
          - std::wstringstream
    to: $TO
  pattern-sinks:
  - patterns:
    - pattern-inside: |
        $RET $FUNC(...) {
          ...
        }
    - patterns:
      - pattern-either:
        - pattern: ldap_search($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_s($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_st($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_cache_flush($ARG1, $ARG2, $SRC, ...)
        - pattern: ldap_search_ext($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_ext_s($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_ext_sA($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_ext_sW($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_extA($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_extW($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_init_page($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_init_pageA($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_init_pageW($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_searchA($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_searchW($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_stA($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_stW($ARG1, $ARG2, $ARG3, $SRC, ...)
        - pattern: ldap_search_sW($ARG1, $ARG2, $ARG3, $SRC, ...)
      - focus-metavariable: $SRC
