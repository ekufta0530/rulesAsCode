rules:
- id: go.secrets.ssh.ssh-empty-password.ssh-empty-password
  message: The application uses an empty credential. This can lead to unauthorized
    access by either an internal or external malicious actor. It is recommended to
    rotate the secret and retrieve them from a secure secret vault or Hardware Security
    Module (HSM), alternatively environment variables can be used if allowed by your
    company policy.
  severity: WARNING
  metadata:
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-287: Improper Authentication'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    owasp:
    - A02:2017 - Broken Authentication
    - A07:2021 - Identification and Authentication Failures
    references:
    - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
    technology:
    - go
    - golang.org/x/crypto/ssh
    - ssh
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Improper Authentication
    source: https://semgrep.dev/r/go.secrets.ssh.ssh-empty-password.ssh-empty-password
    shortlink: https://sg.run/3P8G
    semgrep.dev:
      rule:
        r_id: 58443
        rv_id: 731897
        rule_id: 10U65o
        version_id: WrTNAOW
        url: https://semgrep.dev/playground/r/WrTNAOW/go.secrets.ssh.ssh-empty-password.ssh-empty-password
        origin: pro_rules
  languages:
  - go
  mode: taint
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern-inside: |
          import "golang.org/x/crypto/ssh"
          ...
      - pattern-inside: |
          import "golang.org/x/crypto/ssh/knownhosts"
          ...
    - pattern: ssh.Password("")
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern-inside: |
          import "golang.org/x/crypto/ssh"
          ...
      - pattern-inside: |
          import "golang.org/x/crypto/ssh/knownhosts"
          ...
    - pattern: ssh.Dial($TPC, $IP, $CONF)
    - focus-metavariable: $CONF
