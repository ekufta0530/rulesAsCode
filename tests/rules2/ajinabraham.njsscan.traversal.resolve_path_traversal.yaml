rules:
- id: ajinabraham.njsscan.traversal.resolve_path_traversal.join_resolve_path_traversal
  patterns:
  - pattern-inside: |
      require('path')
      ...
  - pattern-either:
    - pattern-inside: function ($REQ, $RES, ...) {...}
    - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: $X = function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
    - pattern-inside: $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
  - pattern-either:
    - pattern: $PATH.join(...,<... $REQ.$BODY ...>,...)
    - pattern: $PATH.join(...,<... $REQ.$QUERY.$FOO ...>,...)
    - pattern: |
        $VAR = <... $REQ.$BODY ...>;
        ...
        $PATH.join(...,<... $VAR ...>,...)
    - pattern: |
        $VAR = <... $REQ.$QUERY.$FOO ...>;
        ...
        $PATH.join(...,<... $VAR ...>,...)
    - pattern: $PATH.resolve(...,<... $REQ.$BODY ...>,...)
    - pattern: $PATH.resolve(...,<... $REQ.$QUERY.$FOO ...>,...)
    - pattern: |
        $VAR = <... $REQ.$BODY ...>;
        ...
        $PATH.resolve(...,<... $VAR ...>,...)
    - pattern: |-
        $VAR = <... $REQ.$QUERY.$FOO ...>;
        ...
        $PATH.resolve(...,<... $VAR ...>,...)
  message: 'Path constructed with user input can result in Path Traversal. Ensure
    that user input does not reach `join()` or `resolve()`. '
  languages:
  - javascript
  metadata:
    owasp-web: a5
    cwe: cwe-22
    license: LGPL-3.0-or-later
    vulnerability_class:
    - Other
    source: https://semgrep.dev/r/ajinabraham.njsscan.traversal.resolve_path_traversal.join_resolve_path_traversal
    shortlink: https://sg.run/PxEY
    semgrep.dev:
      rule:
        r_id: 43701
        rv_id: 78305
        rule_id: bwUJDB
        version_id: e1T6G5
        url: https://semgrep.dev/playground/r/e1T6G5/ajinabraham.njsscan.traversal.resolve_path_traversal.join_resolve_path_traversal
        origin: community
  severity: WARNING
