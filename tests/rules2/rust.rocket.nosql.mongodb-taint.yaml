rules:
- id: rust.rocket.nosql.mongodb-taint.mongodb-taint
  message: Untrusted input might be used to build a database query, which can lead
    to a NoSQL injection vulnerability. An attacker can execute malicious NoSQL statements
    and gain unauthorized access to sensitive data, modify, delete data, or execute
    arbitrary system commands. Make sure all user input is validated and sanitized,
    and avoid using tainted user input to construct NoSQL statements if possible.
    Ideally, avoid raw queries and instead use parameterized queries.
  severity: ERROR
  metadata:
    likelihood: HIGH
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-943: Improper Neutralization of Special Elements in Data Query Logic'
    functional-categories:
    - db::sink::sql-or-nosql-query::actix_web
    - db::sink::sql-or-nosql-query::mongodb
    - web::source::cookie::rocket
    - web::source::form-data::rocket
    - web::source::header::rocket
    - web::source::http-body::rocket
    - web::source::http-params::rocket
    - web::source::url-path-params::rocket
    owasp:
    - A01:2017 - Injection
    references:
    - https://docs.rs/mongodb/latest/mongodb/
    - https://owasp.org/Top10/A03_2021-Injection
    technology:
    - mongodb
    - rocket
    - rust
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Improper Validation
    source: https://semgrep.dev/r/rust.rocket.nosql.mongodb-taint.mongodb-taint
    shortlink: https://sg.run/BBzR
    semgrep.dev:
      rule:
        r_id: 63207
        rv_id: 229349
        rule_id: L1UvnL
        version_id: ExTR7Yd
        url: https://semgrep.dev/playground/r/ExTR7Yd/rust.rocket.nosql.mongodb-taint.mongodb-taint
        origin: pro_rules
  languages:
  - rust
  mode: taint
  pattern-sources:
  - label: INPUT
    pattern-either:
    - patterns:
      - pattern: $PARAM
      - pattern-either:
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : rocket::request::Form<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : rocket::http::Cookies, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &rocket::http::CookieJar<'$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : rocket::serde::json::Json<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : String, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &str, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &RawStr, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &OsStr, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : OsString, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<String>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&str>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&RawStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&OsStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<OsString>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<rocket::request::Form<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<rocket::http::Cookies>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&rocket::http::CookieJar<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<rocket::serde::json::Json<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<String>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&str>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&RawStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&OsStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<OsString>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<String>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&str>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&RawStr>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&OsStr>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<OsString>>, ...) {
              ...
            }
      - metavariable-regex:
          metavariable: $METHOD
          regex: ^(get|put|post|delete|head|patch|options)$
    - patterns:
      - pattern: $PARAM
      - pattern-either:
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : $TYPE, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : $TYPE<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : $TYPE<'$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &$TYPE, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &$TYPE<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &$TYPE<'$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<$TYPE>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<$TYPE<$T>>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<$TYPE<'$T>>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&$TYPE>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&$TYPE<$T>>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&$TYPE<'$T>>>, ...) {
              ...
            }
      - pattern-inside: |
          struct $TYPE { ... };
          ...
      - metavariable-regex:
          metavariable: $METHOD
          regex: ^(get|put|post|delete|head|patch|options)$
  - label: REQUEST
    patterns:
    - pattern-either:
      - pattern-inside: |
          fn $FUNC(..., $REQ : &'r rocket::Request<'_>, ...) {
            ...
          }
      - pattern-inside: |
          fn $FUNC(..., $REQ : &'r rocket::request::Request<'_>, ...) {
            ...
          }
      - pattern-inside: |
          fn $FUNC(..., $REQ : &rocket::Request, ...) {
            ...
          }
      - pattern-inside: |
          fn $FUNC(..., $REQ : &rocket::request::Request, ...) {
            ...
          }
  - label: REQ_INPUT
    patterns:
    - pattern-either:
      - pattern: $R.path()
      - pattern: $R.query()
      - pattern: $R.map_path()
      - pattern: $R.clear_query()
      - pattern: $R.cookies()
      - pattern: $R.headers()
      - pattern: $R.query_value
  - label: CONCAT
    patterns:
    - pattern-either:
      - pattern: |
          "..." + ...
      - pattern: '... + "..."'
      - pattern: $STR.push_str(...)
      - pattern: format!(...)
      - pattern: std::fmt::format(...)
  pattern-propagators:
  - from: $FROM
    patterns:
    - pattern: $TO.push_str($FROM)
    to: $TO
  - from: $FROM
    patterns:
    - patterns:
      - pattern: $TO.$FUNC(..., $FROM)
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(insert_str|replace_range)$
    to: $TO
  - from: $FROM
    patterns:
    - patterns:
      - pattern: $FROM.$FUNC(&$TO)
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(Decode|DecodeBytes|UnmarshalBSON|All)$
    to: $TO
  - from: $FROM
    patterns:
    - pattern: $TO = $FROM.into()
    to: $TO
  - from: $FROM
    patterns:
    - pattern: $TO = std::from_utf8($FROM)
    to: $TO
  - from: $FROM
    patterns:
    - pattern: |
        let $TO = if let $SOME = $FROM {
          ...
        } else {
          ...
        };
    to: $TO
  pattern-sinks:
  - patterns:
    - focus-metavariable: $QUERY
    - pattern-either:
      - pattern: |
          ($COL: mongodb::Collection<$T>).$METHOD($QUERY,...)
      - pattern: |
          ($COL: actix_web::web::Data<mongodb::Collection<$T>>).$METHOD($QUERY,...)
    - metavariable-pattern:
        metavariable: $METHOD
        patterns:
        - pattern-either:
          - pattern: aggregate
          - pattern: aggregate_with_session
          - pattern: find
          - pattern: find_one
          - pattern: find_one_and_delete
          - pattern: find_one_and_delete_with_session
          - pattern: find_one_and_replace
          - pattern: find_one_and_replace_with_session
          - pattern: find_one_and_update
          - pattern: find_one_and_update_with_session
          - pattern: find_one_with_session
          - pattern: find_with_session
    requires: (INPUT and CONCAT) or (REQUEST and REQ_INPUT and CONCAT)
