rules:
- id: go.gin.ssrf.gin-tainted-url-host.gin-tainted-url-host
  message: Untrusted input might be used to build an HTTP request, which can lead
    to a Server-side request forgery (SSRF) vulnerability. SSRF allows an attacker
    to send crafted requests from the server side to other internal or external systems.
    SSRF can lead to unauthorized access to sensitive data and, in some cases, allow
    the attacker to control applications or systems that trust the vulnerable service.
    To prevent this vulnerability, avoid allowing user input to craft the base request.
    Instead, treat it as part of the path or query parameter and encode it appropriately.
    When user input is necessary to prepare the HTTP request, perform strict input
    validation. Additionally, whenever possible, use allowlists to only interact with
    expected, trusted domains.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    interfile: true
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-918: Server-Side Request Forgery (SSRF)'
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - web::sink::http-request::net/http
    - web::sink::redirect::net/http
    - web::source::cookie::gin
    - web::source::form-data::gin
    - web::source::header::gin
    - web::source::http-body::gin
    - web::source::http-params::gin
    - web::source::url-path-params::gin
    owasp:
    - A10:2021 - Server-Side Request Forgery (SSRF)
    references:
    - https://goteleport.com/blog/ssrf-attacks/
    - https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29
    technology:
    - gin
    - gin-gonic/gin
    - go
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Server-Side Request Forgery (SSRF)
    source: https://semgrep.dev/r/go.gin.ssrf.gin-tainted-url-host.gin-tainted-url-host
    shortlink: https://sg.run/248B
    semgrep.dev:
      rule:
        r_id: 58419
        rv_id: 731857
        rule_id: QrUPd9
        version_id: l4TWA4d
        url: https://semgrep.dev/playground/r/l4TWA4d/go.gin.ssrf.gin-tainted-url-host.gin-tainted-url-host
        origin: pro_rules
  languages:
  - go
  mode: taint
  pattern-sources:
  - label: INPUT
    patterns:
    - pattern-inside: |
        import "github.com/gin-gonic/gin"
        ...
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: |
              ($CONTEXT : gin.Context).$FIELD
          - pattern: |
              ($CONTEXT : *gin.Context).$FIELD
        - metavariable-regex:
            metavariable: $FIELD
            regex: ^(Cookie|DefaultPostForm|DefaultQuery|FormFile|GetHeader|GetPostForm|GetPostFormArray|GetPostFormMap|GetQuery|GetQueryArray|GetQueryMap|GetRawData|MultipartForm|Param|Params|PostForm|PostFormArray|PostFormMap|Query|QueryArray|QueryMap)$
      - pattern-either:
        - pattern: |
            ($CONTEXT : gin.Context).Request.URL.Query().Get(...)
        - pattern: |
            ($CONTEXT : *gin.Context).Request.URL.Query().Get(...)
  - label: FORMAT
    patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: fmt.Fprintf($F, "$URLSTR", $INPUT, ...)
          - pattern: fmt.Sprintf("$URLSTR", $INPUT, ...)
          - pattern: fmt.Printf("$URLSTR", $INPUT, ...)
        - metavariable-regex:
            metavariable: $URLSTR
            regex: ^((http://)|(https://)|(//))%(v|s|q).*
    - focus-metavariable: $INPUT
    requires: INPUT
  - label: ADD_OR_DIRECT
    patterns:
    - pattern-either:
      - pattern: $X + $F
      - pattern: $X
    - focus-metavariable: $X
    - pattern-not-inside: |
        fmt.Printf(...)
        ...
    - pattern-not-inside: |
        fmt.Sprintf(...)
        ...
    - pattern-not-inside: |
        fmt.Fprintf(...)
        ...
    requires: INPUT
  pattern-sinks:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - patterns:
            - pattern-inside: |
                $CLIENT := &http.Client{...}
                ...
            - pattern: $CLIENT.$METHOD($URL, ...)
          - pattern: http.$METHOD($URL, ...)
        - metavariable-regex:
            metavariable: $METHOD
            regex: ^(Get|Head|Post|PostForm)$
      - pattern: http.Redirect($W, $REQ, $URL, ...)
      - patterns:
        - pattern: http.NewRequest("$METHOD", $URL, ...)
        - metavariable-regex:
            metavariable: $METHOD
            regex: ^(GET|HEAD|POST|POSTFORM)$
    - focus-metavariable: $URL
    requires: FORMAT or ADD_OR_DIRECT
  - patterns:
    - pattern-inside: |
        import "github.com/gin-gonic/gin"
        ...
    - patterns:
      - pattern-either:
        - pattern: |
            ($CONTEXT : gin.Context).Redirect($CODE, $URL, ...)
        - pattern: |
            ($CONTEXT : *gin.Context).Redirect($CODE, $URL, ...)
      - focus-metavariable: $URL
    requires: FORMAT or ADD_OR_DIRECT
  pattern-sanitizers:
  - patterns:
    - pattern: $F + $X
    - metavariable-regex:
        metavariable: $F
        regex: .*//[a-zA-Z0-10]+\\..*
