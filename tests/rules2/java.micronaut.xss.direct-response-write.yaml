rules:
- id: java.micronaut.xss.direct-response-write.direct-response-write
  message: Untrusted input could be used to tamper with a web page rendering, which
    can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur
    when untrusted input executes malicious JavaScript code, leading to issues such
    as account compromise and sensitive information leakage. To prevent this vulnerability,
    validate the user input, perform contextual output encoding or sanitize the input.
  severity: WARNING
  metadata:
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: MEDIUM
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
      Scripting'')'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - web::sink::direct-response::Micronaut
    - web::sink::html-webpage::Micronaut
    - web::source::cookie::Micronaut
    - web::source::form-data::Micronaut
    - web::source::header::Micronaut
    - web::source::http-body::Micronaut
    - web::source::http-params::Micronaut
    - web::source::url-path-params::Micronaut
    owasp:
    - A03:2021 - Injection
    - A07:2017 - Cross-Site Scripting (XSS)
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    technology:
    - Micronaut
    - java
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Cross-Site-Scripting (XSS)
    source: https://semgrep.dev/r/java.micronaut.xss.direct-response-write.direct-response-write
    shortlink: https://sg.run/4b0W8
    semgrep.dev:
      rule:
        r_id: 115588
        rv_id: 742789
        rule_id: PeUJz85
        version_id: ExTqZOP
        url: https://semgrep.dev/playground/r/ExTqZOP/java.micronaut.xss.direct-response-write.direct-response-write
        origin: pro_rules
  languages:
  - java
  mode: taint
  options:
    interfile: true
    taint_assume_safe_booleans: true
    taint_assume_safe_numbers: true
  pattern-sources:
  - label: REQ
    patterns:
    - pattern: |
        @io.micronaut.http.annotation.$METHOD(...)
        $T $FUNC(..., $TYPE $SOURCE, ...) {...}
    - focus-metavariable: $SOURCE
    - metavariable-regex:
        metavariable: $METHOD
        regex: (Delete|Get|Head|Options|Patch|Put|Post|Trace|CustomHttpMethod)
    - metavariable-pattern:
        metavariable: $TYPE
        patterns:
        - patterns:
          - pattern-not-regex: ^Session$
  - label: REQ
    patterns:
    - pattern-either:
      - pattern: (io.micronaut.http.HttpRequest<$ANY> $REQ).$PARAM(...)
      - pattern: (io.micronaut.http.HttpRequest<?> $REQ).$PARAM(...)
      - pattern: (io.micronaut.http.HttpRequest $REQ).$PARAM(...)
    - metavariable-pattern:
        metavariable: $PARAM
        patterns:
        - patterns:
          - pattern-either:
            - pattern: getCookies
            - pattern: getLocale
            - pattern: getParameters
            - pattern: getPath
            - pattern: getUri
            - pattern: getBody
            - pattern: getContentType
            - pattern: getHeaders
  - label: STRING_CONCAT
    patterns:
    - pattern-either:
      - pattern: |
          "...${$X}..."
      - pattern: $F + $X
      - pattern: |
          "...".formatted(...)
      - pattern: String.format(...)
      - pattern: MessageFormat.format(...)
    requires: REQ
  pattern-propagators:
  - from: $INPUT
    patterns:
    - pattern-either:
      - pattern: String.format($FMT, ..., $INPUT, ...)
      - pattern: MessageFormat.format($FMT, ..., $INPUT, ...)
    to: $FMT
  - from: $INPUT
    patterns:
    - pattern: (StringBuilder $BUILDER).append($INPUT);
    to: $BUILDER
  pattern-sinks:
  - patterns:
    - pattern: return $RT;
    - pattern-either:
      - pattern-inside: |
          @io.micronaut.http.annotation.Produces(MediaType.TEXT_HTML)
          $TYPE $FN(...) {
            ...
          }
      - pattern-inside: |
          @io.micronaut.http.annotation.Produces("text/html")
          $TYPE $FN(...) {
            ...
          }
      - pattern-inside: |
          @$METHOD(..., produces = MediaType.TEXT_HTML, ...)
          $TYPE $FN(...) {
            ...
          }
      - pattern-inside: |
          @$METHOD(..., produces = "text/html", ...)
          $TYPE $FN(...) {
            ...
          }
    - pattern-not-inside: |
        @io.micronaut.views.View(...)
        $TYPE $FN(...) {
          ...
        }
    - focus-metavariable: $RT
    requires: STRING_CONCAT
  pattern-sanitizers:
  - pattern: (ChoiceFormat $X).format(...)
  - pattern: (DecimalFormat $X).format(...)
  - pattern: (java.util.UUID $X)
  - pattern: new io.micronaut.views.ModelAndView<$X>(...)
  - pattern: new io.micronaut.views.ModelAndView<?>(...)
  - pattern: new io.micronaut.views.ModelAndView<>(...)
  - pattern: new io.micronaut.views.ModelAndView(...)
  - pattern: (org.owasp.html.PolicyFactory $X).sanitize(...)
  - pattern: Jsoup.clean(...)
  - pattern: (org.owasp.validator.html.AntiSamy $X).scan(...)
  - pattern: Encode.forHtml(...)
  - pattern: (Cleaner $CL).clean(...)
