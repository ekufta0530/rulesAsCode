rules:
- id: php.lang.security.tainted-curl-injection.tainted-curl-injection
  message: Untrusted input might be injected into a command executed by the application,
    which can lead to a command injection vulnerability. An attacker can execute arbitrary
    commands, potentially gaining complete control of the system. To prevent this
    vulnerability, avoid executing OS commands with user input. If this is unavoidable,
    validate and sanitize the user input, and use safe methods for executing the commands.
    In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)`
    to correctly sanitize user input that is used respectively as system commands
    or command arguments. User input going into `curl_exec` or `curl_multi_exec` might
    lead to Server-Side Request Forgery (SSRF), which you can avoid by using an allowlist
    of permitted URLs.
  severity: ERROR
  metadata:
    likelihood: HIGH
    impact: HIGH
    confidence: MEDIUM
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS
      Command Injection'')'
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - web::source::cookie::lang
    - web::source::http-params::lang
    - web::source::http-body::lang
    - web::source::url-path-params::lang
    - net::sink::http-request::lang
    - os::sink::os-command-or-thread::lang
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://beaglesecurity.com/blog/vulnerability/curl-file-support-is-not-fixed.html
    technology:
    - php
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Command Injection
    source: https://semgrep.dev/r/php.lang.security.tainted-curl-injection.tainted-curl-injection
    shortlink: https://sg.run/Dxko
    semgrep.dev:
      rule:
        r_id: 27196
        rv_id: 111773
        rule_id: kxUzgk
        version_id: rxTy4Q4
        url: https://semgrep.dev/playground/r/rxTy4Q4/php.lang.security.tainted-curl-injection.tainted-curl-injection
        origin: pro_rules
  languages:
  - php
  mode: taint
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern: $_REQUEST
      - pattern: $_GET
      - pattern: $_POST
      - pattern: $_FILES
      - pattern: $_COOKIE
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $CURL = curl_init(...);
          ...
          curl_exec($CURL);
      - pattern-inside: |
          $CURL = curl_init(...);
          ...
          $MH = curl_multi_init(...);
          ...
          curl_multi_add_handle($MH, $CURL);
          ...
          curl_multi_exec($MH, ...);
    - pattern: |
        curl_setopt($CURL, CURLOPT_URL, ...);
