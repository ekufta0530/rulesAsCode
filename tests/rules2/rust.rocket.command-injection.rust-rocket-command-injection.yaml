rules:
- id: rust.rocket.command-injection.rust-rocket-command-injection.rust-rocket-command-injection
  message: Untrusted input might be injected into a command executed by the application,
    which can lead to a command injection vulnerability. An attacker can execute arbitrary
    commands, potentially gaining complete control of the system. To prevent this
    vulnerability, avoid executing OS commands with user input. If this is unavoidable,
    validate and sanitize the input, and use safe methods for executing the commands.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS
      Command Injection'')'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - os::sink::os-command-or-thread::std::process
    - web::source::cookie::rocket
    - web::source::form-data::rocket
    - web::source::header::rocket
    - web::source::http-body::rocket
    - web::source::http-params::rocket
    - web::source::url-path-params::rocket
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    technology:
    - rocket
    - rust
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Command Injection
    source: https://semgrep.dev/r/rust.rocket.command-injection.rust-rocket-command-injection.rust-rocket-command-injection
    shortlink: https://sg.run/AAoB
    semgrep.dev:
      rule:
        r_id: 63206
        rv_id: 251681
        rule_id: 7KUkGw
        version_id: GxTjwLv
        url: https://semgrep.dev/playground/r/GxTjwLv/rust.rocket.command-injection.rust-rocket-command-injection.rust-rocket-command-injection
        origin: pro_rules
  languages:
  - rust
  mode: taint
  options:
    symbolic_propagation: true
  pattern-sources:
  - label: INPUT
    pattern-either:
    - patterns:
      - pattern: $PARAM
      - pattern-either:
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : rocket::request::Form<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : rocket::http::Cookies, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &rocket::http::CookieJar<'$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : rocket::serde::json::Json<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : String, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &str, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &RawStr, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &OsStr, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : OsString, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<String>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&str>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&RawStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&OsStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<OsString>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<rocket::request::Form<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<rocket::http::Cookies>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&rocket::http::CookieJar<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<rocket::serde::json::Json<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<String>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&str>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&RawStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&OsStr>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<OsString>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<String>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&str>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&RawStr>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&OsStr>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<OsString>>, ...) {
              ...
            }
      - metavariable-regex:
          metavariable: $METHOD
          regex: ^(get|put|post|delete|head|patch|options)$
    - patterns:
      - pattern: $PARAM
      - pattern-either:
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : $TYPE, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : $TYPE<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : $TYPE<'$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &$TYPE, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &$TYPE<$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : &$TYPE<'$T>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Vec<&$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&$TYPE>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&$TYPE<$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<&$TYPE<'$T>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<$TYPE>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<$TYPE<$T>>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<$TYPE<'$T>>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&$TYPE>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&$TYPE<$T>>>, ...) {
              ...
            }
        - pattern-inside: |
            #[$METHOD($...ROUTE)]
            fn $FUNC(..., $PARAM : Option<Vec<&$TYPE<'$T>>>, ...) {
              ...
            }
      - pattern-inside: |
          struct $TYPE { ... };
          ...
      - metavariable-regex:
          metavariable: $METHOD
          regex: ^(get|put|post|delete|head|patch|options)$
  - label: REQUEST
    patterns:
    - pattern-either:
      - pattern-inside: |
          fn $FUNC(..., $REQ : &'r rocket::Request<'_>, ...) {
            ...
          }
      - pattern-inside: |
          fn $FUNC(..., $REQ : &'r rocket::request::Request<'_>, ...) {
            ...
          }
      - pattern-inside: |
          fn $FUNC(..., $REQ : &rocket::Request, ...) {
            ...
          }
      - pattern-inside: |
          fn $FUNC(..., $REQ : &rocket::request::Request, ...) {
            ...
          }
  - label: REQ_INPUT
    patterns:
    - pattern-either:
      - pattern: $R.path()
      - pattern: $R.query()
      - pattern: $R.map_path()
      - pattern: $R.clear_query()
      - pattern: $R.cookies()
      - pattern: $R.headers()
      - pattern: $R.query_value
  pattern-sinks:
  - patterns:
    - pattern: std::process::Command::new($CMDINPUT)
    - focus-metavariable: $CMDINPUT
    requires: INPUT or (REQUEST and REQ_INPUT)
  - patterns:
    - pattern-either:
      - pattern: std::process::Command::new("$SHELL"). ... .arg("-c"). ... .arg($CMDINPUT)
      - pattern: std::process::Command::new("$SHELL"). ... .args([..., "-c", ...,
          $CMDINPUT, ...])
      - patterns:
        - pattern-inside: $COMMAND = std::process::Command::new("$SHELL"); ...
        - pattern-inside: $COMMAND.arg("-c"); ...
        - pattern: $COMMAND.arg("$CMDINPUT")
    - metavariable-regex:
        metavariable: $SHELL
        regex: ^(.*\/)?(sh|bash|ksh|csh|tcsh|zsh)$
    - focus-metavariable: $CMDINPUT
    requires: INPUT or (REQUEST and REQ_INPUT)
