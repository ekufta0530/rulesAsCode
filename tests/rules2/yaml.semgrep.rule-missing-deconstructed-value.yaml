rules:
- id: yaml.semgrep.rule-missing-deconstructed-value.missing-deconstructed-value
  message: Looks like this value is deconstructing a const/var/let you need to use
    all three `const {...} =` `var {...} =` and `let {...} =` to provide accurate
    coverage consider adding the missing patterns in a `pattern-inside` for better
    coverage.
  languages:
  - yaml
  severity: WARNING
  metadata:
    references:
    - https://semgrep.dev/docs/contributing/contributing-to-semgrep-rules-repository
    category: correctness
    technology:
    - semgrep
    license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    source: https://semgrep.dev/r/yaml.semgrep.rule-missing-deconstructed-value.missing-deconstructed-value
    shortlink: https://sg.run/20PD
    semgrep.dev:
      rule:
        r_id: 53519
        rv_id: 111182
        rule_id: 5rURQq
        version_id: 8KTQyn1
        url: https://semgrep.dev/playground/r/8KTQyn1/yaml.semgrep.rule-missing-deconstructed-value.missing-deconstructed-value
        origin: community
  patterns:
  - pattern-either:
    - patterns:
      - pattern-inside: |
          rules: ...
      - pattern-not-inside: |
          - pattern-either:
              ...
      - pattern: |
          - pattern-inside:
              $VALUE
      - pattern-either:
        - pattern-regex: const {.*}.*=
        - pattern-regex: let {.*}.*=
        - pattern-regex: var {.*}.*=
    - patterns:
      - patterns:
        - pattern-inside: |
            rules: ...
        - pattern-inside: |
            - pattern-either:
                $VALUE
        - focus-metavariable:
          - $VALUE
        - pattern-inside: "- pattern-inside: \n    $A\n"
        - metavariable-regex:
            metavariable: $A
            regex: .*\s.*(var|const|let)\s{.*}\s=
      - pattern-not:
          patterns:
          - pattern-inside: "...\n- pattern-inside: \n    $Z\n...\n- pattern-inside:\
              \ \n    $B\n...            \n- pattern-inside: \n    $C\n...\n"
          - metavariable-regex:
              metavariable: $Z
              regex: .*\s.*(var|const|let).*{.*}
          - metavariable-regex:
              metavariable: $B
              regex: .*\s.*(var|const|let).*{.*}
          - metavariable-regex:
              metavariable: $C
              regex: .*\s.*(var|const|let).*{.*}
