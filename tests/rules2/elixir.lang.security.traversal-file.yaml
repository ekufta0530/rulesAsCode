rules:
- id: elixir.lang.security.traversal-file.traversal-file
  message: 'The application builds a file path from potentially untrusted data, which
    can lead to a path traversal vulnerability. An attacker can manipulate the path
    which the application uses to access files. If the application does not validate
    user input and sanitize file paths, sensitive files such as configuration or user
    data can be accessed, potentially creating or overwriting files. To prevent this
    vulnerability, validate and sanitize any input that is used to create references
    to file paths. Also, enforce strict file access controls. For example, choose
    privileges allowing public-facing applications to access only the required files. '
  severity: INFO
  metadata:
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: LOW
    category: security
    subcategory:
    - audit
    cwe:
    - 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (''Path
      Traversal'')'
    owasp:
    - A01:2021 - Broken Access Control
    references:
    - https://owasp.org/Top10/A01_2021-Broken_Access_Control/
    technology:
    - elixir
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Path Traversal
    source: https://semgrep.dev/r/elixir.lang.security.traversal-file.traversal-file
    shortlink: https://sg.run/KxLk6
    semgrep.dev:
      rule:
        r_id: 114611
        rv_id: 257001
        rule_id: d8Ur34g
        version_id: 6xT5bNe
        url: https://semgrep.dev/playground/r/6xT5bNe/elixir.lang.security.traversal-file.traversal-file
        origin: pro_rules
  languages:
  - elixir
  min-version: 1.55.2
  patterns:
  - pattern-either:
    - patterns:
      - pattern: File.$FUNC($ARG, ...)
      - pattern-not: File.$FUNC("...", ...)
      - focus-metavariable: $ARG
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(read|read!|write|write!|rm|rm!|rm_rf|open|open!|chmod|chmod!|chown|chown!|mkdir|mkdir!|mkdir_p|mkdir_p!|stream|stream!|cp|copy|cp!|copy!|cp_r|cp_r!|ln|ln!|ln_s|ln_s!)$
    - patterns:
      - pattern: File.$FUNC($ARGFROM, $ARGTO, ...)
      - pattern-not: File.$FUNC($ARGFROM, "...", ...)
      - focus-metavariable: $ARGTO
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(cp|copy|cp!|copy!|cp_r|cp_r!|ln|ln!|ln_s|ln_s!)$
