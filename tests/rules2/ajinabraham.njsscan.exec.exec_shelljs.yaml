rules:
- id: ajinabraham.njsscan.exec.exec_shelljs.shelljs_os_command_exec
  patterns:
  - pattern-inside: |
      require('shelljs')
      ...
  - pattern-either:
    - pattern-inside: function ($REQ, $RES, ...) {...}
    - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: $X = function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
    - pattern-inside: $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
  - pattern-either:
    - pattern: |
        $EXEC.exec(<... $REQ.$QUERY.$VAR ...>, ...)
    - pattern: |
        $EXEC.exec( <... $REQ.$QUERY ...>, ...)
    - pattern: |
        $INP = <... $REQ.$QUERY.$VAR ...>;
        ...
        $EXEC.exec(<... $INP ...>, ...)
    - pattern: |
        $INP = <... $REQ.$QUERY ...>;
        ...
        $EXEC.exec(<... $INP ...>, ...)
  message: User controlled data in 'shelljs.exec()' can result in Remote OS Command
    Execution.
  languages:
  - javascript
  severity: ERROR
  metadata:
    owasp-web: a1
    cwe: cwe-78
    license: LGPL-3.0-or-later
    vulnerability_class:
    - Other
    source: https://semgrep.dev/r/ajinabraham.njsscan.exec.exec_shelljs.shelljs_os_command_exec
    shortlink: https://sg.run/QxXQ
    semgrep.dev:
      rule:
        r_id: 43642
        rv_id: 78260
        rule_id: KxURA0
        version_id: 44TX8B
        url: https://semgrep.dev/playground/r/44TX8B/ajinabraham.njsscan.exec.exec_shelljs.shelljs_os_command_exec
        origin: community
