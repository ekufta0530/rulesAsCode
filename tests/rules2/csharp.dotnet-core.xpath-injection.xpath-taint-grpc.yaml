rules:
- id: csharp.dotnet-core.xpath-injection.xpath-taint-grpc.xpath-taint-grpc
  message: XPath queries are constructed dynamically on user-controlled input. This
    could lead to XPath injection if variables passed into the evaluate or compile
    commands are not properly sanitized. Xpath injection could lead to unauthorized
    access to sensitive information in XML documents. Thoroughly sanitize user input
    or use parameterized XPath queries if you can.
  severity: WARNING
  metadata:
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-643: Improper Neutralization of Data within XPath Expressions (''XPath
      Injection'')'
    functional-categories:
    - net::source::remote-procedure-call::gRPC
    - xml::sink::xpath
    owasp:
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    technology:
    - .NET
    - csharp
    - dotnet
    - grpc
    - xml
    - xpath
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - XPath Injection
    source: https://semgrep.dev/r/csharp.dotnet-core.xpath-injection.xpath-taint-grpc.xpath-taint-grpc
    shortlink: https://sg.run/BZOW
    semgrep.dev:
      rule:
        r_id: 73407
        rv_id: 229199
        rule_id: 7KUyLB
        version_id: e1TgQbL
        url: https://semgrep.dev/playground/r/e1TgQbL/csharp.dotnet-core.xpath-injection.xpath-taint-grpc.xpath-taint-grpc
        origin: pro_rules
  languages:
  - csharp
  mode: taint
  options:
    interfile: true
  pattern-sources:
  - patterns:
    - pattern-inside: |
        using Grpc.Core;
        ...
    - focus-metavariable: $REQ
    - pattern-either:
      - pattern-inside: |
          public $TYPE $NAME($T $REQ, ServerCallContext $CTX) {
            ...
          }
      - pattern-inside: |
          public $TYPE $NAME($T $REQ, $ST $STREAM, ServerCallContext $CTX) {
            ...
          }
  - patterns:
    - pattern-inside: |
        using Grpc.Core;
        ...
    - pattern-either:
      - pattern: (ServerCallContext $CTX).RequestHeaders
      - pattern: (ServerCallContext $CTX). ... .Request.Query
      - pattern: (ServerCallContext $CTX). ... .Request.QueryString
      - pattern: (ServerCallContext $CTX). ... .Request.Headers
      - pattern: (ServerCallContext $CTX). ... .Request.RouteValues
      - pattern: (ServerCallContext $CTX). ... .Request.Body
      - pattern: (ServerCallContext $CTX). ... .Request.BodyReader
      - pattern: (ServerCallContext $CTX). ... .Request.Form
  pattern-propagators:
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern: (StringBuilder $TO).Append(..., $FROM,...)
        - pattern: (StringBuilder $TO).AppendLine(..., $FROM,...)
        - pattern: (StringBuilder $TO).AppendFormat(..., $FROM,...)
        - pattern: (StringBuilder $TO).AppendJoin(..., $FROM,...)
        - pattern: (StringBuilder $TO).Replace(..., $FROM,...)
        - pattern: (StringBuilder $TO).Insert(..., $FROM,...)
        - patterns:
          - pattern-either:
            - pattern: $TO.Append(..., $FROM,...)
            - pattern: $TO.AppendLine(..., $FROM,...)
            - pattern: $TO.AppendFormat(..., $FROM,...)
            - pattern: $TO.AppendJoin(..., $FROM,...)
            - pattern: $TO.Replace(..., $FROM,...)
            - pattern: $TO.Insert(..., $FROM,...)
          - pattern-either:
            - pattern-inside: |
                var $TO = new StringBuilder(...);
                ...
            - pattern-inside: |
                $TO = new StringBuilder(...);
                ...
    to: $TO
  pattern-sinks:
  - patterns:
    - focus-metavariable: $QUERY
    - pattern-either:
      - pattern: XPathExpression.Compile($QUERY,...)
      - patterns:
        - pattern-either:
          - pattern: ($XMLTYPE $NODE).Compile($QUERY,...)
          - pattern: ($XMLTYPE $NODE).Evaluate($QUERY,...)
          - pattern: ($XMLTYPE $NODE).Select($QUERY,...)
          - pattern: ($XMLTYPE $NODE).SelectNodes($QUERY,...)
          - pattern: ($XMLTYPE $NODE).SelectSingleNode($QUERY,...)
        - metavariable-regex:
            metavariable: $XMLTYPE
            regex: (?i)^(xml|xpath)
      - patterns:
        - pattern-either:
          - pattern: $NODE.Compile($QUERY,...)
          - pattern: $NODE.Evaluate($QUERY,...)
          - pattern: $NODE.Select($QUERY,...)
          - pattern: $NODE.SelectNodes($QUERY,...)
          - pattern: $NODE.SelectSingleNode($QUERY,...)
        - pattern-either:
          - patterns:
            - pattern-either:
              - pattern-inside: |
                  var $NODE = new $XMLTYPE(...);
                  ...
              - pattern-inside: |
                  $NODE = new $XMLTYPE(...);
                  ...
            - metavariable-regex:
                metavariable: $XMLTYPE
                regex: (?i)^(xml|xpath)
          - pattern-inside: |
              var $NODE = $DOC.CreateNavigator(...);
              ...
          - pattern-inside: |
              $NODE = $DOC.CreateNavigator(...);
              ...
          - pattern-inside: |
              var $NODE = $DOC.DocumentElement;
              ...
          - pattern-inside: |
              $NODE = $DOC.DocumentElement;
              ...
  pattern-sanitizers:
  - patterns:
    - pattern: Convert.$METHOD(...)
    - metavariable-regex:
        metavariable: $METHOD
        regex: (ToBase64CharArray|ToBase64String|ToBoolean|ToDateTime|ToDecimal|ToDouble|ToInt16|ToInt32|ToInt64|ToSByte|ToSingle|ToUInt16|ToUInt32|ToUInt64)
  - patterns:
    - pattern-either:
      - pattern: $INT.Parse(...)
      - pattern: $INT.TryParse(...)
      - pattern: $INT.TryParseExact(...)
    - metavariable-regex:
        metavariable: $INT
        regex: (Int32|Int128|Int16|Int64|IntPtr|Boolean|Decimal|Double|Guid|DateTime|Single|SByte|UInt128|UInt16|UInt32|UInt64|UIntPtr)
  - patterns:
    - pattern-either:
      - pattern: (int $NUM)
      - pattern: (long $NUM)
      - pattern: (float $NUM)
      - pattern: (double $NUM)
      - pattern: (bool $NUM)
      - pattern: (Guid $NUM)
      - pattern: var $X = (int) ...;
      - pattern: var $X = (long) ...;
      - pattern: var $X = (float) ...;
      - pattern: var $X = (double) ...;
      - pattern: var $X = (bool) ...;
      - pattern: var $X = (Guid) ...;
