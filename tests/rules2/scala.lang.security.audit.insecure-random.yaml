rules:
- id: scala.lang.security.audit.insecure-random.insecure-random
  metadata:
    cwe:
    - 'CWE-330: Use of Insufficiently Random Values'
    owasp:
    - A02:2021 - Cryptographic Failures
    category: security
    technology:
    - scala
    - cryptography
    license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    resources:
    - https://find-sec-bugs.github.io/bugs.htm
    confidence: LOW
    references:
    - https://owasp.org/Top10/A02_2021-Cryptographic_Failures
    subcategory:
    - audit
    likelihood: LOW
    impact: MEDIUM
    vulnerability_class:
    - Cryptographic Issues
    source: https://semgrep.dev/r/scala.lang.security.audit.insecure-random.insecure-random
    shortlink: https://sg.run/JxAw
    semgrep.dev:
      rule:
        r_id: 15190
        rv_id: 110629
        rule_id: gxUgDk
        version_id: nWTxoro
        url: https://semgrep.dev/playground/r/nWTxoro/scala.lang.security.audit.insecure-random.insecure-random
        origin: community
  message: Flags the use of a predictable random value from `scala.util.Random`. This
    can lead to vulnerabilities when used in security contexts, such as in a CSRF
    token, password reset token, or any other secret value. To fix this, use java.security.SecureRandom
    instead.
  severity: WARNING
  languages:
  - scala
  patterns:
  - pattern: |
      import scala.util.Random
