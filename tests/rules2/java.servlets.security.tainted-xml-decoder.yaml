rules:
- id: java.servlets.security.tainted-xml-decoder.tainted-xml-decoder
  message: 'The application is using an XML parser that has not been safely configured.
    This might lead to XML External Entity (XXE) vulnerabilities when parsing user-controlled
    input. An attacker can include document type definitions (DTDs) which can interact
    with internal or external hosts. XXE can lead to other vulnerabilities, such as
    Local File Inclusion (LFI), Remote Code Execution (RCE), and Server-side request
    forgery (SSRF), depending on the application configuration. An attacker can also
    use DTDs to expand recursively, leading to a Denial-of-Service (DoS) attack, also
    known as a Billion Laughs Attack. The best defense against XXE is to have an XML
    parser that supports disabling DTDs. Limiting the use of external entities from
    the start can prevent the parser from being used to process untrusted XML files.
    Reducing dependencies on external resources is also a good practice for performance
    reasons. It is difficult to guarantee that even a trusted XML file on your server
    or during transmission has not been tampered with by a malicious third-party.
    For more information, see: [Java XXE prevention](https://semgrep.dev/docs/cheat-sheets/java-xxe/)'
  severity: WARNING
  metadata:
    likelihood: HIGH
    impact: HIGH
    confidence: MEDIUM
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-611: Improper Restriction of XML External Entity Reference'
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - web::source::cookie::Servlet
    - web::source::http-params::Servlet
    - web::source::http-body::Servlet
    - web::source::header::Servlet
    - web::source::session-properties::Servlet
    - web::source::url-path-params::Servlet
    - web::source::form-data::Servlet
    - xml::sink::xml-parser::java.beans
    owasp:
    - A04:2017 - XML External Entities (XXE)
    - A05:2021 - Security Misconfiguration
    references:
    - https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html
    source-rule-url: https://find-sec-bugs.github.io/bugs.htm#XML_DECODER
    technology:
    - java
    - servlets
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - XML Injection
    source: https://semgrep.dev/r/java.servlets.security.tainted-xml-decoder.tainted-xml-decoder
    shortlink: https://sg.run/7vKW
    semgrep.dev:
      rule:
        r_id: 27182
        rv_id: 111614
        rule_id: YGUZp0
        version_id: K3TvGZE
        url: https://semgrep.dev/playground/r/K3TvGZE/java.servlets.security.tainted-xml-decoder.tainted-xml-decoder
        origin: pro_rules
  languages:
  - java
  mode: taint
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern: (HttpServletRequest $REQ).$REQFUNC(...)
      - pattern: "(ServletRequest $REQ).$REQFUNC(...) \n"
      - patterns:
        - pattern-inside: |
            (javax.servlet.http.Cookie[] $COOKIES) = (HttpServletRequest $REQ).getCookies(...);
            ...
            for (javax.servlet.http.Cookie $COOKIE: $COOKIES) {
              ...
            }
        - pattern: |
            $COOKIE.getValue(...)
      - patterns:
        - pattern-inside: |
            $TYPE[] $VALS = (HttpServletRequest $REQ).$GETFUNC(...);
            ...
        - pattern: |
            $PARAM = $VALS[$INDEX];
    - pattern-not: "$REQ.getUserPrincipal() \n"
    - pattern-not: "$REQ.getSession(...) \n"
    - pattern-not: "$REQ.getAuthType(...) \n"
    - pattern-not: "$REQ.getMethod(...) \n"
    - pattern-not: "$REQ.getLocales(...) \n"
    - pattern-not: "$REQ.getLocale(...) \n"
    - pattern-not: "$REQ.isUserinRole(...) \n"
    - pattern-not: "$REQ.isRequestdSessionIdValid(...) \n"
    - pattern-not: "$REQ.isRequestedSessionIdFromUrl(...) \n"
    - pattern-not: "$REQ.getIntHeader(...) \n"
    - pattern-not: "$REQ.getDateHeader(...) \n"
    - pattern-not: "$REQ.authenticate(...) \n"
    - pattern-not: "$REQ.isUserInRole(...) \n"
    - pattern-not: |
        $REQ.getAttribute(...)
    - pattern-not: |
        $REQ.getAttributeNames(...)
    - pattern-not: |
        $REQ.getAuthType(...)
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: |
          new XMLDecoder(...)
