rules:
- id: java.servlets.security.cookie-setsecure.cookie-setSecure
  patterns:
  - patterns:
    - pattern-inside: |
        $COOKIE = new Cookie(...);
        ...
    - pattern: |
        $COOKIE.setSecure(false);
  - pattern-not-inside: |
      $COOKIE = new Cookie(...);
      ...
      $COOKIE.setSecure(true);
  message: 'Default session middleware settings: `setSecure` not set to true. This
    ensures that the cookie is sent only over HTTPS to prevent cross-site scripting
    attacks.'
  fix-regex:
    regex: setSecure\(false\)
    replacement: setSecure(true)
  metadata:
    vulnerability: Insecure Transport
    owasp:
    - A03:2017 - Sensitive Data Exposure
    - A02:2021 - Cryptographic Failures
    cwe:
    - 'CWE-319: Cleartext Transmission of Sensitive Information'
    references:
    - https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)
    - https://owasp.org/www-community/controls/SecureCookieAttribute
    category: security
    technology:
    - java
    - cookie
    subcategory:
    - audit
    likelihood: LOW
    impact: LOW
    confidence: LOW
    license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    vulnerability_class:
    - Mishandled Sensitive Information
    source: https://semgrep.dev/r/java.servlets.security.cookie-setsecure.cookie-setSecure
    shortlink: https://sg.run/Nb4qN
    semgrep.dev:
      rule:
        r_id: 92971
        rv_id: 230006
        rule_id: DbU6pdz
        version_id: O9Tkw7B
        url: https://semgrep.dev/playground/r/O9Tkw7B/java.servlets.security.cookie-setsecure.cookie-setSecure
        origin: community
  languages:
  - java
  severity: WARNING
