rules:
- id: java.servlets.security.tainted-ssrf.tainted-ssrf
  message: Untrusted input might be used to build an HTTP request, which can lead
    to a Server-side request forgery (SSRF) vulnerability. SSRF allows an attacker
    to send crafted requests from the server side to other internal or external systems.
    SSRF can lead to unauthorized access to sensitive data and, in some cases, allow
    the attacker to control applications or systems that trust the vulnerable service.
    To prevent this vulnerability, avoid allowing user input to craft the base request.
    Instead, treat it as part of the path or query parameter and encode it appropriately.
    When user input is necessary to prepare the HTTP request, perform strict input
    validation. Additionally, whenever possible, use allowlists to only interact with
    expected, trusted domains.
  severity: ERROR
  metadata:
    likelihood: HIGH
    impact: MEDIUM
    confidence: MEDIUM
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-918: Server-Side Request Forgery (SSRF)'
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - web::source::cookie::Servlet
    - web::source::http-params::Servlet
    - web::source::http-body::Servlet
    - web::source::header::Servlet
    - web::source::session-properties::Servlet
    - web::source::url-path-params::Servlet
    - web::source::form-data::Servlet
    - web::sink::http-request::java.net
    owasp:
    - A10:2021 - Server-Side Request Forgery (SSRF)
    references:
    - https://cwe.mitre.org/data/definitions/918.html
    - https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/
    - https://portal.securecodewarrior.com/#/learning-resources/application_security_weaknesses~2Fweb~2Fauth~2Fssrf~2Fgeneric
    source-rule-url: https://find-sec-bugs.github.io/bugs.htm#URLCONNECTION_SSRF_FD
    technology:
    - java
    - servlets
    vulnerability_class:
    - Server-Side Request Forgery (SSRF)
    license: Copyright 2023 Semgrep, Inc.
    source: https://semgrep.dev/r/java.servlets.security.tainted-ssrf.tainted-ssrf
    shortlink: https://sg.run/E4we
    semgrep.dev:
      rule:
        r_id: 27181
        rv_id: 269851
        rule_id: lBUJ4n
        version_id: 7ZT1vKN
        url: https://semgrep.dev/playground/r/7ZT1vKN/java.servlets.security.tainted-ssrf.tainted-ssrf
        origin: pro_rules
  languages:
  - java
  mode: taint
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern: (HttpServletRequest $REQ).$REQFUNC(...)
      - pattern: "(ServletRequest $REQ).$REQFUNC(...) \n"
      - patterns:
        - pattern-inside: |
            (javax.servlet.http.Cookie[] $COOKIES) = (HttpServletRequest $REQ).getCookies(...);
            ...
            for (javax.servlet.http.Cookie $COOKIE: $COOKIES) {
              ...
            }
        - pattern: |
            $COOKIE.getValue(...)
      - patterns:
        - pattern-inside: |
            $TYPE[] $VALS = (HttpServletRequest $REQ).$GETFUNC(...);
            ...
        - pattern: |
            $PARAM = $VALS[$INDEX];
    - pattern-not: "$REQ.getUserPrincipal() \n"
    - pattern-not: "$REQ.getSession(...) \n"
    - pattern-not: "$REQ.getAuthType(...) \n"
    - pattern-not: "$REQ.getMethod(...) \n"
    - pattern-not: "$REQ.getLocales(...) \n"
    - pattern-not: "$REQ.getLocale(...) \n"
    - pattern-not: "$REQ.isUserinRole(...) \n"
    - pattern-not: "$REQ.isRequestdSessionIdValid(...) \n"
    - pattern-not: "$REQ.isRequestedSessionIdFromUrl(...) \n"
    - pattern-not: "$REQ.getIntHeader(...) \n"
    - pattern-not: "$REQ.getDateHeader(...) \n"
    - pattern-not: "$REQ.authenticate(...) \n"
    - pattern-not: "$REQ.isUserInRole(...) \n"
    - pattern-not: |
        $REQ.getAttribute(...)
    - pattern-not: |
        $REQ.getAttributeNames(...)
    - pattern-not: |
        $REQ.getAuthType(...)
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: |
          (java.net.URL $URL).openConnection()
      - pattern: |
          (java.net.URL $URL).openStream()
      - pattern: |
          (java.net.URL $URL).getContent()
  pattern-sanitizers:
  - pattern: getName(...)
