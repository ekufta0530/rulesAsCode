rules:
- id: csharp.dotnet.security.audit.misconfigured-lockout-option.misconfigured-lockout-option
  message: A misconfigured lockout mechanism allows an attacker to execute brute-force
    attacks. Account lockout must be correctly configured and enabled to prevent these
    attacks.
  severity: WARNING
  metadata:
    likelihood: LOW
    impact: HIGH
    confidence: LOW
    category: security
    cwe:
    - 'CWE-307: Improper Restriction of Excessive Authentication Attempts'
    owasp:
    - A07:2021 - Identification and Authentication Failures
    references:
    - https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures
    - https://cwe.mitre.org/data/definitions/307.html
    subcategory:
    - audit
    technology:
    - dotnet
    license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    vulnerability_class:
    - Improper Authentication
    source: https://semgrep.dev/r/csharp.dotnet.security.audit.misconfigured-lockout-option.misconfigured-lockout-option
    shortlink: https://sg.run/d4Yn
    semgrep.dev:
      rule:
        r_id: 26334
        rv_id: 109175
        rule_id: OrUd2r
        version_id: WrTWQGE
        url: https://semgrep.dev/playground/r/WrTWQGE/csharp.dotnet.security.audit.misconfigured-lockout-option.misconfigured-lockout-option
        origin: community
  languages:
  - csharp
  patterns:
  - pattern-either:
    - pattern: |
        $SIGNIN.PasswordSignInAsync(...,lockoutOnFailure: false,...);
    - pattern: |
        $SIGNIN.CheckPasswordSignInAsync(...,lockoutOnFailure: false,...);
  - pattern-inside: |
      public async $TYPE<IActionResult> $METHOD(...) {
        ...
      }
