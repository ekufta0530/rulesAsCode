rules:
- id: python.flask.file.tainted-shelve-flask.tainted-shelve-flask
  message: The application builds a file path from potentially untrusted data, which
    can lead to a path traversal vulnerability. An attacker can manipulate the path
    which the application uses to access files. If the application does not validate
    user input and sanitize file paths, sensitive files such as configuration or user
    data can be accessed, potentially creating or overwriting files. To prevent this
    vulnerability, validate and sanitize any input that is used to create references
    to file paths. Also, enforce strict file access controls. For example, choose
    privileges allowing public-facing applications to access only the required files.
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (''Path
      Traversal'')'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - file::sink::file-access::shelve
    - web::source::cookie::flask
    - web::source::form-data::flask
    - web::source::form-data::flask-wtf
    - web::source::form-data::wtforms
    - web::source::header::flask
    - web::source::http-body::flask
    - web::source::http-params::flask
    - web::source::url-path-params::flask
    owasp:
    - A01:2021 - Broken Access Control
    - A05:2017 - Broken Access Control
    references:
    - https://owasp.org/Top10/A01_2021-Broken_Access_Control
    - https://owasp.org/www-community/attacks/Path_Traversal
    - https://portswigger.net/web-security/file-path-traversal
    technology:
    - file
    - flask
    - flask-wtf
    - pickle
    - shelve
    - web
    - wtforms
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Path Traversal
    source: https://semgrep.dev/r/python.flask.file.tainted-shelve-flask.tainted-shelve-flask
    shortlink: https://sg.run/zdrJk
    semgrep.dev:
      rule:
        r_id: 116517
        rv_id: 731975
        rule_id: j2Ug1Qq
        version_id: xyTGDAr
        url: https://semgrep.dev/playground/r/xyTGDAr/python.flask.file.tainted-shelve-flask.tainted-shelve-flask
        origin: pro_rules
  languages:
  - python
  mode: taint
  options:
    interfile: true
  pattern-sources:
  - pattern-either:
    - patterns:
      - pattern: flask.request.$FUNC()
      - metavariable-regex:
          metavariable: $FUNC
          regex: ^(from_values|get_data|get_json)$
    - patterns:
      - pattern-either:
        - pattern: flask.request.$PROPERTY
        - pattern: flask.request.$PROPERTY[...]
        - pattern: flask.request.$PROPERTY.get(...)
      - metavariable-regex:
          metavariable: $PROPERTY
          regex: ^(args|cookies|data|files|form|full_path|headers|input_stream|json|path|stream|values|view_args)$
    - patterns:
      - pattern: |
          @$APP.$ROUTE
          def $FUNC(..., $PARAM, ...):
            ...
      - metavariable-regex:
          metavariable: $ROUTE
          regex: ^(endpoint)$
      - focus-metavariable: $PARAM
  - patterns:
    - pattern: |
        @$APP.$ROUTE(...)
        def $FUNC(..., $PARAM, ...):
          ...
    - metavariable-regex:
        metavariable: $ROUTE
        regex: ^(route|delete|get|patch|post|put)$
    - focus-metavariable: $PARAM
  - patterns:
    - pattern-either:
      - pattern-inside: |
          @$APP.$ROUTE(...)
          def $FUNC(...):
            ...
            $FORM = $FORMCLASS(...)
            ...
            $FORM.validate_on_submit()
            ...
      - pattern-inside: |
          @$APP.$ROUTE(...)
          def $FUNC(...):
            ...
            $FORM = $FORMCLASS(...)
            ...
            if $FORM.validate_on_submit():
              ...
            ...
    - metavariable-regex:
        metavariable: $ROUTE
        regex: ^(route|delete|get|patch|post|put|endpoint)$
    - pattern: $FORM.$FIELD.data
  pattern-propagators:
  - from: $DEFAULT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $DICT[$KEY]
            ...
        - pattern-inside: |
            $DICT.get($KEY, $DEFAULT)
            ...
        - pattern-inside: |
            $DICT = { ... }
            ...
        - pattern-inside: |
            $DICT = dict(...)
            ...
      - pattern-either:
        - pattern: $DICT.get($FIELD, $DEFAULT)
        - pattern: $DICT.setdefault($KEY, $DEFAULT)
    to: $DICT
  - from: $FROM_DICT
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $TO_DICT[$KEY]
            ...
        - pattern-inside: |
            $TO_DICT.get($KEY, $DEFAULT)
            ...
        - pattern-inside: |
            $TO_DICT = { ... }
            ...
        - pattern-inside: |
            $TO_DICT = dict(...)
            ...
        - pattern-inside: |
            $FROM_DICT[$KEY]
            ...
        - pattern-inside: |
            $FROM_DICT.get($KEY, $DEFAULT)
            ...
        - pattern-inside: |
            $FROM_DICT = { ... }
            ...
        - pattern-inside: |
            $FROM_DICT = dict(...)
            ...
      - pattern-either:
        - pattern: $TO_DICT.update($FROM_DICT)
        - pattern: $TO_DICT | $FROM_DICT
        - pattern: $TO_DICT |= $FROM_DICT
    to: $TO_DICT
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $LIST = [ ... ]
            ...
        - pattern-inside: |
            $LIST = list(...)
            ...
      - pattern-either:
        - pattern: $LIST.append($FROM)
        - pattern: $LIST.extend($FROM)
        - pattern: $LIST.insert($INDEX, $FROM)
    to: $LIST
  - from: $FROM
    patterns:
    - patterns:
      - pattern-either:
        - pattern-inside: |
            $SET = { $ITEM, ... }
            ...
        - pattern-inside: |
            $SET = set(...)
            ...
        - pattern-inside: |
            $OTHERSET = { $ITEM, ... }
            ...
        - pattern-inside: |
            $OTHERSET = set(...)
            ...
      - pattern-either:
        - pattern: $SET.update(..., $FROM, ...)
        - pattern: $SET.intersection_update(..., $FROM, ...)
        - pattern: $SET.difference_update(..., $FROM, ...)
        - pattern: $SET.symmetric_difference_update(..., $FROM, ...)
        - pattern: $SET.add($FROM)
        - pattern: $SET |= $FROM
        - pattern: $SET &= $FROM
        - pattern: $SET -= $FROM
        - pattern: $SET ^= $FROM
    to: $SET
  - from: $FORM
    patterns:
    - pattern: $FORM.populate_obj($OBJ)
    to: $OBJ
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: shelve.open($SINK, ...)
      - pattern: shelve.DbfilenameShelf($SINK, ...)
    - focus-metavariable: $SINK
  pattern-sanitizers:
  - patterns:
    - pattern-either:
      - pattern: int(...)
      - pattern: bool(...)
      - pattern: float(...)
      - pattern: complex(...)
      - pattern: oct(...)
      - pattern: hex(...)
      - pattern: bin(...)
      - pattern: round(...)
      - pattern: id(...)
      - pattern: hash(...)
      - pattern: len(...)
      - pattern: type(...)
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $DICT[$KEY]
          ...
      - pattern-inside: |
          $DICT = { $KEY: $VALUE for ... in ...}
          ...
      - pattern-inside: |
          $DICT.get($KEY, $DEFAULT)
          ...
      - pattern-inside: |
          $DICT = { }
          ...
      - pattern-inside: |
          $DICT = { $KEY: $VALUE, ... }
          ...
      - pattern-inside: |
          $DICT = dict(...)
          ...
    - pattern-either:
      - pattern: $DICT.clear()
      - pattern: $DICT.len()
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $LIST = [ ... ]
          ...
      - pattern-inside: |
          $LIST = list(...)
          ...
    - pattern-either:
      - pattern: $LIST.clear()
      - pattern: $LIST.count(...)
      - pattern: $LIST.index(...)
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $SET = { $ITEM, ... }
          ...
      - pattern-inside: |
          $SET = set(...)
          ...
    - pattern-either:
      - pattern: $SET.len()
      - pattern: $SET.clear()
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $SET = { $ITEM, ... }
          ...
      - pattern-inside: |
          $SET = { $ITEM for ... in ...}
          ...
      - pattern-inside: |
          $SET = set(...)
          ...
      - pattern-inside: |
          $SET = frozenset(...)
          ...
      - pattern-inside: |
          $OTHERSET = { $ITEM, ... }
          ...
      - pattern-inside: |
          $OTHERSET = set(...)
          ...
    - pattern-either:
      - pattern: $SET.isdisjoint($OTHERSET)
      - pattern: $SET.issubset($OTHERSET)
      - pattern: $SET < $OTHERSET
      - pattern: $SET <= $OTHERSET
      - pattern: $SET.issuperset($OTHERSET)
      - pattern: $SET > $OTHERSET
      - pattern: $SET >= $OTHERSET
  - patterns:
    - pattern-either:
      - pattern-inside: |
          $TUPLE = ( $ITEM, ... )
          ...
      - pattern-inside: |
          $TUPLE = $ITEM, ...
          ...
      - pattern-inside: |
          $TUPLE = tuple(...)
          ...
    - pattern-either:
      - pattern: $TUPLE.len()
