rules:
- id: python.pyramid.deserialization.tainted-shelve-pyramid.tainted-shelve-pyramid
  message: 'The application may convert user-controlled data into an object, which
    can lead to an insecure deserialization vulnerability. An attacker can create
    a malicious serialized object, pass it to the application, and take advantage
    of the deserialization process to perform Denial-of-service (DoS), Remote code
    execution (RCE), or bypass access control measures. To prevent this vulnerability,
    leverage data formats such as JSON or XML as safer alternatives. If you need to
    deserialize user input in a specific format, consider digitally signing the data
    before serialization to prevent tampering. For more information, see: [Deserialization
    prevention](https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html)
    The `shelve` module uses `pickle` and should not be used with data from untrusted
    sources.'
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-502: Deserialization of Untrusted Data'
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - deserialization::sink::load-object::lang
    - web::source::cookie::pyramid
    - web::source::http-params::pyramid
    - web::source::http-body::pyramid
    - web::source::header::pyramid
    owasp:
    - A08:2017 - Insecure Deserialization
    - A08:2021 - Software and Data Integrity Failures
    references:
    - https://portswigger.net/web-security/deserialization
    - https://docs.python.org/3/library/shelve.html
    - https://docs.python.org/3/library/pickle.html
    - https://davidhamann.de/2020/04/05/exploiting-python-pickle/
    related_oss_rules:
    - python.aws-lambda.security.tainted-pickle-deserialization
    - python.lang.security.deserialization.avoid-shelve
    technology:
    - python
    - pyramid
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - 'Insecure Deserialization '
    source: https://semgrep.dev/r/python.pyramid.deserialization.tainted-shelve-pyramid.tainted-shelve-pyramid
    shortlink: https://sg.run/rQN6
    semgrep.dev:
      rule:
        r_id: 44969
        rv_id: 111896
        rule_id: r6UBjy
        version_id: 5PTdeGO
        url: https://semgrep.dev/playground/r/5PTdeGO/python.pyramid.deserialization.tainted-shelve-pyramid.tainted-shelve-pyramid
        origin: pro_rules
  languages:
  - python
  mode: taint
  pattern-sources:
  - patterns:
    - pattern-inside: |
        @pyramid.view.view_config( ... )
        def $VIEW($REQ):
          ...
    - pattern-either:
      - patterns:
        - pattern: $REQ.$FUNCTION(...)
        - metavariable-regex:
            metavariable: $FUNCTION
            regex: ^(as_bytes|make_tempfile)$
      - patterns:
        - pattern-either:
          - pattern: $REQ.$PROPERTY
          - pattern: $REQ.$PROPERTY[...]
          - pattern: $REQ.$PROPERTY.get(...)
        - metavariable-regex:
            metavariable: $PROPERTY
            regex: ^(GET|POST|accept|body|body_file|body_file_raw|body_file_seekable|cache_control|cookies|headers|json|json_body|params|pragma|query_string|referer|referrer|text|urlargs|urlvars)$
  pattern-sinks:
  - pattern-either:
    - pattern: shelve.open($SINK, ...)
    - pattern: shelve.DbfilenameShelf($SINK, ...)
