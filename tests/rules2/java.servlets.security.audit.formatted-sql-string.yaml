rules:
- id: java.servlets.security.audit.formatted-sql-string.formatted-sql-string
  message: This rule has been deprecated use `r/java.lang.security.audit.formatted-sql-string.formatted-sql-string`
    instead.
  severity: ERROR
  metadata:
    likelihood: LOW
    impact: MEDIUM
    confidence: LOW
    category: security
    subcategory:
    - vuln
    asvs:
      section: 'V5: Validation, Sanitization and Encoding Verification Requirements'
      control_id: 5.3.5 Injection
      control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements
      version: '4'
    cwe:
    - 'CWE-89: Improper Neutralization of Special Elements used in an SQL Command
      (''SQL Injection'')'
    cwe2021-top25: true
    cwe2022-top25: true
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
    - https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps
    - https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement
    source-rule-url: https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION
    technology:
    - java
    - servlets
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - SQL Injection
    source: https://semgrep.dev/r/java.servlets.security.audit.formatted-sql-string.formatted-sql-string
    shortlink: https://sg.run/9pA8
    semgrep.dev:
      rule:
        r_id: 27167
        rv_id: 111582
        rule_id: qNUR2e
        version_id: nWTxobe
        url: https://semgrep.dev/playground/r/nWTxobe/java.servlets.security.audit.formatted-sql-string.formatted-sql-string
        origin: pro_rules
  languages:
  - java
  patterns:
  - pattern: a()
  - pattern: b()
