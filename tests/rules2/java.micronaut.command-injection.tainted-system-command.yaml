rules:
- id: java.micronaut.command-injection.tainted-system-command.tainted-system-command
  message: 'Untrusted input might be injected into a command executed by the application,
    which can lead to a command injection vulnerability. An attacker can execute arbitrary
    commands, potentially gaining complete control of the system. To prevent this
    vulnerability, avoid executing OS commands with user input. If this is unavoidable,
    validate and sanitize the input, and use safe methods for executing the commands.
    For more information, see: [Java command injection prevention](https://semgrep.dev/docs/cheat-sheets/java-command-injection/)'
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS
      Command Injection'')'
    cwe2020-top25: true
    cwe2021-top25: true
    cwe2022-top25: true
    functional-categories:
    - os::sink::os-command-or-thread
    - web::source::cookie::Micronaut
    - web::source::form-data::Micronaut
    - web::source::header::Micronaut
    - web::source::http-body::Micronaut
    - web::source::http-params::Micronaut
    - web::source::url-path-params::Micronaut
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    technology:
    - Micronaut
    - java
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Command Injection
    source: https://semgrep.dev/r/java.micronaut.command-injection.tainted-system-command.tainted-system-command
    shortlink: https://sg.run/BYWWR
    semgrep.dev:
      rule:
        r_id: 114907
        rv_id: 734987
        rule_id: NbU3ZZv
        version_id: qkTWdE4
        url: https://semgrep.dev/playground/r/qkTWdE4/java.micronaut.command-injection.tainted-system-command.tainted-system-command
        origin: pro_rules
  languages:
  - java
  mode: taint
  options:
    interfile: true
    taint_assume_safe_booleans: true
    taint_assume_safe_numbers: true
  pattern-sources:
  - patterns:
    - pattern: |
        @io.micronaut.http.annotation.$METHOD(...)
        $T $FUNC(..., $TYPE $SOURCE, ...) {...}
    - focus-metavariable: $SOURCE
    - metavariable-regex:
        metavariable: $METHOD
        regex: (Delete|Get|Head|Options|Patch|Put|Post|Trace|CustomHttpMethod)
    - metavariable-pattern:
        metavariable: $TYPE
        patterns:
        - patterns:
          - pattern-not-regex: ^Session$
  - patterns:
    - pattern-either:
      - pattern: (io.micronaut.http.HttpRequest<$ANY> $REQ).$PARAM(...)
      - pattern: (io.micronaut.http.HttpRequest<?> $REQ).$PARAM(...)
      - pattern: (io.micronaut.http.HttpRequest $REQ).$PARAM(...)
    - metavariable-pattern:
        metavariable: $PARAM
        patterns:
        - patterns:
          - pattern-either:
            - pattern: getCookies
            - pattern: getLocale
            - pattern: getParameters
            - pattern: getPath
            - pattern: getUri
            - pattern: getBody
            - pattern: getContentType
            - pattern: getHeaders
  pattern-propagators:
  - from: $INPUT
    patterns:
    - pattern-either:
      - pattern: String.format($FMT, ..., $INPUT, ...)
      - pattern: MessageFormat.format($FMT, ..., $INPUT, ...)
    to: $FMT
  - from: $INPUT
    patterns:
    - pattern: (StringBuilder $BUILDER).append($INPUT);
    to: $BUILDER
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: Runtime.getRuntime(...).$EXEC($CMD,...)
      - pattern: (Runtime $R).$EXEC($CMD,...)
    - metavariable-regex:
        metavariable: $EXEC
        regex: (exec|loadLibrary|load)
    - focus-metavariable: $CMD
  - patterns:
    - pattern-either:
      - pattern: new ProcessBuilder($CMD,...)
      - pattern: new ProcessBuilder(...). ... .command($CMD,...)
      - pattern: (ProcessBuilder $P). ... .command($CMD,...)
    - focus-metavariable: $CMD
  - patterns:
    - pattern-either:
      - pattern: new ProcessBuilder($SH, "-c", $CMD,...)
      - pattern: new ProcessBuilder(...). ... .command($SH, "-c", $CMD,...)
      - pattern: (ProcessBuilder $P). ... .command($SH, "-c", $CMD,...)
    - metavariable-regex:
        metavariable: $SH
        regex: .*\/?(bash|csh|dash|fish|ksh|tcsh|sh|zsh)\"?$
    - focus-metavariable: $CMD
  pattern-sanitizers:
  - pattern: (ChoiceFormat $X).format(...)
  - pattern: (DecimalFormat $X).format(...)
  - pattern: (java.util.UUID $X)
