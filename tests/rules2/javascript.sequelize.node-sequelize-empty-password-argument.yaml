rules:
- id: javascript.sequelize.node-sequelize-empty-password-argument.node-sequelize-empty-password-argument
  message: The application creates a database connection with an empty password. This
    can lead to unauthorized access by either an internal or external malicious actor.
    To prevent this vulnerability, enforce authentication when connecting to a database
    by using environment variables to securely provide credentials or retrieving them
    from a secure vault or HSM (Hardware Security Module).
  severity: WARNING
  metadata:
    likelihood: LOW
    impact: MEDIUM
    confidence: HIGH
    interfile: true
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-287: Improper Authentication'
    cwe2021-top25: true
    cwe2022-top25: true
    owasp:
    - A07:2021 - Identification and Authentication Failures
    - A02:2017 - Broken Authentication
    references:
    - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html
    technology:
    - Sequelize
    - Nodejs
    - Secrets
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Improper Authentication
    source: https://semgrep.dev/r/javascript.sequelize.node-sequelize-empty-password-argument.node-sequelize-empty-password-argument
    shortlink: https://sg.run/dLY0
    semgrep.dev:
      rule:
        r_id: 37934
        rv_id: 111696
        rule_id: oqURpr
        version_id: RGTDRJW
        url: https://semgrep.dev/playground/r/RGTDRJW/javascript.sequelize.node-sequelize-empty-password-argument.node-sequelize-empty-password-argument
        origin: pro_rules
  languages:
  - js
  - ts
  patterns:
  - pattern-either:
    - pattern-inside: |
        $SQL = require('$IMPORT')
        ...
    - pattern-inside: |
        import $SQL from '$IMPORT'
        ...
    - pattern-inside: |
        import * as $SQL from '$IMPORT'
        ...
    - pattern-inside: |
        import {...,$SQL,...} from '$IMPORT'
        ...
  - metavariable-regex:
      metavariable: $IMPORT
      regex: ^(sequelize)$
  - patterns:
    - pattern-inside: |
        new $SQL($DB, $USER, "", $OPTS)
    - pattern: |
        new $SQL($DB, $USER, $PWD, $OPTS)
    - focus-metavariable: $PWD
