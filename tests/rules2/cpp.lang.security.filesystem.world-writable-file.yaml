rules:
- id: cpp.lang.security.filesystem.world-writable-file.world-writable-file
  message: This call makes a world-writable file which allows any user on a machine
    to write to the file. This may allow attackers to influence the behaviour of this
    process by writing to the file.
  severity: WARNING
  metadata:
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: HIGH
    category: security
    subcategory:
    - vuln
    cert:
    - C
    - C++
    - FIO06-C
    - L3
    cwe:
    - 'CWE-732: Incorrect Permission Assignment for Critical Resource'
    cwe2020-top25: true
    cwe2021-top25: true
    functional-categories:
    - file::sink::file-access
    references:
    - https://wiki.sei.cmu.edu/confluence/display/c/FIO06-C.+Create+files+with+appropriate+access+permissions
    technology:
    - cpp
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - Improper Authorization
    source: https://semgrep.dev/r/cpp.lang.security.filesystem.world-writable-file.world-writable-file
    shortlink: https://sg.run/j2o4A
    semgrep.dev:
      rule:
        r_id: 114765
        rv_id: 257376
        rule_id: x8UK8Zp
        version_id: xyTAL43
        url: https://semgrep.dev/playground/r/xyTAL43/cpp.lang.security.filesystem.world-writable-file.world-writable-file
        origin: pro_rules
  languages:
  - cpp
  - c
  min-version: 1.59.0
  patterns:
  - pattern-either:
    - pattern-either:
      - patterns:
        - pattern: chmod($TARGET, $MODE)
        - focus-metavariable: $MODE
        - metavariable-comparison:
            comparison: int($MODE) & 2 == 2
            metavariable: $MODE
      - patterns:
        - pattern: chmod($TARGET, $MODE)
        - focus-metavariable: $MODE
        - metavariable-regex:
            metavariable: $MODE
            regex: (\s*S_I[A-Z]{4}\s*\|)*S_I[A-Z]{4}
        - metavariable-regex:
            metavariable: $MODE
            regex: .*\bS_IWOTH\b.*
    - pattern-either:
      - patterns:
        - pattern: fchmod($TARGET, $MODE)
        - focus-metavariable: $MODE
        - metavariable-comparison:
            comparison: int($MODE) & 2 == 2
            metavariable: $MODE
      - patterns:
        - pattern: fchmod($TARGET, $MODE)
        - focus-metavariable: $MODE
        - metavariable-regex:
            metavariable: $MODE
            regex: (\s*S_I[A-Z]{4}\s*\|)*S_I[A-Z]{4}
        - metavariable-regex:
            metavariable: $MODE
            regex: .*\bS_IWOTH\b.*
    - pattern-either:
      - patterns:
        - pattern: fchmodat($DIRFD, $FILENAME, $MODE, ...)
        - focus-metavariable: $MODE
        - metavariable-comparison:
            comparison: int($MODE) & 2 == 2
            metavariable: $MODE
      - patterns:
        - pattern: fchmodat($DIRFD, $FILENAME, $MODE, ...)
        - focus-metavariable: $MODE
        - metavariable-regex:
            metavariable: $MODE
            regex: (\s*S_I[A-Z]{4}\s*\|)*S_I[A-Z]{4}
        - metavariable-regex:
            metavariable: $MODE
            regex: .*\bS_IWOTH\b.*
    - pattern-either:
      - patterns:
        - pattern: open($PATH, $OFLAG, $MODE)
        - focus-metavariable: $MODE
        - metavariable-comparison:
            comparison: int($MODE) & 2 == 2
            metavariable: $MODE
      - patterns:
        - pattern: open($PATH, $OFLAG, $MODE)
        - focus-metavariable: $MODE
        - metavariable-regex:
            metavariable: $MODE
            regex: (\s*S_I[A-Z]{4}\s*\|)*S_I[A-Z]{4}
        - metavariable-regex:
            metavariable: $MODE
            regex: .*\bS_IWOTH\b.*
    - pattern-either:
      - patterns:
        - pattern: openat($FD, $PATH, $OFLAG, $MODE)
        - focus-metavariable: $MODE
        - metavariable-comparison:
            comparison: int($MODE) & 2 == 2
            metavariable: $MODE
      - patterns:
        - pattern: openat($FD, $PATH, $OFLAG, $MODE)
        - focus-metavariable: $MODE
        - metavariable-regex:
            metavariable: $MODE
            regex: (\s*S_I[A-Z]{4}\s*\|)*S_I[A-Z]{4}
        - metavariable-regex:
            metavariable: $MODE
            regex: .*\bS_IWOTH\b.*
    - pattern-either:
      - patterns:
        - pattern: creat($PATH, $MODE)
        - focus-metavariable: $MODE
        - metavariable-comparison:
            comparison: int($MODE) & 2 == 2
            metavariable: $MODE
      - patterns:
        - pattern: creat($PATH, $MODE)
        - focus-metavariable: $MODE
        - metavariable-regex:
            metavariable: $MODE
            regex: (\s*S_I[A-Z]{4}\s*\|)*S_I[A-Z]{4}
        - metavariable-regex:
            metavariable: $MODE
            regex: .*\bS_IWOTH\b.*
  - pattern-not-inside: |
      umask(...);
      ...
