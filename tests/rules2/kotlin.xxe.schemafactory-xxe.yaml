rules:
- id: kotlin.xxe.schemafactory-xxe.schemafactory-xxe
  message: 'The application is using an XML parser that has not been safely configured.
    This might lead to XML External Entity (XXE) vulnerabilities when parsing user-controlled
    input. An attacker can include document type definitions (DTDs) which can interact
    with internal or external hosts. XXE can lead to other vulnerabilities, such as
    Local File Inclusion (LFI), Remote Code Execution (RCE), and Server-side request
    forgery (SSRF), depending on the application configuration. An attacker can also
    use DTDs to expand recursively, leading to a Denial-of-Service (DoS) attack, also
    known as a `Billion Laughs Attack`. It is our recommendation to secure this parser
    against XXE attacks by configuring $FACTORY with `$FACTORY.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING,
    true)`. Alternatively, the following configurations also provide protection against
    XXE attacks. `$FACTORY.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, "")` `$FACTORY.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA,
    "")`. The best defense against XXE is to have an XML parser that supports disabling
    DTDs. Limiting the use of external entities from the start can prevent the parser
    from being used to process untrusted XML files. Reducing dependencies on external
    resources is also a good practice for performance reasons. It is difficult to
    guarantee that even a trusted XML file on your server or during transmission has
    not been tampered with by a malicious third-party. For more information, see:
    [Java XXE prevention](https://semgrep.dev/docs/cheat-sheets/java-xxe/)'
  severity: ERROR
  metadata:
    likelihood: MEDIUM
    impact: HIGH
    confidence: MEDIUM
    category: security
    subcategory:
    - vuln
    cwe:
    - 'CWE-776: Improper Restriction of Recursive Entity References in DTDs (''XML
      Entity Expansion'')'
    functional-categories:
    - xml::sink::xml-parser::javax.xml
    owasp:
    - A04:2017 - XML External Entities (XXE)
    - A05:2021 - Security Misconfiguration
    references:
    - https://blog.sonarsource.com/secure-xml-processor/
    - https://blog.sonarsource.com/understanding-xxe-vulnerabilities/
    - https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html
    - https://cwe.mitre.org/data/definitions/776.html
    - https://docs.oracle.com/en/java/javase/13/security/java-api-xml-processing-jaxp-security-guide.html#GUID-D97A1F1D-8DDF-4D19-A7E5-99099F27346E
    - https://github.com/returntocorp/java-xxe-research
    - https://owasp.org/Top10/A05_2021-Security_Misconfiguration
    - https://rules.sonarsource.com/java/type/Vulnerability/RSPEC-2755
    - https://semgrep.dev/blog/2022/xml-security-in-java
    - https://semgrep.dev/docs/cheat-sheets/java-xxe/
    technology:
    - kotlin
    - xml
    license: Copyright 2023 Semgrep, Inc.
    vulnerability_class:
    - XML Injection
    source: https://semgrep.dev/r/kotlin.xxe.schemafactory-xxe.schemafactory-xxe
    shortlink: https://sg.run/3PRG
    semgrep.dev:
      rule:
        r_id: 59587
        rv_id: 229328
        rule_id: KxUEqJ
        version_id: o5Tkq5X
        url: https://semgrep.dev/playground/r/o5Tkq5X/kotlin.xxe.schemafactory-xxe.schemafactory-xxe
        origin: pro_rules
  languages:
  - kotlin
  patterns:
  - pattern: $PARSER = $FACTORY.newSchema(...)
  - pattern-inside: |
      $FACTORY = SchemaFactory.newInstance(...)
      ...
      $PARSER = $FACTORY.newSchema(...)
  - pattern-not-inside: |
      $FACTORY = ...
      ...
      $FACTORY.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true)
      ...
      $PARSER = $FACTORY.newSchema(...)
  - pattern-not-inside: |
      $FACTORY = ...
      ...
      $FACTORY.setFeature("=~/.*secure-processing.*/", true)
      ...
      $PARSER = $FACTORY.newSchema(...)
  - pattern-not-inside: |
      $FACTORY = ...
      ...
      $FACTORY.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, "")
      ...
      $PARSER = $FACTORY.newSchema(...)
  - pattern-not-inside: |
      $FACTORY = ...
      ...
      $FACTORY.setProperty("=~/.*accessExternalDTD.*/", "")
      ...
      $PARSER = $FACTORY.newSchema(...)
